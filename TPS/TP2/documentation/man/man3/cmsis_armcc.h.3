.TH "SDK/CMSIS/cmsis_armcc.h" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SDK/CMSIS/cmsis_armcc.h \- CMSIS compiler ARMCC (Arm Compiler 5) header file\&.  

.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fB__ASM\fP   __asm"
.br
.ti -1c
.RI "#define \fB__INLINE\fP   __inline"
.br
.ti -1c
.RI "#define \fB__STATIC_INLINE\fP   static __inline"
.br
.ti -1c
.RI "#define \fB__STATIC_FORCEINLINE\fP   static __forceinline"
.br
.ti -1c
.RI "#define \fB__NO_RETURN\fP   __declspec(noreturn)"
.br
.ti -1c
.RI "#define \fB__USED\fP   \fB__attribute__\fP((used))"
.br
.ti -1c
.RI "#define \fB__WEAK\fP   \fB__attribute__\fP((weak))"
.br
.ti -1c
.RI "#define \fB__PACKED\fP   \fB__attribute__\fP((packed))"
.br
.ti -1c
.RI "#define \fB__PACKED_STRUCT\fP   __packed struct"
.br
.ti -1c
.RI "#define \fB__PACKED_UNION\fP   __packed union"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT32\fP(x)   (*((__packed uint32_t *)(x)))"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT16_WRITE\fP(addr,  val)   ((*((__packed uint16_t *)(addr))) = (val))"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT16_READ\fP(addr)   (*((const __packed uint16_t *)(addr)))"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT32_WRITE\fP(addr,  val)   ((*((__packed uint32_t *)(addr))) = (val))"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT32_READ\fP(addr)   (*((const __packed uint32_t *)(addr)))"
.br
.ti -1c
.RI "#define \fB__ALIGNED\fP(x)   \fB__attribute__\fP((aligned(x)))"
.br
.ti -1c
.RI "#define \fB__RESTRICT\fP   __restrict"
.br
.ti -1c
.RI "#define \fB__NOP\fP   __nop"
.br
.RI "No Operation\&. "
.ti -1c
.RI "#define \fB__WFI\fP   __wfi"
.br
.RI "Wait For Interrupt\&. "
.ti -1c
.RI "#define \fB__WFE\fP   __wfe"
.br
.RI "Wait For Event\&. "
.ti -1c
.RI "#define \fB__SEV\fP   __sev"
.br
.RI "Send Event\&. "
.ti -1c
.RI "#define \fB__ISB\fP()"
.br
.RI "Instruction Synchronization Barrier\&. "
.ti -1c
.RI "#define \fB__DSB\fP()"
.br
.RI "Data Synchronization Barrier\&. "
.ti -1c
.RI "#define \fB__DMB\fP()"
.br
.RI "Data Memory Barrier\&. "
.ti -1c
.RI "#define \fB__REV\fP   __rev"
.br
.RI "Reverse byte order (32 bit) "
.ti -1c
.RI "#define \fB__ROR\fP   __ror"
.br
.RI "Rotate Right in unsigned value (32 bit) "
.ti -1c
.RI "#define \fB__BKPT\fP(value)   __breakpoint(value)"
.br
.RI "Breakpoint\&. "
.ti -1c
.RI "#define \fB__CLZ\fP   __clz"
.br
.RI "Count leading zeros\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fB__STATIC_INLINE\fP uint32_t \fB__get_CONTROL\fP (void)"
.br
.RI "Enable IRQ Interrupts\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP void \fB__set_CONTROL\fP (uint32_t control)"
.br
.RI "Set Control Register\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP uint32_t \fB__get_IPSR\fP (void)"
.br
.RI "Get IPSR Register\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP uint32_t \fB__get_APSR\fP (void)"
.br
.RI "Get APSR Register\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP uint32_t \fB__get_xPSR\fP (void)"
.br
.RI "Get xPSR Register\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP uint32_t \fB__get_PSP\fP (void)"
.br
.RI "Get Process Stack Pointer\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP void \fB__set_PSP\fP (uint32_t topOfProcStack)"
.br
.RI "Set Process Stack Pointer\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP uint32_t \fB__get_MSP\fP (void)"
.br
.RI "Get Main Stack Pointer\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP void \fB__set_MSP\fP (uint32_t topOfMainStack)"
.br
.RI "Set Main Stack Pointer\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP uint32_t \fB__get_PRIMASK\fP (void)"
.br
.RI "Get Priority Mask\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP void \fB__set_PRIMASK\fP (uint32_t priMask)"
.br
.RI "Set Priority Mask\&. "
.ti -1c
.RI "\fB__attribute__\fP ((section('\&.rev16_text'))) __STATIC_INLINE \fB__ASM\fP uint32_t \fB__REV16\fP(uint32_t value)"
.br
.RI "Reverse byte order (16 bit) "
.ti -1c
.RI "\fB__attribute__\fP ((section('\&.revsh_text'))) __STATIC_INLINE \fB__ASM\fP int16_t \fB__REVSH\fP(int16_t value)"
.br
.RI "Reverse byte order (16 bit) "
.ti -1c
.RI "\fB__attribute__\fP ((always_inline)) \fB__STATIC_INLINE\fP uint32_t \fB__RBIT\fP(uint32_t value)"
.br
.RI "Reverse bit order of value\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "uint32_t \fBsat\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
CMSIS compiler ARMCC (Arm Compiler 5) header file\&. 


.PP
\fBVersion:\fP
.RS 4
V5\&.0\&.4 
.RE
.PP
\fBDate:\fP
.RS 4
10\&. January 2018 
.RE
.PP

.SH "Macro Definition Documentation"
.PP 
.SS "#define __ALIGNED(x)   \fB__attribute__\fP((aligned(x)))"

.SS "#define __ASM   __asm"

.SS "#define __INLINE   __inline"

.SS "#define __NO_RETURN   __declspec(noreturn)"

.SS "#define __PACKED   \fB__attribute__\fP((packed))"

.SS "#define __PACKED_STRUCT   __packed struct"

.SS "#define __PACKED_UNION   __packed union"

.SS "#define __RESTRICT   __restrict"

.SS "#define __STATIC_FORCEINLINE   static __forceinline"

.SS "#define __STATIC_INLINE   static __inline"

.SS "#define __UNALIGNED_UINT16_READ(addr)   (*((const __packed uint16_t *)(addr)))"

.SS "#define __UNALIGNED_UINT16_WRITE(addr, val)   ((*((__packed uint16_t *)(addr))) = (val))"

.SS "#define __UNALIGNED_UINT32(x)   (*((__packed uint32_t *)(x)))"

.SS "#define __UNALIGNED_UINT32_READ(addr)   (*((const __packed uint32_t *)(addr)))"

.SS "#define __UNALIGNED_UINT32_WRITE(addr, val)   ((*((__packed uint32_t *)(addr))) = (val))"

.SS "#define __USED   \fB__attribute__\fP((used))"

.SS "#define __WEAK   \fB__attribute__\fP((weak))"

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
