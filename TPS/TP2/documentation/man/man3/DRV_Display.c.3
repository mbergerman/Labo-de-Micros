.TH "drivers/DRV_Display.c" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
drivers/DRV_Display.c \- 7-segment display driver  

.SH SYNOPSIS
.br
.PP
\fC#include 'DRV_Display\&.h'\fP
.br
\fC#include 'DRV_Timers\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBselector_data_t\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBZERO\fP   0b0111111"
.br
.ti -1c
.RI "#define \fBONE\fP   0b0000110"
.br
.ti -1c
.RI "#define \fBTWO\fP   0b1011011"
.br
.ti -1c
.RI "#define \fBTHREE\fP   0b1001111"
.br
.ti -1c
.RI "#define \fBFOUR\fP   0b1100110"
.br
.ti -1c
.RI "#define \fBFIVE\fP   0b1101101"
.br
.ti -1c
.RI "#define \fBSIX\fP   0b1111101"
.br
.ti -1c
.RI "#define \fBSEVEN\fP   0b0000111"
.br
.ti -1c
.RI "#define \fBEIGHT\fP   0b1111111"
.br
.ti -1c
.RI "#define \fBNINE\fP   0b1101111"
.br
.ti -1c
.RI "#define \fBLET_C\fP   0b0111001"
.br
.ti -1c
.RI "#define \fBLET_A\fP   0b0110111"
.br
.ti -1c
.RI "#define \fBLET_R\fP   0b1010000"
.br
.ti -1c
.RI "#define \fBLET_D\fP   0b1011110"
.br
.ti -1c
.RI "#define \fBLET_P\fP   0b1110011"
.br
.ti -1c
.RI "#define \fBLET_I\fP   0b0110000"
.br
.ti -1c
.RI "#define \fBLET_N\fP   0b1010100"
.br
.ti -1c
.RI "#define \fBLET_E\fP   0b1111001"
.br
.ti -1c
.RI "#define \fBLET_F\fP   0b1110001"
.br
.ti -1c
.RI "#define \fBLET_U\fP   0b0111110"
.br
.ti -1c
.RI "#define \fBLET_H\fP   0b1110110"
.br
.ti -1c
.RI "#define \fBLET_O\fP   0b0111111"
.br
.ti -1c
.RI "#define \fBLET_T\fP   0b1111000"
.br
.ti -1c
.RI "#define \fBLET_G\fP   0b0111101"
.br
.ti -1c
.RI "#define \fBLET_L\fP   0b0111000"
.br
.ti -1c
.RI "#define \fBLET_S\fP   0b1101101"
.br
.ti -1c
.RI "#define \fBLET_J\fP   0b0011110"
.br
.ti -1c
.RI "#define \fBLET_Q\fP   0b1100111"
.br
.ti -1c
.RI "#define \fBLET_Y\fP   0b1101110"
.br
.ti -1c
.RI "#define \fBLET_B\fP   0b1111100"
.br
.ti -1c
.RI "#define \fBSYM__\fP   0b0001000"
.br
.ti -1c
.RI "#define \fBSYM_DASH\fP   0b1000000"
.br
.ti -1c
.RI "#define \fBSYM_BACK\fP   0b0100001"
.br
.ti -1c
.RI "#define \fBSYM_FRWD\fP   0b0001100"
.br
.ti -1c
.RI "#define \fBSEL0\fP   \fBPORTNUM2PIN\fP(\fBPC\fP,17)"
.br
.ti -1c
.RI "#define \fBSEL1\fP   \fBPORTNUM2PIN\fP(\fBPB\fP,9)"
.br
.ti -1c
.RI "#define \fBSSEGA\fP   \fBPORTNUM2PIN\fP(\fBPB\fP,18)"
.br
.ti -1c
.RI "#define \fBSSEGB\fP   \fBPORTNUM2PIN\fP(\fBPB\fP,19)"
.br
.ti -1c
.RI "#define \fBSSEGC\fP   \fBPORTNUM2PIN\fP(\fBPC\fP,1)"
.br
.ti -1c
.RI "#define \fBSSEGD\fP   \fBPORTNUM2PIN\fP(\fBPC\fP,8)"
.br
.ti -1c
.RI "#define \fBSSEGE\fP   \fBPORTNUM2PIN\fP(\fBPC\fP,9)"
.br
.ti -1c
.RI "#define \fBSSEGF\fP   \fBPORTNUM2PIN\fP(\fBPC\fP,0)"
.br
.ti -1c
.RI "#define \fBSSEGG\fP   \fBPORTNUM2PIN\fP(\fBPC\fP,7)"
.br
.ti -1c
.RI "#define \fBSSEGDP\fP   \fBPORTNUM2PIN\fP(\fBPC\fP,5)"
.br
.ti -1c
.RI "#define \fBVALIDCHARS\fP   54"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBselector_data_t\fP \fBselector_data_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBinitDisplay\fP ()"
.br
.RI "Initialize display\&. "
.ti -1c
.RI "void \fBdispClearBuffer\fP ()"
.br
.RI "Clears the display buffer\&. "
.ti -1c
.RI "void \fBdispClearChar\fP (int n)"
.br
.RI "Clears the character from position n from the buffer\&. "
.ti -1c
.RI "void \fBdispWriteChar\fP (int n, char character)"
.br
.RI "Sets character in position n of the buffer\&. "
.ti -1c
.RI "void \fBdispWriteBuffer\fP (int c, const char *word)"
.br
.RI "Sets word of length c in the buffer\&. "
.ti -1c
.RI "void \fBdispUpdateRefreshRate\fP (int refreshRate)"
.br
.RI "Updates the refresh rate of the display\&. "
.ti -1c
.RI "void \fBdispUpdateBrightness\fP (int brightness)"
.br
.RI "Updates the brightness of the display\&. "
.ti -1c
.RI "int \fBdispGetBrightness\fP ()"
.br
.RI "Returns current display brightness\&. "
.ti -1c
.RI "void \fBdispScrollLeft\fP ()"
.br
.RI "Scroll display to the left\&. "
.ti -1c
.RI "void \fBdispScrollRight\fP ()"
.br
.RI "Scroll display to the right\&. "
.ti -1c
.RI "void \fBdispStartAutoScroll\fP (int speed)"
.br
.RI "Initialize autoscroll with specified speed\&. "
.ti -1c
.RI "void \fBdispStopAutoScroll\fP ()"
.br
.RI "Stop autoscroll\&. "
.ti -1c
.RI "void \fBdispSetBufferPos\fP (int n)"
.br
.RI "Sets n as the starting print position for the buffer\&. "
.ti -1c
.RI "uint8_t \fBdispGetBufferPos\fP ()"
.br
.RI "Get starting print position\&. "
.ti -1c
.RI "void \fBdispSetDP\fP (int n)"
.br
.RI "Turns on the decimal point of the nth seven segment\&. "
.ti -1c
.RI "void \fBdispClearDP\fP (int n)"
.br
.RI "Turns off the decimal point of the nth seven segment\&. "
.ti -1c
.RI "void \fBdispToggleDP\fP (int n)"
.br
.RI "Toggles the decimal point of the nth seven segment\&. "
.in -1c
.SH "Detailed Description"
.PP 
7-segment display driver 


.PP
\fBAuthor:\fP
.RS 4
Grupo 1 
.RE
.PP

.SH "Macro Definition Documentation"
.PP 
.SS "#define EIGHT   0b1111111"

.SS "#define FIVE   0b1101101"

.SS "#define FOUR   0b1100110"

.SS "#define LET_A   0b0110111"

.SS "#define LET_B   0b1111100"

.SS "#define LET_C   0b0111001"

.SS "#define LET_D   0b1011110"

.SS "#define LET_E   0b1111001"

.SS "#define LET_F   0b1110001"

.SS "#define LET_G   0b0111101"

.SS "#define LET_H   0b1110110"

.SS "#define LET_I   0b0110000"

.SS "#define LET_J   0b0011110"

.SS "#define LET_L   0b0111000"

.SS "#define LET_N   0b1010100"

.SS "#define LET_O   0b0111111"

.SS "#define LET_P   0b1110011"

.SS "#define LET_Q   0b1100111"

.SS "#define LET_R   0b1010000"

.SS "#define LET_S   0b1101101"

.SS "#define LET_T   0b1111000"

.SS "#define LET_U   0b0111110"

.SS "#define LET_Y   0b1101110"

.SS "#define NINE   0b1101111"

.SS "#define ONE   0b0000110"

.SS "#define SEL0   \fBPORTNUM2PIN\fP(\fBPC\fP,17)"

.SS "#define SEL1   \fBPORTNUM2PIN\fP(\fBPB\fP,9)"

.SS "#define SEVEN   0b0000111"

.SS "#define SIX   0b1111101"

.SS "#define SSEGA   \fBPORTNUM2PIN\fP(\fBPB\fP,18)"

.SS "#define SSEGB   \fBPORTNUM2PIN\fP(\fBPB\fP,19)"

.SS "#define SSEGC   \fBPORTNUM2PIN\fP(\fBPC\fP,1)"

.SS "#define SSEGD   \fBPORTNUM2PIN\fP(\fBPC\fP,8)"

.SS "#define SSEGDP   \fBPORTNUM2PIN\fP(\fBPC\fP,5)"

.SS "#define SSEGE   \fBPORTNUM2PIN\fP(\fBPC\fP,9)"

.SS "#define SSEGF   \fBPORTNUM2PIN\fP(\fBPC\fP,0)"

.SS "#define SSEGG   \fBPORTNUM2PIN\fP(\fBPC\fP,7)"

.SS "#define SYM__   0b0001000"

.SS "#define SYM_BACK   0b0100001"

.SS "#define SYM_DASH   0b1000000"

.SS "#define SYM_FRWD   0b0001100"

.SS "#define THREE   0b1001111"

.SS "#define TWO   0b1011011"

.SS "#define VALIDCHARS   54"

.SS "#define ZERO   0b0111111"

.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBselector_data_t\fP \fBselector_data_t\fP"

.SH "Function Documentation"
.PP 
.SS "void dispClearBuffer ()"

.PP
Clears the display buffer\&. 
.SS "void dispClearChar (int n)"

.PP
Clears the character from position n from the buffer\&. 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP Index of char to clear 
.RE
.PP

.SS "void dispClearDP (int n)"

.PP
Turns off the decimal point of the nth seven segment\&. 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP DP index = 0, 1, 2, 3 
.RE
.PP

.SS "int dispGetBrightness ()"

.PP
Returns current display brightness\&. 
.PP
\fBReturns:\fP
.RS 4
brightness value 
.RE
.PP

.SS "uint8_t dispGetBufferPos ()"

.PP
Get starting print position\&. 
.SS "void dispScrollLeft ()"

.PP
Scroll display to the left\&. 
.SS "void dispScrollRight ()"

.PP
Scroll display to the right\&. 
.SS "void dispSetBufferPos (int n)"

.PP
Sets n as the starting print position for the buffer\&. 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP New buffer position 
.RE
.PP

.SS "void dispSetDP (int n)"

.PP
Turns on the decimal point of the nth seven segment\&. 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP DP index = 0, 1, 2, 3 
.RE
.PP

.SS "void dispStartAutoScroll (int speed)"

.PP
Initialize autoscroll with specified speed\&. 
.PP
\fBParameters:\fP
.RS 4
\fIspeed\fP Scroll speed 
.RE
.PP

.SS "void dispStopAutoScroll ()"

.PP
Stop autoscroll\&. 
.SS "void dispToggleDP (int n)"

.PP
Toggles the decimal point of the nth seven segment\&. 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP DP index = 0, 1, 2, 3 
.RE
.PP

.SS "void dispUpdateBrightness (int brightness)"

.PP
Updates the brightness of the display\&. 
.PP
\fBParameters:\fP
.RS 4
\fIbrightness\fP brightness: int between one and nine 
.RE
.PP

.SS "void dispUpdateRefreshRate (int refreshRate)"

.PP
Updates the refresh rate of the display\&. 
.PP
\fBParameters:\fP
.RS 4
\fIrefreshRate\fP New refresh rate 
.RE
.PP

.SS "void dispWriteBuffer (int c, const char * word)"

.PP
Sets word of length c in the buffer\&. 
.PP
\fBParameters:\fP
.RS 4
\fIc\fP Length of word 
.br
\fIword\fP Word to write 
.RE
.PP

.SS "void dispWriteChar (int n, char character)"

.PP
Sets character in position n of the buffer\&. 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP Index of char to write 
.br
\fIcharacter\fP Value of char 
.RE
.PP

.SS "void initDisplay ()"

.PP
Initialize display\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
