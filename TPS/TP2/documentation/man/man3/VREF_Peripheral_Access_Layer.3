.TH "VREF_Peripheral_Access_Layer" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
VREF_Peripheral_Access_Layer
.SH SYNOPSIS
.br
.PP
.SS "Modules"

.in +1c
.ti -1c
.RI "\fBVREF Register Masks\fP"
.br
.ti -1c
.RI "\fBWDOG Peripheral Access Layer\fP"
.br
.ti -1c
.RI "\fBMacros for use with bit field definitions (xxx_SHIFT, xxx_MASK)\&.\fP"
.br
.ti -1c
.RI "\fBSDK Compatibility\fP"
.br
.in -1c
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBVREF_Type\fP"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSC1\fP [2]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCFG1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCFG2\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBR\fP [2]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCV1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCV2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSC2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSC3\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBOFS\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPG\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMG\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLPD\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLPS\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLP4\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLP3\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLP2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLP1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLP0\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLMD\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLMS\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLM4\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLM3\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLM2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLM1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLM0\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMPRA\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [28]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRA\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRB\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRC\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRD\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [16]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRE\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRF\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRG\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRH\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRI\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRJ\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRK\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRM\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRN\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRO\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRP\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_2\fP [16]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPACRU\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPRS\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [12]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCRS\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [236]"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBPRS\fP"
.br
.ti -1c
.RI "   uint8_t \fBRESERVED_0\fP [12]"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBCRS\fP"
.br
.ti -1c
.RI "   uint8_t \fBRESERVED_1\fP [236]"
.br
.ti -1c
.RI "} \fBSLAVE\fP [5]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMGPCR0\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMGPCR1\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_2\fP [252]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMGPCR2\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_3\fP [252]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMGPCR3\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_4\fP [252]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMGPCR4\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_5\fP [252]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMGPCR5\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMCR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCTRL1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTIMER\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRXMGMASK\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRX14MASK\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRX15MASK\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBECR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBESR1\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBIMASK1\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_2\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBIFLAG1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCTRL2\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBESR2\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_3\fP [8]"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBCRCR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRXFGMASK\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRXFIR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_4\fP [48]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCS\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBID\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBWORD0\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBWORD1\fP"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBCS\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBID\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBWORD0\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBWORD1\fP"
.br
.ti -1c
.RI "} \fBMB\fP [16]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_5\fP [1792]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRXIMR\fP [16]"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBDIRECT\fP [16]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [2048]"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBLDR_CASR\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBLDR_CAA\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBLDR_CA\fP [9]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [20]"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBSTR_CASR\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBSTR_CAA\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBSTR_CA\fP [9]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_2\fP [20]"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBADR_CASR\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBADR_CAA\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBADR_CA\fP [9]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_3\fP [20]"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBRADR_CASR\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBRADR_CAA\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBRADR_CA\fP [9]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_4\fP [84]"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBXOR_CASR\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBXOR_CAA\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBXOR_CA\fP [9]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_5\fP [20]"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBROTL_CASR\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBROTL_CAA\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBROTL_CA\fP [9]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_6\fP [276]"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBAESC_CASR\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBAESC_CAA\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBAESC_CA\fP [9]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_7\fP [20]"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBAESIC_CASR\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBAESIC_CAA\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBAESIC_CA\fP [9]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCR0\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCR1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFPR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBSCR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDACCR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBMUXCR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCGH1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCGL1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCGH2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCGL2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBOC\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBMSC\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCMD1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCMD2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCMD3\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCMD4\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBPPS\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDMA\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBDATAL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBDATAH\fP"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__IO\fP uint16_t \fBDATAL\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint16_t \fBDATAH\fP"
.br
.ti -1c
.RI "} \fBACCESS16BIT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBDATA\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDATALL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDATALU\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDATAHL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDATAHU\fP"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__IO\fP uint8_t \fBDATALL\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint8_t \fBDATALU\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint8_t \fBDATAHL\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint8_t \fBDATAHU\fP"
.br
.ti -1c
.RI "} \fBACCESS8BIT\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   struct {"
.br
.ti -1c
.RI "      \fB__IO\fP uint16_t \fBDATAL\fP"
.br
.ti -1c
.RI "      \fB__IO\fP uint16_t \fBDATAH\fP"
.br
.ti -1c
.RI "   } \fBACCESS16BIT\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBDATA\fP"
.br
.ti -1c
.RI "   struct {"
.br
.ti -1c
.RI "      \fB__IO\fP uint8_t \fBDATALL\fP"
.br
.ti -1c
.RI "      \fB__IO\fP uint8_t \fBDATALU\fP"
.br
.ti -1c
.RI "      \fB__IO\fP uint8_t \fBDATAHL\fP"
.br
.ti -1c
.RI "      \fB__IO\fP uint8_t \fBDATAHU\fP"
.br
.ti -1c
.RI "   } \fBACCESS8BIT\fP"
.br
.ti -1c
.RI "}; "
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBGPOLYL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBGPOLYH\fP"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__IO\fP uint16_t \fBGPOLYL\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint16_t \fBGPOLYH\fP"
.br
.ti -1c
.RI "} \fBGPOLY_ACCESS16BIT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBGPOLY\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBGPOLYLL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBGPOLYLU\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBGPOLYHL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBGPOLYHU\fP"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__IO\fP uint8_t \fBGPOLYLL\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint8_t \fBGPOLYLU\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint8_t \fBGPOLYHL\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint8_t \fBGPOLYHU\fP"
.br
.ti -1c
.RI "} \fBGPOLY_ACCESS8BIT\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   struct {"
.br
.ti -1c
.RI "      \fB__IO\fP uint16_t \fBGPOLYL\fP"
.br
.ti -1c
.RI "      \fB__IO\fP uint16_t \fBGPOLYH\fP"
.br
.ti -1c
.RI "   } \fBGPOLY_ACCESS16BIT\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBGPOLY\fP"
.br
.ti -1c
.RI "   struct {"
.br
.ti -1c
.RI "      \fB__IO\fP uint8_t \fBGPOLYLL\fP"
.br
.ti -1c
.RI "      \fB__IO\fP uint8_t \fBGPOLYLU\fP"
.br
.ti -1c
.RI "      \fB__IO\fP uint8_t \fBGPOLYHL\fP"
.br
.ti -1c
.RI "      \fB__IO\fP uint8_t \fBGPOLYHU\fP"
.br
.ti -1c
.RI "   } \fBGPOLY_ACCESS8BIT\fP"
.br
.ti -1c
.RI "}; "
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCTRL\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCTRLHU\fP"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint8_t \fBRESERVED_0\fP [3]"
.br
.ti -1c
.RI "   \fB__IO\fP uint8_t \fBCTRLHU\fP"
.br
.ti -1c
.RI "} \fBCTRL_ACCESS8BIT\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBCTRL\fP"
.br
.ti -1c
.RI "   struct {"
.br
.ti -1c
.RI "      uint8_t \fBRESERVED_0\fP [3]"
.br
.ti -1c
.RI "      \fB__IO\fP uint8_t \fBCTRLHU\fP"
.br
.ti -1c
.RI "   } \fBCTRL_ACCESS8BIT\fP"
.br
.ti -1c
.RI "}; "
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDATL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDATH\fP"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__IO\fP uint8_t \fBDATL\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint8_t \fBDATH\fP"
.br
.ti -1c
.RI "} \fBDAT\fP [16]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBSR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC0\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCR\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBES\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBERQ\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBEEI\fP"
.br
.ti -1c
.RI "\fB__O\fP uint8_t \fBCEEI\fP"
.br
.ti -1c
.RI "\fB__O\fP uint8_t \fBSEEI\fP"
.br
.ti -1c
.RI "\fB__O\fP uint8_t \fBCERQ\fP"
.br
.ti -1c
.RI "\fB__O\fP uint8_t \fBSERQ\fP"
.br
.ti -1c
.RI "\fB__O\fP uint8_t \fBCDNE\fP"
.br
.ti -1c
.RI "\fB__O\fP uint8_t \fBSSRT\fP"
.br
.ti -1c
.RI "\fB__O\fP uint8_t \fBCERR\fP"
.br
.ti -1c
.RI "\fB__O\fP uint8_t \fBCINT\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_2\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBINT\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_3\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBERR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_4\fP [4]"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBHRS\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_5\fP [200]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDCHPRI3\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDCHPRI2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDCHPRI1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDCHPRI0\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDCHPRI7\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDCHPRI6\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDCHPRI5\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDCHPRI4\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDCHPRI11\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDCHPRI10\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDCHPRI9\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDCHPRI8\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDCHPRI15\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDCHPRI14\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDCHPRI13\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBDCHPRI12\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_6\fP [3824]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSADDR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBSOFF\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBATTR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBNBYTES_MLNO\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBNBYTES_MLOFFNO\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBNBYTES_MLOFFYES\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBNBYTES_MLNO\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBNBYTES_MLOFFNO\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBNBYTES_MLOFFYES\fP"
.br
.ti -1c
.RI "} "
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSLAST\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBDADDR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBDOFF\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBCITER_ELINKNO\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBCITER_ELINKYES\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   \fB__IO\fP uint16_t \fBCITER_ELINKNO\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint16_t \fBCITER_ELINKYES\fP"
.br
.ti -1c
.RI "} "
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBDLAST_SGA\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBCSR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBBITER_ELINKNO\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBBITER_ELINKYES\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   \fB__IO\fP uint16_t \fBBITER_ELINKNO\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint16_t \fBBITER_ELINKYES\fP"
.br
.ti -1c
.RI "} "
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBSADDR\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint16_t \fBSOFF\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint16_t \fBATTR\fP"
.br
.ti -1c
.RI "   union {"
.br
.ti -1c
.RI "      \fB__IO\fP uint32_t \fBNBYTES_MLNO\fP"
.br
.ti -1c
.RI "      \fB__IO\fP uint32_t \fBNBYTES_MLOFFNO\fP"
.br
.ti -1c
.RI "      \fB__IO\fP uint32_t \fBNBYTES_MLOFFYES\fP"
.br
.ti -1c
.RI "   } "
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBSLAST\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBDADDR\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint16_t \fBDOFF\fP"
.br
.ti -1c
.RI "   union {"
.br
.ti -1c
.RI "      \fB__IO\fP uint16_t \fBCITER_ELINKNO\fP"
.br
.ti -1c
.RI "      \fB__IO\fP uint16_t \fBCITER_ELINKYES\fP"
.br
.ti -1c
.RI "   } "
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBDLAST_SGA\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint16_t \fBCSR\fP"
.br
.ti -1c
.RI "   union {"
.br
.ti -1c
.RI "      \fB__IO\fP uint16_t \fBBITER_ELINKNO\fP"
.br
.ti -1c
.RI "      \fB__IO\fP uint16_t \fBBITER_ELINKYES\fP"
.br
.ti -1c
.RI "   } "
.br
.ti -1c
.RI "} \fBTCD\fP [16]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCHCFG\fP [16]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBEIR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBEIMR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRDAR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTDAR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_2\fP [12]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBECR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_3\fP [24]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMMFR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMSCR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_4\fP [28]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMIBC\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_5\fP [28]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRCR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_6\fP [60]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTCR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_7\fP [28]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPALR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPAUR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBOPD\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_8\fP [40]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBIAUR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBIALR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBGAUR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBGALR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_9\fP [28]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTFWR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_10\fP [56]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRDSR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTDSR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMRBR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_11\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRSFL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRSEM\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRAEM\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRAFL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTSEM\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTAEM\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTAFL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTIPG\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBFTRL\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_12\fP [12]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTACC\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRACC\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_13\fP [60]"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_PACKETS\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_BC_PKT\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_MC_PKT\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_CRC_ALIGN\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_UNDERSIZE\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_OVERSIZE\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_FRAG\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_JAB\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_COL\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_P64\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_P65TO127\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_P128TO255\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_P256TO511\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_P512TO1023\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_P1024TO2047\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_P_GTE2048\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_T_OCTETS\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_14\fP [4]"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_T_FRAME_OK\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_T_1COL\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_T_MCOL\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_T_DEF\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_T_LCOL\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_T_EXCOL\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_T_MACERR\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_T_CSERR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_15\fP [4]"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_T_FDXFC\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_T_OCTETS_OK\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_16\fP [12]"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_R_PACKETS\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_R_BC_PKT\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_R_MC_PKT\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_R_CRC_ALIGN\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_R_UNDERSIZE\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_R_OVERSIZE\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_R_FRAG\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_R_JAB\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_17\fP [4]"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_R_P64\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_R_P65TO127\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_R_P128TO255\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_R_P256TO511\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_R_P512TO1023\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_R_P1024TO2047\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_R_P_GTE2048\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRMON_R_OCTETS\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_R_DROP\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_R_FRAME_OK\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_R_CRC\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_R_ALIGN\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_R_MACERR\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_R_FDXFC\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBIEEE_R_OCTETS_OK\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_18\fP [284]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBATCR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBATVR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBATOFF\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBATPER\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBATCOR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBATINC\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBATSTMP\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_19\fP [488]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTGSR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTCSR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTCCR\fP"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBTCSR\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBTCCR\fP"
.br
.ti -1c
.RI "} \fBCHANNEL\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCTRL\fP"
.br
.ti -1c
.RI "\fB__O\fP uint8_t \fBSERV\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCMPL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCMPH\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCSAR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCSMR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCSCR\fP"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBCSAR\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBCSMR\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBCSCR\fP"
.br
.ti -1c
.RI "} \fBCS\fP [6]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [24]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCSPMCR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPFAPR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPFB0CR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPFB1CR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [244]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTAGVDW0S\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTAGVDW1S\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTAGVDW2S\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTAGVDW3S\fP [4]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [192]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBDATA_U\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBDATA_L\fP"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBDATA_U\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBDATA_L\fP"
.br
.ti -1c
.RI "} \fBSET\fP [4][4]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFSTAT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFCNFG\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBFSEC\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBFOPT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFCCOB3\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFCCOB2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFCCOB1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFCCOB0\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFCCOB7\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFCCOB6\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFCCOB5\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFCCOB4\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFCCOBB\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFCCOBA\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFCCOB9\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFCCOB8\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFPROT3\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFPROT2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFPROT1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFPROT0\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [2]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFEPROT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFDPROT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSC\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCNT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMOD\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCnSC\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCnV\fP"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBCnSC\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBCnV\fP"
.br
.ti -1c
.RI "} \fBCONTROLS\fP [8]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCNTIN\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSTATUS\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMODE\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSYNC\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBOUTINIT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBOUTMASK\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCOMBINE\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBDEADTIME\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBEXTTRIG\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPOL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBFMS\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBFILTER\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBFLTCTRL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBQDCTRL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCONF\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBFLTPOL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSYNCONF\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBINVCTRL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSWOCTRL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPWMLOAD\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPDOR\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBPSOR\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBPCOR\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBPTOR\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBPDIR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPDDR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBA1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBF\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBS\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBD\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFLT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBRA\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBSMB\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBA2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBSLTH\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBSLTL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTCSR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTCR1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTCR2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTCR3\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTCR4\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTCR5\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [8]"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBTDR\fP [2]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [24]"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBTFR\fP [2]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_2\fP [24]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTMR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_3\fP [28]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRCSR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRCR1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRCR2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRCR3\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRCR4\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRCR5\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_4\fP [8]"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRDR\fP [2]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_5\fP [24]"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRFR\fP [2]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_6\fP [24]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRMR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_7\fP [28]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMCR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMDR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBPE1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBPE2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBPE3\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBPE4\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBME\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBF1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBF2\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBF3\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFILT1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFILT2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBRST\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCSR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPSR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCMR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCNR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC3\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC4\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC5\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC6\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBS\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [1]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBSC\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [1]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBATCVH\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBATCVL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC7\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC8\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [8]"
.br
.ti -1c
.RI "\fB__I\fP uint16_t \fBPLASC\fP"
.br
.ti -1c
.RI "\fB__I\fP uint16_t \fBPLAMC\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBISCR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBETBCC\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBETBRL\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBETBCNT\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [16]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPID\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBBACKKEY3\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBBACKKEY2\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBBACKKEY1\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBBACKKEY0\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBBACKKEY7\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBBACKKEY6\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBBACKKEY5\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBBACKKEY4\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBFPROT3\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBFPROT2\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBFPROT1\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBFPROT0\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBFSEC\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBFOPT\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBFEPROT\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBFDPROT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSC\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMOD\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBCNT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBIDLY\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBC1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBS\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBDLY\fP [2]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [24]"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBC1\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBS\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBDLY\fP [2]"
.br
.ti -1c
.RI "   uint8_t \fBRESERVED_0\fP [24]"
.br
.ti -1c
.RI "} \fBCH\fP [2]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBINTC\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBINT\fP"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBINTC\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBINT\fP"
.br
.ti -1c
.RI "} \fBDAC\fP [2]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [48]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPOEN\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPODLY\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMCR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [252]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBLDVAL\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBCVAL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTCTRL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTFLG\fP"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBLDVAL\fP"
.br
.ti -1c
.RI "   \fB__I\fP uint32_t \fBCVAL\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBTCTRL\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBTFLG\fP"
.br
.ti -1c
.RI "} \fBCHANNEL\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBLVDSC1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBLVDSC2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBREGSC\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPCR\fP [32]"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBGPCLR\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBGPCHR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [24]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBISFR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [28]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBDFER\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBDFCR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBDFWR\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBSRS0\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBSRS1\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [2]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBRPFC\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBRPFW\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [1]"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBMR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBREG\fP [8]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBREG\fP [8]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCR\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBSR\fP"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBER\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBOR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTSR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTPR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTAR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTCR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBLR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBIER\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [2016]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBWAR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRAR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBDSADDR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBBLKATTR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCMDARG\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBXFERTYP\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBCMDRSP\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBDATPORT\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBPRSSTAT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPROCTL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSYSCTL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBIRQSTAT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBIRQSTATEN\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBIRQSIGEN\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBAC12ERR\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBHTCAPBLT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBWML\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [8]"
.br
.ti -1c
.RI "\fB__O\fP uint32_t \fBFEVT\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBADMAES\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBADSADDR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [100]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBVENDOR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMMCBOOT\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_2\fP [52]"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBHOSTVER\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSOPT1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSOPT1CFG\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [4092]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSOPT2\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSOPT4\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSOPT5\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_2\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSOPT7\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_3\fP [8]"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBSDID\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSCGC1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSCGC2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSCGC3\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSCGC4\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSCGC5\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSCGC6\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSCGC7\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLKDIV1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLKDIV2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBFCFG1\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBFCFG2\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBUIDH\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBUIDMH\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBUIDML\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBUIDL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBPMPROT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBPMCTRL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBVLLSCTRL\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBPMSTAT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBMCR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTCR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCTAR\fP [2]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCTAR_SLAVE\fP [1]"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBCTAR\fP [2]"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBCTAR_SLAVE\fP [1]"
.br
.ti -1c
.RI "}; "
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [24]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBSR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRSER\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPUSHR\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBPUSHR_SLAVE\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBPUSHR\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBPUSHR_SLAVE\fP"
.br
.ti -1c
.RI "}; "
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBPOPR\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBTXFR0\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBTXFR1\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBTXFR2\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBTXFR3\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_2\fP [48]"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRXFR0\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRXFR1\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRXFR2\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBRXFR3\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCESR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [12]"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBEAR\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBEDR\fP"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__I\fP uint32_t \fBEAR\fP"
.br
.ti -1c
.RI "   \fB__I\fP uint32_t \fBEDR\fP"
.br
.ti -1c
.RI "} \fBSP\fP [5]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [968]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBWORD\fP [12][4]"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_2\fP [832]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBRGDAAC\fP [12]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBBDH\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBBDL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC2\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBS1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBS2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC3\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBD\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBMA1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBMA2\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC4\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC5\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBED\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBMODEM\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBIR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [1]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBPFIFO\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCFIFO\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBSFIFO\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBTWFIFO\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBTCFIFO\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBRWFIFO\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBRCFIFO\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [1]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBC7816\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBIE7816\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBIS7816\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBWP7816T0\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBWP7816T1\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   \fB__IO\fP uint8_t \fBWP7816T0\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint8_t \fBWP7816T1\fP"
.br
.ti -1c
.RI "}; "
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBWN7816\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBWF7816\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBET7816\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBTL7816\fP"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBPERID\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [3]"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBIDCOMP\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_1\fP [3]"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBREV\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_2\fP [3]"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBADDINFO\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_3\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBOTGISTAT\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_4\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBOTGICR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_5\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBOTGSTAT\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_6\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBOTGCTL\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_7\fP [99]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBISTAT\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_8\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBINTEN\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_9\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBERRSTAT\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_10\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBERREN\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_11\fP [3]"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBSTAT\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_12\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCTL\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_13\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBADDR\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_14\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBBDTPAGE1\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_15\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFRMNUML\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_16\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBFRMNUMH\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_17\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBTOKEN\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_18\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBSOFTHLD\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_19\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBBDTPAGE2\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_20\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBBDTPAGE3\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_21\fP [11]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBENDPT\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [3]"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   \fB__IO\fP uint8_t \fBENDPT\fP"
.br
.ti -1c
.RI "   uint8_t \fBRESERVED_0\fP [3]"
.br
.ti -1c
.RI "} \fBENDPOINT\fP [16]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBUSBCTRL\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_22\fP [3]"
.br
.ti -1c
.RI "\fB__I\fP uint8_t \fBOBSERVE\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_23\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCONTROL\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_24\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBUSBTRC0\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_25\fP [7]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBUSBFRMADJUST\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_26\fP [43]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCLK_RECOVER_CTRL\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_27\fP [3]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCLK_RECOVER_IRC_EN\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_28\fP [23]"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBCLK_RECOVER_INT_STATUS\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCONTROL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBCLOCK\fP"
.br
.ti -1c
.RI "\fB__I\fP uint32_t \fBSTATUS\fP"
.br
.ti -1c
.RI "uint8_t \fBRESERVED_0\fP [4]"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTIMER0\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTIMER1\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTIMER2_BC11\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint32_t \fBTIMER2_BC12\fP"
.br
.ti -1c
.RI "union {"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBTIMER2_BC11\fP"
.br
.ti -1c
.RI "   \fB__IO\fP uint32_t \fBTIMER2_BC12\fP"
.br
.ti -1c
.RI "}; "
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBTRM\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint8_t \fBSC\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBSTCTRLH\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBSTCTRLL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBTOVALH\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBTOVALL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBWINH\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBWINL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBREFRESH\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBUNLOCK\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBTMROUTH\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBTMROUTL\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBRSTCNT\fP"
.br
.ti -1c
.RI "\fB__IO\fP uint16_t \fBPRESC\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Variable Documentation"
.PP 
.SS "union { \&.\&.\&. } "

.SS "union { \&.\&.\&. } "

.SS "union { \&.\&.\&. } "

.SS "union { \&.\&.\&. } "

.SS "union { \&.\&.\&. } "

.SS "union { \&.\&.\&. } "

.SS "union { \&.\&.\&. } "

.SS "union { \&.\&.\&. } "

.SS "union { \&.\&.\&. } "

.SS "union { \&.\&.\&. } "

.SS "\fB__IO\fP uint8_t A1"
I2C Address Register 1, offset: 0x0 
.SS "\fB__IO\fP uint8_t A2"
I2C Address Register 2, offset: 0x9 
.SS "\fB__I\fP uint32_t AC12ERR"
Auto CMD12 Error Status Register, offset: 0x3C 
.SS "struct { \&.\&.\&. }   ACCESS16BIT"

.SS "struct { \&.\&.\&. }   ACCESS16BIT"

.SS "struct { \&.\&.\&. }   ACCESS8BIT"

.SS "struct { \&.\&.\&. }   ACCESS8BIT"

.SS "\fB__I\fP uint8_t ADDINFO"
Peripheral Additional Info register, offset: 0xC 
.SS "\fB__IO\fP uint8_t ADDR"
Address register, offset: 0x98 
.SS "\fB__I\fP uint32_t ADMAES"
ADMA Error Status register, offset: 0x54 
.SS "\fB__O\fP uint32_t ADR_CA[9]"
General Purpose Register 0 - Add to register command\&.\&.General Purpose Register 8 - Add to register command, array offset: 0x8C8, array step: 0x4 
.SS "\fB__O\fP uint32_t ADR_CAA"
Accumulator register - Add to register command, offset: 0x8C4 
.SS "\fB__O\fP uint32_t ADR_CASR"
Status register - Add Register command, offset: 0x8C0 
.SS "\fB__IO\fP uint32_t ADSADDR"
ADMA System Addressregister, offset: 0x58 
.SS "\fB__O\fP uint32_t AESC_CA[9]"
General Purpose Register 0 - AES Column Operation command\&.\&.General Purpose Register 8 - AES Column Operation command, array offset: 0xB08, array step: 0x4 
.SS "\fB__O\fP uint32_t AESC_CAA"
Accumulator register - AES Column Operation command, offset: 0xB04 
.SS "\fB__O\fP uint32_t AESC_CASR"
Status register - AES Column Operation command, offset: 0xB00 
.SS "\fB__O\fP uint32_t AESIC_CA[9]"
General Purpose Register 0 - AES Inverse Column Operation command\&.\&.General Purpose Register 8 - AES Inverse Column Operation command, array offset: 0xB48, array step: 0x4 
.SS "\fB__O\fP uint32_t AESIC_CAA"
Accumulator register - AES Inverse Column Operation command, offset: 0xB44 
.SS "\fB__O\fP uint32_t AESIC_CASR"
Status register - AES Inverse Column Operation command, offset: 0xB40 
.SS "\fB__IO\fP uint32_t ATCOR"
Timer Correction Register, offset: 0x410 
.SS "\fB__IO\fP uint32_t ATCR"
Adjustable Timer Control Register, offset: 0x400 
.SS "\fB__IO\fP uint8_t ATCVH"
MCG Auto Trim Compare Value High Register, offset: 0xA 
.SS "\fB__IO\fP uint8_t ATCVL"
MCG Auto Trim Compare Value Low Register, offset: 0xB 
.SS "\fB__IO\fP uint32_t ATINC"
Time-Stamping Clock Period Register, offset: 0x414 
.SS "\fB__IO\fP uint32_t ATOFF"
Timer Offset Register, offset: 0x408 
.SS "\fB__IO\fP uint32_t ATPER"
Timer Period Register, offset: 0x40C 
.SS "\fB__I\fP uint32_t ATSTMP"
Timestamp of Last Transmitted Frame, offset: 0x418 
.SS "\fB__IO\fP uint16_t ATTR"
TCD Transfer Attributes, array offset: 0x1006, array step: 0x20 
.SS "\fB__IO\fP uint16_t ATTR"
TCD Transfer Attributes, array offset: 0x1006, array step: 0x20 
.SS "\fB__IO\fP uint32_t ATVR"
Timer Value Register, offset: 0x404 
.SS "\fB__I\fP uint8_t BACKKEY0"
Backdoor Comparison Key 0\&., offset: 0x3 
.SS "\fB__I\fP uint8_t BACKKEY1"
Backdoor Comparison Key 1\&., offset: 0x2 
.SS "\fB__I\fP uint8_t BACKKEY2"
Backdoor Comparison Key 2\&., offset: 0x1 
.SS "\fB__I\fP uint8_t BACKKEY3"
Backdoor Comparison Key 3\&., offset: 0x0 
.SS "\fB__I\fP uint8_t BACKKEY4"
Backdoor Comparison Key 4\&., offset: 0x7 
.SS "\fB__I\fP uint8_t BACKKEY5"
Backdoor Comparison Key 5\&., offset: 0x6 
.SS "\fB__I\fP uint8_t BACKKEY6"
Backdoor Comparison Key 6\&., offset: 0x5 
.SS "\fB__I\fP uint8_t BACKKEY7"
Backdoor Comparison Key 7\&., offset: 0x4 
.SS "\fB__IO\fP uint8_t BDH"
UART Baud Rate Registers: High, offset: 0x0 
.SS "\fB__IO\fP uint8_t BDL"
UART Baud Rate Registers: Low, offset: 0x1 
.SS "\fB__IO\fP uint8_t BDTPAGE1"
BDT Page register 1, offset: 0x9C 
.SS "\fB__IO\fP uint8_t BDTPAGE2"
BDT Page Register 2, offset: 0xB0 
.SS "\fB__IO\fP uint8_t BDTPAGE3"
BDT Page Register 3, offset: 0xB4 
.SS "\fB__IO\fP uint16_t BITER_ELINKNO"
TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), array offset: 0x101E, array step: 0x20 
.SS "\fB__IO\fP uint16_t BITER_ELINKNO"
TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), array offset: 0x101E, array step: 0x20 
.SS "\fB__IO\fP uint16_t BITER_ELINKYES"
TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), array offset: 0x101E, array step: 0x20 
.SS "\fB__IO\fP uint16_t BITER_ELINKYES"
TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), array offset: 0x101E, array step: 0x20 
.SS "\fB__IO\fP uint32_t BLKATTR"
Block Attributes register, offset: 0x4 
.SS "\fB__IO\fP uint8_t C0"
DAC Control Register, offset: 0x21 
.SS "\fB__IO\fP uint8_t C1"
DAC Control Register 1, offset: 0x22 
.SS "\fB__IO\fP uint8_t C1"
I2C Control Register 1, offset: 0x2 
.SS "\fB__IO\fP uint8_t C1"
MCG Control 1 Register, offset: 0x0 
.SS "\fB__IO\fP uint32_t C1"
Channel n Control register 1, array offset: 0x10, array step: 0x28 
.SS "\fB__IO\fP uint32_t C1"
Channel n Control register 1, array offset: 0x10, array step: 0x28 
.SS "\fB__IO\fP uint8_t C1"
UART Control Register 1, offset: 0x2 
.SS "\fB__IO\fP uint8_t C2"
DAC Control Register 2, offset: 0x23 
.SS "\fB__IO\fP uint8_t C2"
I2C Control Register 2, offset: 0x5 
.SS "\fB__IO\fP uint8_t C2"
MCG Control 2 Register, offset: 0x1 
.SS "\fB__IO\fP uint8_t C2"
UART Control Register 2, offset: 0x3 
.SS "\fB__IO\fP uint8_t C3"
MCG Control 3 Register, offset: 0x2 
.SS "\fB__IO\fP uint8_t C3"
UART Control Register 3, offset: 0x6 
.SS "\fB__IO\fP uint8_t C4"
MCG Control 4 Register, offset: 0x3 
.SS "\fB__IO\fP uint8_t C4"
UART Control Register 4, offset: 0xA 
.SS "\fB__IO\fP uint8_t C5"
MCG Control 5 Register, offset: 0x4 
.SS "\fB__IO\fP uint8_t C5"
UART Control Register 5, offset: 0xB 
.SS "\fB__IO\fP uint8_t C6"
MCG Control 6 Register, offset: 0x5 
.SS "\fB__IO\fP uint8_t C7"
MCG Control 7 Register, offset: 0xC 
.SS "\fB__IO\fP uint8_t C7816"
UART 7816 Control Register, offset: 0x18 
.SS "\fB__IO\fP uint8_t C8"
MCG Control 8 Register, offset: 0xD 
.SS "\fB__O\fP uint8_t CDNE"
Clear DONE Status Bit Register, offset: 0x1C 
.SS "\fB__O\fP uint8_t CEEI"
Clear Enable Error Interrupt Register, offset: 0x18 
.SS "\fB__O\fP uint8_t CERQ"
Clear Enable Request Register, offset: 0x1A 
.SS "\fB__O\fP uint8_t CERR"
Clear Error Register, offset: 0x1E 
.SS "\fB__IO\fP uint32_t CESR"
Control/Error Status Register, offset: 0x0 
.SS "\fB__IO\fP uint32_t CFG1"
ADC Configuration Register 1, offset: 0x8 
.SS "\fB__IO\fP uint32_t CFG2"
ADC Configuration Register 2, offset: 0xC 
.SS "\fB__IO\fP uint8_t CFIFO"
UART FIFO Control Register, offset: 0x11 
.SS "\fB__IO\fP uint8_t CGH1"
CMT Carrier Generator High Data Register 1, offset: 0x0 
.SS "\fB__IO\fP uint8_t CGH2"
CMT Carrier Generator High Data Register 2, offset: 0x2 
.SS "\fB__IO\fP uint8_t CGL1"
CMT Carrier Generator Low Data Register 1, offset: 0x1 
.SS "\fB__IO\fP uint8_t CGL2"
CMT Carrier Generator Low Data Register 2, offset: 0x3 
.SS "struct { \&.\&.\&. }   CH[2]"

.SS "struct { \&.\&.\&. }   CHANNEL[4]"

.SS "struct { \&.\&.\&. }   CHANNEL[4]"

.SS "\fB__IO\fP uint8_t CHCFG[16]"
Channel Configuration register, array offset: 0x0, array step: 0x1 
.SS "\fB__O\fP uint8_t CINT"
Clear Interrupt Request Register, offset: 0x1F 
.SS "\fB__IO\fP uint16_t CITER_ELINKNO"
TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), array offset: 0x1016, array step: 0x20 
.SS "\fB__IO\fP uint16_t CITER_ELINKNO"
TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), array offset: 0x1016, array step: 0x20 
.SS "\fB__IO\fP uint16_t CITER_ELINKYES"
TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), array offset: 0x1016, array step: 0x20 
.SS "\fB__IO\fP uint16_t CITER_ELINKYES"
TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), array offset: 0x1016, array step: 0x20 
.SS "\fB__IO\fP uint8_t CLK_RECOVER_CTRL"
USB Clock recovery control, offset: 0x140 
.SS "\fB__IO\fP uint8_t CLK_RECOVER_INT_STATUS"
Clock recovery separated interrupt status, offset: 0x15C 
.SS "\fB__IO\fP uint8_t CLK_RECOVER_IRC_EN"
IRC48M oscillator enable register, offset: 0x144 
.SS "\fB__IO\fP uint32_t CLKDIV1"
System Clock Divider Register 1, offset: 0x1044 
.SS "\fB__IO\fP uint32_t CLKDIV2"
System Clock Divider Register 2, offset: 0x1048 
.SS "\fB__IO\fP uint32_t CLM0"
ADC Minus-Side General Calibration Value Register, offset: 0x6C 
.SS "\fB__IO\fP uint32_t CLM1"
ADC Minus-Side General Calibration Value Register, offset: 0x68 
.SS "\fB__IO\fP uint32_t CLM2"
ADC Minus-Side General Calibration Value Register, offset: 0x64 
.SS "\fB__IO\fP uint32_t CLM3"
ADC Minus-Side General Calibration Value Register, offset: 0x60 
.SS "\fB__IO\fP uint32_t CLM4"
ADC Minus-Side General Calibration Value Register, offset: 0x5C 
.SS "\fB__IO\fP uint32_t CLMD"
ADC Minus-Side General Calibration Value Register, offset: 0x54 
.SS "\fB__IO\fP uint32_t CLMS"
ADC Minus-Side General Calibration Value Register, offset: 0x58 
.SS "\fB__IO\fP uint32_t CLOCK"
Clock register, offset: 0x4 
.SS "\fB__IO\fP uint32_t CLP0"
ADC Plus-Side General Calibration Value Register, offset: 0x4C 
.SS "\fB__IO\fP uint32_t CLP1"
ADC Plus-Side General Calibration Value Register, offset: 0x48 
.SS "\fB__IO\fP uint32_t CLP2"
ADC Plus-Side General Calibration Value Register, offset: 0x44 
.SS "\fB__IO\fP uint32_t CLP3"
ADC Plus-Side General Calibration Value Register, offset: 0x40 
.SS "\fB__IO\fP uint32_t CLP4"
ADC Plus-Side General Calibration Value Register, offset: 0x3C 
.SS "\fB__IO\fP uint32_t CLPD"
ADC Plus-Side General Calibration Value Register, offset: 0x34 
.SS "\fB__IO\fP uint32_t CLPS"
ADC Plus-Side General Calibration Value Register, offset: 0x38 
.SS "\fB__IO\fP uint8_t CMD1"
CMT Modulator Data Register Mark High, offset: 0x6 
.SS "\fB__IO\fP uint8_t CMD2"
CMT Modulator Data Register Mark Low, offset: 0x7 
.SS "\fB__IO\fP uint8_t CMD3"
CMT Modulator Data Register Space High, offset: 0x8 
.SS "\fB__IO\fP uint8_t CMD4"
CMT Modulator Data Register Space Low, offset: 0x9 
.SS "\fB__IO\fP uint32_t CMDARG"
Command Argument register, offset: 0x8 
.SS "\fB__I\fP uint32_t CMDRSP[4]"
Command Response 0\&.\&.Command Response 3, array offset: 0x10, array step: 0x4 
.SS "\fB__IO\fP uint8_t CMPH"
Compare High Register, offset: 0x3 
.SS "\fB__IO\fP uint8_t CMPL"
Compare Low Register, offset: 0x2 
.SS "\fB__IO\fP uint32_t CMR"
Low Power Timer Compare Register, offset: 0x8 
.SS "\fB__IO\fP uint32_t CNR"
Low Power Timer Counter Register, offset: 0xC 
.SS "\fB__IO\fP uint32_t CnSC"
Channel (n) Status And Control, array offset: 0xC, array step: 0x8 
.SS "\fB__IO\fP uint32_t CnSC"
Channel (n) Status And Control, array offset: 0xC, array step: 0x8 
.SS "\fB__IO\fP uint32_t CNT"
Counter, offset: 0x4 
.SS "\fB__I\fP uint32_t CNT"
Counter register, offset: 0x8 
.SS "\fB__IO\fP uint32_t CNTIN"
Counter Initial Value, offset: 0x4C 
.SS "\fB__IO\fP uint32_t CnV"
Channel (n) Value, array offset: 0x10, array step: 0x8 
.SS "\fB__IO\fP uint32_t CnV"
Channel (n) Value, array offset: 0x10, array step: 0x8 
.SS "\fB__IO\fP uint32_t COMBINE"
Function For Linked Channels, offset: 0x64 
.SS "\fB__IO\fP uint32_t CONF"
Configuration, offset: 0x84 
.SS "\fB__IO\fP uint8_t CONTROL"
USB OTG Control register, offset: 0x108 
.SS "\fB__IO\fP uint32_t CONTROL"
Control register, offset: 0x0 
.SS "struct { \&.\&.\&. }   CONTROLS[8]"

.SS "\fB__IO\fP uint32_t CR"
Control Register, offset: 0x0 
.SS "\fB__IO\fP uint32_t CR"
Control Register, offset: 0xC 
.SS "\fB__IO\fP uint8_t CR"
OSC Control Register, offset: 0x0 
.SS "\fB__IO\fP uint32_t CR"
RNGA Control Register, offset: 0x0 
.SS "\fB__IO\fP uint32_t CR"
RTC Control Register, offset: 0x10 
.SS "\fB__IO\fP uint8_t CR0"
CMP Control Register 0, offset: 0x0 
.SS "\fB__IO\fP uint8_t CR1"
CMP Control Register 1, offset: 0x1 
.SS "\fB__I\fP uint32_t CRCR"
CRC Register, offset: 0x44 
.SS "\fB__IO\fP uint32_t CRS"
Control Register, array offset: 0x10, array step: 0x100 
.SS "\fB__IO\fP uint32_t CRS"
Control Register, array offset: 0x10, array step: 0x100 
.SS "\fB__IO\fP uint32_t CS"
Message Buffer 0 CS Register\&.\&.Message Buffer 15 CS Register, array offset: 0x80, array step: 0x10 
.SS "\fB__IO\fP uint32_t CS"
Message Buffer 0 CS Register\&.\&.Message Buffer 15 CS Register, array offset: 0x80, array step: 0x10 
.SS "struct { \&.\&.\&. }   CS[6]"

.SS "\fB__IO\fP uint32_t CSAR"
Chip Select Address Register, array offset: 0x0, array step: 0xC 
.SS "\fB__IO\fP uint32_t CSAR"
Chip Select Address Register, array offset: 0x0, array step: 0xC 
.SS "\fB__IO\fP uint32_t CSCR"
Chip Select Control Register, array offset: 0x8, array step: 0xC 
.SS "\fB__IO\fP uint32_t CSCR"
Chip Select Control Register, array offset: 0x8, array step: 0xC 
.SS "\fB__IO\fP uint32_t CSMR"
Chip Select Mask Register, array offset: 0x4, array step: 0xC 
.SS "\fB__IO\fP uint32_t CSMR"
Chip Select Mask Register, array offset: 0x4, array step: 0xC 
.SS "\fB__IO\fP uint32_t CSPMCR"
Chip Select port Multiplexing Control Register, offset: 0x60 
.SS "\fB__IO\fP uint16_t CSR"
TCD Control and Status, array offset: 0x101C, array step: 0x20 
.SS "\fB__IO\fP uint16_t CSR"
TCD Control and Status, array offset: 0x101C, array step: 0x20 
.SS "\fB__IO\fP uint32_t CSR"
Low Power Timer Control Status Register, offset: 0x0 
.SS "\fB__IO\fP uint32_t CTAR[2]"
Clock and Transfer Attributes Register (In Master Mode), array offset: 0xC, array step: 0x4 
.SS "\fB__IO\fP uint32_t CTAR[2]"
Clock and Transfer Attributes Register (In Master Mode), array offset: 0xC, array step: 0x4 
.SS "\fB__IO\fP uint32_t CTAR_SLAVE[1]"
Clock and Transfer Attributes Register (In Slave Mode), array offset: 0xC, array step: 0x4 
.SS "\fB__IO\fP uint32_t CTAR_SLAVE[1]"
Clock and Transfer Attributes Register (In Slave Mode), array offset: 0xC, array step: 0x4 
.SS "\fB__IO\fP uint8_t CTL"
Control register, offset: 0x94 
.SS "\fB__IO\fP uint32_t CTRL"
CRC Control register, offset: 0x8 
.SS "\fB__IO\fP uint32_t CTRL"
CRC Control register, offset: 0x8 
.SS "\fB__IO\fP uint8_t CTRL"
Control Register, offset: 0x0 
.SS "\fB__IO\fP uint32_t CTRL1"
Control 1 register, offset: 0x4 
.SS "\fB__IO\fP uint32_t CTRL2"
Control 2 register, offset: 0x34 
.SS "struct { \&.\&.\&. }   CTRL_ACCESS8BIT"

.SS "struct { \&.\&.\&. }   CTRL_ACCESS8BIT"

.SS "\fB__IO\fP uint8_t CTRLHU"
CRC_CTRLHU register\&., offset: 0xB 
.SS "\fB__IO\fP uint8_t CTRLHU"
CRC_CTRLHU register\&., offset: 0xB 
.SS "\fB__IO\fP uint32_t CV1"
Compare Value Registers, offset: 0x18 
.SS "\fB__IO\fP uint32_t CV2"
Compare Value Registers, offset: 0x1C 
.SS "\fB__I\fP uint32_t CVAL"
Current Timer Value Register, array offset: 0x104, array step: 0x10 
.SS "\fB__I\fP uint32_t CVAL"
Current Timer Value Register, array offset: 0x104, array step: 0x10 
.SS "\fB__IO\fP uint8_t D"
I2C Data I/O register, offset: 0x4 
.SS "\fB__IO\fP uint8_t D"
UART Data Register, offset: 0x7 
.SS "struct { \&.\&.\&. }   DAC[2]"

.SS "\fB__IO\fP uint8_t DACCR"
DAC Control Register, offset: 0x4 
.SS "\fB__IO\fP uint32_t DADDR"
TCD Destination Address, array offset: 0x1010, array step: 0x20 
.SS "\fB__IO\fP uint32_t DADDR"
TCD Destination Address, array offset: 0x1010, array step: 0x20 
.SS "struct { \&.\&.\&. }   DAT[16]"

.SS "\fB__IO\fP uint32_t DATA"
CRC Data register, offset: 0x0 
.SS "\fB__IO\fP uint32_t DATA"
CRC Data register, offset: 0x0 
.SS "\fB__IO\fP uint32_t DATA_L"
Cache Data Storage (lower word), array offset: 0x204, array step: index*0x20, index2*0x8 
.SS "\fB__IO\fP uint32_t DATA_L"
Cache Data Storage (lower word), array offset: 0x204, array step: index*0x20, index2*0x8 
.SS "\fB__IO\fP uint32_t DATA_U"
Cache Data Storage (upper word), array offset: 0x200, array step: index*0x20, index2*0x8 
.SS "\fB__IO\fP uint32_t DATA_U"
Cache Data Storage (upper word), array offset: 0x200, array step: index*0x20, index2*0x8 
.SS "\fB__IO\fP uint16_t DATAH"
CRC_DATAH register\&., offset: 0x2 
.SS "\fB__IO\fP uint16_t DATAH"
CRC_DATAH register\&., offset: 0x2 
.SS "\fB__IO\fP uint8_t DATAHL"
CRC_DATAHL register\&., offset: 0x2 
.SS "\fB__IO\fP uint8_t DATAHL"
CRC_DATAHL register\&., offset: 0x2 
.SS "\fB__IO\fP uint8_t DATAHU"
CRC_DATAHU register\&., offset: 0x3 
.SS "\fB__IO\fP uint8_t DATAHU"
CRC_DATAHU register\&., offset: 0x3 
.SS "\fB__IO\fP uint16_t DATAL"
CRC_DATAL register\&., offset: 0x0 
.SS "\fB__IO\fP uint16_t DATAL"
CRC_DATAL register\&., offset: 0x0 
.SS "\fB__IO\fP uint8_t DATALL"
CRC_DATALL register\&., offset: 0x0 
.SS "\fB__IO\fP uint8_t DATALL"
CRC_DATALL register\&., offset: 0x0 
.SS "\fB__IO\fP uint8_t DATALU"
CRC_DATALU register\&., offset: 0x1 
.SS "\fB__IO\fP uint8_t DATALU"
CRC_DATALU register\&., offset: 0x1 
.SS "\fB__IO\fP uint8_t DATH"
DAC Data High Register, array offset: 0x1, array step: 0x2 
.SS "\fB__IO\fP uint8_t DATH"
DAC Data High Register, array offset: 0x1, array step: 0x2 
.SS "\fB__IO\fP uint8_t DATL"
DAC Data Low Register, array offset: 0x0, array step: 0x2 
.SS "\fB__IO\fP uint8_t DATL"
DAC Data Low Register, array offset: 0x0, array step: 0x2 
.SS "\fB__IO\fP uint32_t DATPORT"
Buffer Data Port register, offset: 0x20 
.SS "\fB__IO\fP uint8_t DCHPRI0"
Channel n Priority Register, offset: 0x103 
.SS "\fB__IO\fP uint8_t DCHPRI1"
Channel n Priority Register, offset: 0x102 
.SS "\fB__IO\fP uint8_t DCHPRI10"
Channel n Priority Register, offset: 0x109 
.SS "\fB__IO\fP uint8_t DCHPRI11"
Channel n Priority Register, offset: 0x108 
.SS "\fB__IO\fP uint8_t DCHPRI12"
Channel n Priority Register, offset: 0x10F 
.SS "\fB__IO\fP uint8_t DCHPRI13"
Channel n Priority Register, offset: 0x10E 
.SS "\fB__IO\fP uint8_t DCHPRI14"
Channel n Priority Register, offset: 0x10D 
.SS "\fB__IO\fP uint8_t DCHPRI15"
Channel n Priority Register, offset: 0x10C 
.SS "\fB__IO\fP uint8_t DCHPRI2"
Channel n Priority Register, offset: 0x101 
.SS "\fB__IO\fP uint8_t DCHPRI3"
Channel n Priority Register, offset: 0x100 
.SS "\fB__IO\fP uint8_t DCHPRI4"
Channel n Priority Register, offset: 0x107 
.SS "\fB__IO\fP uint8_t DCHPRI5"
Channel n Priority Register, offset: 0x106 
.SS "\fB__IO\fP uint8_t DCHPRI6"
Channel n Priority Register, offset: 0x105 
.SS "\fB__IO\fP uint8_t DCHPRI7"
Channel n Priority Register, offset: 0x104 
.SS "\fB__IO\fP uint8_t DCHPRI8"
Channel n Priority Register, offset: 0x10B 
.SS "\fB__IO\fP uint8_t DCHPRI9"
Channel n Priority Register, offset: 0x10A 
.SS "\fB__IO\fP uint32_t DEADTIME"
Deadtime Insertion Control, offset: 0x68 
.SS "\fB__IO\fP uint32_t DFCR"
Digital Filter Clock Register, offset: 0xC4 
.SS "\fB__IO\fP uint32_t DFER"
Digital Filter Enable Register, offset: 0xC0 
.SS "\fB__IO\fP uint32_t DFWR"
Digital Filter Width Register, offset: 0xC8 
.SS "\fB__O\fP uint32_t DIRECT[16]"
Direct access register 0\&.\&.Direct access register 15, array offset: 0x0, array step: 0x4 
.SS "\fB__IO\fP uint32_t DLAST_SGA"
TCD Last Destination Address Adjustment/Scatter Gather Address, array offset: 0x1018, array step: 0x20 
.SS "\fB__IO\fP uint32_t DLAST_SGA"
TCD Last Destination Address Adjustment/Scatter Gather Address, array offset: 0x1018, array step: 0x20 
.SS "\fB__IO\fP uint32_t DLY[2]"
Channel n Delay 0 register\&.\&.Channel n Delay 1 register, array offset: 0x18, array step: index*0x28, index2*0x4 
.SS "\fB__IO\fP uint32_t DLY[2]"
Channel n Delay 0 register\&.\&.Channel n Delay 1 register, array offset: 0x18, array step: index*0x28, index2*0x4 
.SS "\fB__IO\fP uint8_t DMA"
CMT Direct Memory Access Register, offset: 0xB 
.SS "\fB__IO\fP uint16_t DOFF"
TCD Signed Destination Address Offset, array offset: 0x1014, array step: 0x20 
.SS "\fB__IO\fP uint16_t DOFF"
TCD Signed Destination Address Offset, array offset: 0x1014, array step: 0x20 
.SS "\fB__IO\fP uint32_t DSADDR"
DMA System Address register, offset: 0x0 
.SS "\fB__I\fP uint32_t EAR"
Error Address Register, slave port n, array offset: 0x10, array step: 0x8 
.SS "\fB__I\fP uint32_t EAR"
Error Address Register, slave port n, array offset: 0x10, array step: 0x8 
.SS "\fB__IO\fP uint32_t ECR"
Error Counter, offset: 0x1C 
.SS "\fB__IO\fP uint32_t ECR"
Ethernet Control Register, offset: 0x24 
.SS "\fB__I\fP uint8_t ED"
UART Extended Data Register, offset: 0xC 
.SS "\fB__I\fP uint32_t EDR"
Error Detail Register, slave port n, array offset: 0x14, array step: 0x8 
.SS "\fB__I\fP uint32_t EDR"
Error Detail Register, slave port n, array offset: 0x14, array step: 0x8 
.SS "\fB__IO\fP uint32_t EEI"
Enable Error Interrupt Register, offset: 0x14 
.SS "\fB__IO\fP uint32_t EIMR"
Interrupt Mask Register, offset: 0x8 
.SS "\fB__IO\fP uint32_t EIR"
Interrupt Event Register, offset: 0x4 
.SS "struct { \&.\&.\&. }   ENDPOINT[16]"

.SS "\fB__IO\fP uint8_t ENDPT"
Endpoint Control register, array offset: 0xC0, array step: 0x4 
.SS "\fB__IO\fP uint8_t ENDPT"
Endpoint Control register, array offset: 0xC0, array step: 0x4 
.SS "\fB__O\fP uint32_t ER"
RNGA Entropy Register, offset: 0x8 
.SS "\fB__IO\fP uint32_t ERQ"
Enable Request Register, offset: 0xC 
.SS "\fB__IO\fP uint32_t ERR"
Error Register, offset: 0x2C 
.SS "\fB__IO\fP uint8_t ERREN"
Error Interrupt Enable register, offset: 0x8C 
.SS "\fB__IO\fP uint8_t ERRSTAT"
Error Interrupt Status register, offset: 0x88 
.SS "\fB__I\fP uint32_t ES"
Error Status Register, offset: 0x4 
.SS "\fB__IO\fP uint32_t ESR1"
Error and Status 1 register, offset: 0x20 
.SS "\fB__I\fP uint32_t ESR2"
Error and Status 2 register, offset: 0x38 
.SS "\fB__IO\fP uint8_t ET7816"
UART 7816 Error Threshold Register, offset: 0x1E 
.SS "\fB__IO\fP uint32_t ETBCC"
ETB Counter Control register, offset: 0x14 
.SS "\fB__I\fP uint32_t ETBCNT"
ETB Counter Value register, offset: 0x1C 
.SS "\fB__IO\fP uint32_t ETBRL"
ETB Reload register, offset: 0x18 
.SS "\fB__IO\fP uint32_t EXTTRIG"
FTM External Trigger, offset: 0x6C 
.SS "\fB__IO\fP uint8_t F"
I2C Frequency Divider register, offset: 0x1 
.SS "\fB__IO\fP uint8_t F1"
LLWU Flag 1 register, offset: 0x5 
.SS "\fB__IO\fP uint8_t F2"
LLWU Flag 2 register, offset: 0x6 
.SS "\fB__I\fP uint8_t F3"
LLWU Flag 3 register, offset: 0x7 
.SS "\fB__IO\fP uint8_t FCCOB0"
Flash Common Command Object Registers, offset: 0x7 
.SS "\fB__IO\fP uint8_t FCCOB1"
Flash Common Command Object Registers, offset: 0x6 
.SS "\fB__IO\fP uint8_t FCCOB2"
Flash Common Command Object Registers, offset: 0x5 
.SS "\fB__IO\fP uint8_t FCCOB3"
Flash Common Command Object Registers, offset: 0x4 
.SS "\fB__IO\fP uint8_t FCCOB4"
Flash Common Command Object Registers, offset: 0xB 
.SS "\fB__IO\fP uint8_t FCCOB5"
Flash Common Command Object Registers, offset: 0xA 
.SS "\fB__IO\fP uint8_t FCCOB6"
Flash Common Command Object Registers, offset: 0x9 
.SS "\fB__IO\fP uint8_t FCCOB7"
Flash Common Command Object Registers, offset: 0x8 
.SS "\fB__IO\fP uint8_t FCCOB8"
Flash Common Command Object Registers, offset: 0xF 
.SS "\fB__IO\fP uint8_t FCCOB9"
Flash Common Command Object Registers, offset: 0xE 
.SS "\fB__IO\fP uint8_t FCCOBA"
Flash Common Command Object Registers, offset: 0xD 
.SS "\fB__IO\fP uint8_t FCCOBB"
Flash Common Command Object Registers, offset: 0xC 
.SS "\fB__IO\fP uint32_t FCFG1"
Flash Configuration Register 1, offset: 0x104C 
.SS "\fB__I\fP uint32_t FCFG2"
Flash Configuration Register 2, offset: 0x1050 
.SS "\fB__IO\fP uint8_t FCNFG"
Flash Configuration Register, offset: 0x1 
.SS "\fB__IO\fP uint8_t FDPROT"
Data Flash Protection Register, offset: 0x17 
.SS "\fB__I\fP uint8_t FDPROT"
Non-volatile D-Flash Protection Register, offset: 0xF 
.SS "\fB__IO\fP uint8_t FEPROT"
EEPROM Protection Register, offset: 0x16 
.SS "\fB__I\fP uint8_t FEPROT"
Non-volatile EERAM Protection Register, offset: 0xE 
.SS "\fB__O\fP uint32_t FEVT"
Force Event register, offset: 0x50 
.SS "\fB__IO\fP uint8_t FILT1"
LLWU Pin Filter 1 register, offset: 0x8 
.SS "\fB__IO\fP uint8_t FILT2"
LLWU Pin Filter 2 register, offset: 0x9 
.SS "\fB__IO\fP uint32_t FILTER"
Input Capture Filter Control, offset: 0x78 
.SS "\fB__IO\fP uint8_t FLT"
I2C Programmable Input Glitch Filter register, offset: 0x6 
.SS "\fB__IO\fP uint32_t FLTCTRL"
Fault Control, offset: 0x7C 
.SS "\fB__IO\fP uint32_t FLTPOL"
FTM Fault Input Polarity, offset: 0x88 
.SS "\fB__IO\fP uint32_t FMS"
Fault Mode Status, offset: 0x74 
.SS "\fB__I\fP uint8_t FOPT"
Flash Option Register, offset: 0x3 
.SS "\fB__I\fP uint8_t FOPT"
Non-volatile Flash Option Register, offset: 0xD 
.SS "\fB__IO\fP uint8_t FPR"
CMP Filter Period Register, offset: 0x2 
.SS "\fB__IO\fP uint8_t FPROT0"
Program Flash Protection Registers, offset: 0x13 
.SS "\fB__I\fP uint8_t FPROT0"
Non-volatile P-Flash Protection 0 - High Register, offset: 0xB 
.SS "\fB__IO\fP uint8_t FPROT1"
Program Flash Protection Registers, offset: 0x12 
.SS "\fB__I\fP uint8_t FPROT1"
Non-volatile P-Flash Protection 0 - Low Register, offset: 0xA 
.SS "\fB__IO\fP uint8_t FPROT2"
Program Flash Protection Registers, offset: 0x11 
.SS "\fB__I\fP uint8_t FPROT2"
Non-volatile P-Flash Protection 1 - High Register, offset: 0x9 
.SS "\fB__IO\fP uint8_t FPROT3"
Program Flash Protection Registers, offset: 0x10 
.SS "\fB__I\fP uint8_t FPROT3"
Non-volatile P-Flash Protection 1 - Low Register, offset: 0x8 
.SS "\fB__IO\fP uint8_t FRMNUMH"
Frame Number register High, offset: 0xA4 
.SS "\fB__IO\fP uint8_t FRMNUML"
Frame Number register Low, offset: 0xA0 
.SS "\fB__I\fP uint8_t FSEC"
Flash Security Register, offset: 0x2 
.SS "\fB__I\fP uint8_t FSEC"
Non-volatile Flash Security Register, offset: 0xC 
.SS "\fB__IO\fP uint8_t FSTAT"
Flash Status Register, offset: 0x0 
.SS "\fB__IO\fP uint32_t FTRL"
Frame Truncation Length, offset: 0x1B0 
.SS "\fB__IO\fP uint32_t GALR"
Descriptor Group Lower Address Register, offset: 0x124 
.SS "\fB__IO\fP uint32_t GAUR"
Descriptor Group Upper Address Register, offset: 0x120 
.SS "\fB__O\fP uint32_t GPCHR"
Global Pin Control High Register, offset: 0x84 
.SS "\fB__O\fP uint32_t GPCLR"
Global Pin Control Low Register, offset: 0x80 
.SS "\fB__IO\fP uint32_t GPOLY"
CRC Polynomial register, offset: 0x4 
.SS "\fB__IO\fP uint32_t GPOLY"
CRC Polynomial register, offset: 0x4 
.SS "struct { \&.\&.\&. }   GPOLY_ACCESS16BIT"

.SS "struct { \&.\&.\&. }   GPOLY_ACCESS16BIT"

.SS "struct { \&.\&.\&. }   GPOLY_ACCESS8BIT"

.SS "struct { \&.\&.\&. }   GPOLY_ACCESS8BIT"

.SS "\fB__IO\fP uint16_t GPOLYH"
CRC_GPOLYH register\&., offset: 0x6 
.SS "\fB__IO\fP uint16_t GPOLYH"
CRC_GPOLYH register\&., offset: 0x6 
.SS "\fB__IO\fP uint8_t GPOLYHL"
CRC_GPOLYHL register\&., offset: 0x6 
.SS "\fB__IO\fP uint8_t GPOLYHL"
CRC_GPOLYHL register\&., offset: 0x6 
.SS "\fB__IO\fP uint8_t GPOLYHU"
CRC_GPOLYHU register\&., offset: 0x7 
.SS "\fB__IO\fP uint8_t GPOLYHU"
CRC_GPOLYHU register\&., offset: 0x7 
.SS "\fB__IO\fP uint16_t GPOLYL"
CRC_GPOLYL register\&., offset: 0x4 
.SS "\fB__IO\fP uint16_t GPOLYL"
CRC_GPOLYL register\&., offset: 0x4 
.SS "\fB__IO\fP uint8_t GPOLYLL"
CRC_GPOLYLL register\&., offset: 0x4 
.SS "\fB__IO\fP uint8_t GPOLYLL"
CRC_GPOLYLL register\&., offset: 0x4 
.SS "\fB__IO\fP uint8_t GPOLYLU"
CRC_GPOLYLU register\&., offset: 0x5 
.SS "\fB__IO\fP uint8_t GPOLYLU"
CRC_GPOLYLU register\&., offset: 0x5 
.SS "\fB__I\fP uint32_t HOSTVER"
Host Controller Version, offset: 0xFC 
.SS "\fB__I\fP uint32_t HRS"
Hardware Request Status Register, offset: 0x34 
.SS "\fB__I\fP uint32_t HTCAPBLT"
Host Controller Capabilities, offset: 0x40 
.SS "\fB__IO\fP uint32_t IALR"
Descriptor Individual Lower Address Register, offset: 0x11C 
.SS "\fB__IO\fP uint32_t IAUR"
Descriptor Individual Upper Address Register, offset: 0x118 
.SS "\fB__IO\fP uint32_t ID"
Message Buffer 0 ID Register\&.\&.Message Buffer 15 ID Register, array offset: 0x84, array step: 0x10 
.SS "\fB__IO\fP uint32_t ID"
Message Buffer 0 ID Register\&.\&.Message Buffer 15 ID Register, array offset: 0x84, array step: 0x10 
.SS "\fB__I\fP uint8_t IDCOMP"
Peripheral ID Complement register, offset: 0x4 
.SS "\fB__IO\fP uint32_t IDLY"
Interrupt Delay register, offset: 0xC 
.SS "\fB__IO\fP uint8_t IE7816"
UART 7816 Interrupt Enable Register, offset: 0x19 
.SS "\fB__I\fP uint32_t IEEE_R_ALIGN"
Frames Received with Alignment Error Statistic Register, offset: 0x2D4 
.SS "\fB__I\fP uint32_t IEEE_R_CRC"
Frames Received with CRC Error Statistic Register, offset: 0x2D0 
.SS "\fB__I\fP uint32_t IEEE_R_DROP"
Frames not Counted Correctly Statistic Register, offset: 0x2C8 
.SS "\fB__I\fP uint32_t IEEE_R_FDXFC"
Flow Control Pause Frames Received Statistic Register, offset: 0x2DC 
.SS "\fB__I\fP uint32_t IEEE_R_FRAME_OK"
Frames Received OK Statistic Register, offset: 0x2CC 
.SS "\fB__I\fP uint32_t IEEE_R_MACERR"
Receive FIFO Overflow Count Statistic Register, offset: 0x2D8 
.SS "\fB__I\fP uint32_t IEEE_R_OCTETS_OK"
Octet Count for Frames Received without Error Statistic Register, offset: 0x2E0 
.SS "\fB__I\fP uint32_t IEEE_T_1COL"
Frames Transmitted with Single Collision Statistic Register, offset: 0x250 
.SS "\fB__I\fP uint32_t IEEE_T_CSERR"
Frames Transmitted with Carrier Sense Error Statistic Register, offset: 0x268 
.SS "\fB__I\fP uint32_t IEEE_T_DEF"
Frames Transmitted after Deferral Delay Statistic Register, offset: 0x258 
.SS "\fB__I\fP uint32_t IEEE_T_EXCOL"
Frames Transmitted with Excessive Collisions Statistic Register, offset: 0x260 
.SS "\fB__I\fP uint32_t IEEE_T_FDXFC"
Flow Control Pause Frames Transmitted Statistic Register, offset: 0x270 
.SS "\fB__I\fP uint32_t IEEE_T_FRAME_OK"
Frames Transmitted OK Statistic Register, offset: 0x24C 
.SS "\fB__I\fP uint32_t IEEE_T_LCOL"
Frames Transmitted with Late Collision Statistic Register, offset: 0x25C 
.SS "\fB__I\fP uint32_t IEEE_T_MACERR"
Frames Transmitted with Tx FIFO Underrun Statistic Register, offset: 0x264 
.SS "\fB__I\fP uint32_t IEEE_T_MCOL"
Frames Transmitted with Multiple Collisions Statistic Register, offset: 0x254 
.SS "\fB__I\fP uint32_t IEEE_T_OCTETS_OK"
Octet Count for Frames Transmitted w/o Error Statistic Register, offset: 0x274 
.SS "\fB__IO\fP uint32_t IER"
RTC Interrupt Enable Register, offset: 0x1C 
.SS "\fB__IO\fP uint32_t IFLAG1"
Interrupt Flags 1 register, offset: 0x30 
.SS "\fB__IO\fP uint32_t IMASK1"
Interrupt Masks 1 register, offset: 0x28 
.SS "\fB__IO\fP uint32_t INT"
Interrupt Request Register, offset: 0x24 
.SS "\fB__IO\fP uint32_t INT"
DAC Interval n register, array offset: 0x154, array step: 0x8 
.SS "\fB__IO\fP uint32_t INT"
DAC Interval n register, array offset: 0x154, array step: 0x8 
.SS "\fB__IO\fP uint32_t INTC"
DAC Interval Trigger n Control register, array offset: 0x150, array step: 0x8 
.SS "\fB__IO\fP uint32_t INTC"
DAC Interval Trigger n Control register, array offset: 0x150, array step: 0x8 
.SS "\fB__IO\fP uint8_t INTEN"
Interrupt Enable register, offset: 0x84 
.SS "\fB__IO\fP uint32_t INVCTRL"
FTM Inverting Control, offset: 0x90 
.SS "\fB__IO\fP uint8_t IR"
UART Infrared Register, offset: 0xE 
.SS "\fB__IO\fP uint32_t IRQSIGEN"
Interrupt Signal Enable register, offset: 0x38 
.SS "\fB__IO\fP uint32_t IRQSTAT"
Interrupt Status register, offset: 0x30 
.SS "\fB__IO\fP uint32_t IRQSTATEN"
Interrupt Status Enable register, offset: 0x34 
.SS "\fB__IO\fP uint8_t IS7816"
UART 7816 Interrupt Status Register, offset: 0x1A 
.SS "\fB__IO\fP uint32_t ISCR"
Interrupt Status Register, offset: 0x10 
.SS "\fB__IO\fP uint32_t ISFR"
Interrupt Status Flag Register, offset: 0xA0 
.SS "\fB__IO\fP uint8_t ISTAT"
Interrupt Status register, offset: 0x80 
.SS "\fB__O\fP uint32_t LDR_CA[9]"
General Purpose Register 0 - Load Register command\&.\&.General Purpose Register 8 - Load Register command, array offset: 0x848, array step: 0x4 
.SS "\fB__O\fP uint32_t LDR_CAA"
Accumulator register - Load Register command, offset: 0x844 
.SS "\fB__O\fP uint32_t LDR_CASR"
Status register - Load Register command, offset: 0x840 
.SS "\fB__IO\fP uint32_t LDVAL"
Timer Load Value Register, array offset: 0x100, array step: 0x10 
.SS "\fB__IO\fP uint32_t LDVAL"
Timer Load Value Register, array offset: 0x100, array step: 0x10 
.SS "\fB__IO\fP uint32_t LR"
RTC Lock Register, offset: 0x18 
.SS "\fB__IO\fP uint8_t LVDSC1"
Low Voltage Detect Status And Control 1 register, offset: 0x0 
.SS "\fB__IO\fP uint8_t LVDSC2"
Low Voltage Detect Status And Control 2 register, offset: 0x1 
.SS "\fB__IO\fP uint8_t MA1"
UART Match Address Registers 1, offset: 0x8 
.SS "\fB__IO\fP uint8_t MA2"
UART Match Address Registers 2, offset: 0x9 
.SS "struct { \&.\&.\&. }   MB[16]"

.SS "\fB__IO\fP uint32_t MCR"
Module Configuration Register, offset: 0x0 
.SS "\fB__IO\fP uint32_t MCR"
SAI MCLK Control Register, offset: 0x100 
.SS "\fB__IO\fP uint32_t MCR"
PIT Module Control Register, offset: 0x0 
.SS "\fB__IO\fP uint32_t MCR"
Module Configuration Register, offset: 0x0 
.SS "\fB__IO\fP uint32_t MDR"
SAI MCLK Divide Register, offset: 0x104 
.SS "\fB__IO\fP uint8_t ME"
LLWU Module Enable register, offset: 0x4 
.SS "\fB__IO\fP uint32_t MG"
ADC Minus-Side Gain Register, offset: 0x30 
.SS "\fB__IO\fP uint32_t MGPCR0"
Master General Purpose Control Register, offset: 0x800 
.SS "\fB__IO\fP uint32_t MGPCR1"
Master General Purpose Control Register, offset: 0x900 
.SS "\fB__IO\fP uint32_t MGPCR2"
Master General Purpose Control Register, offset: 0xA00 
.SS "\fB__IO\fP uint32_t MGPCR3"
Master General Purpose Control Register, offset: 0xB00 
.SS "\fB__IO\fP uint32_t MGPCR4"
Master General Purpose Control Register, offset: 0xC00 
.SS "\fB__IO\fP uint32_t MGPCR5"
Master General Purpose Control Register, offset: 0xD00 
.SS "\fB__IO\fP uint32_t MIBC"
MIB Control Register, offset: 0x64 
.SS "\fB__IO\fP uint32_t MMCBOOT"
MMC Boot register, offset: 0xC4 
.SS "\fB__IO\fP uint32_t MMFR"
MII Management Frame Register, offset: 0x40 
.SS "\fB__IO\fP uint32_t MOD"
Modulo, offset: 0x8 
.SS "\fB__IO\fP uint32_t MOD"
Modulus register, offset: 0x4 
.SS "\fB__IO\fP uint32_t MODE"
Features Mode Selection, offset: 0x54 
.SS "\fB__IO\fP uint8_t MODEM"
UART Modem Register, offset: 0xD 
.SS "\fB__IO\fP uint32_t MPRA"
Master Privilege Register A, offset: 0x0 
.SS "\fB__I\fP uint8_t MR"
Mode Register, offset: 0x7 
.SS "\fB__IO\fP uint32_t MRBR"
Maximum Receive Buffer Size Register, offset: 0x188 
.SS "\fB__IO\fP uint8_t MSC"
CMT Modulator Status and Control Register, offset: 0x5 
.SS "\fB__IO\fP uint32_t MSCR"
MII Speed Control Register, offset: 0x44 
.SS "\fB__IO\fP uint8_t MUXCR"
MUX Control Register, offset: 0x5 
.SS "\fB__IO\fP uint32_t NBYTES_MLNO"
TCD Minor Byte Count (Minor Loop Disabled), array offset: 0x1008, array step: 0x20 
.SS "\fB__IO\fP uint32_t NBYTES_MLNO"
TCD Minor Byte Count (Minor Loop Disabled), array offset: 0x1008, array step: 0x20 
.SS "\fB__IO\fP uint32_t NBYTES_MLOFFNO"
TCD Signed Minor Loop Offset (Minor Loop Enabled and Offset Disabled), array offset: 0x1008, array step: 0x20 
.SS "\fB__IO\fP uint32_t NBYTES_MLOFFNO"
TCD Signed Minor Loop Offset (Minor Loop Enabled and Offset Disabled), array offset: 0x1008, array step: 0x20 
.SS "\fB__IO\fP uint32_t NBYTES_MLOFFYES"
TCD Signed Minor Loop Offset (Minor Loop and Offset Enabled), array offset: 0x1008, array step: 0x20 
.SS "\fB__IO\fP uint32_t NBYTES_MLOFFYES"
TCD Signed Minor Loop Offset (Minor Loop and Offset Enabled), array offset: 0x1008, array step: 0x20 
.SS "\fB__I\fP uint8_t OBSERVE"
USB OTG Observe register, offset: 0x104 
.SS "\fB__IO\fP uint8_t OC"
CMT Output Control Register, offset: 0x4 
.SS "\fB__IO\fP uint32_t OFS"
ADC Offset Correction Register, offset: 0x28 
.SS "\fB__IO\fP uint32_t OPD"
Opcode/Pause Duration Register, offset: 0xEC 
.SS "\fB__I\fP uint32_t OR"
RNGA Output Register, offset: 0xC 
.SS "\fB__IO\fP uint8_t OTGCTL"
OTG Control register, offset: 0x1C 
.SS "\fB__IO\fP uint8_t OTGICR"
OTG Interrupt Control register, offset: 0x14 
.SS "\fB__IO\fP uint8_t OTGISTAT"
OTG Interrupt Status register, offset: 0x10 
.SS "\fB__IO\fP uint8_t OTGSTAT"
OTG Status register, offset: 0x18 
.SS "\fB__IO\fP uint32_t OUTINIT"
Initial State For Channels Output, offset: 0x5C 
.SS "\fB__IO\fP uint32_t OUTMASK"
Output Mask, offset: 0x60 
.SS "\fB__IO\fP uint32_t PACRA"
Peripheral Access Control Register, offset: 0x20 
.SS "\fB__IO\fP uint32_t PACRB"
Peripheral Access Control Register, offset: 0x24 
.SS "\fB__IO\fP uint32_t PACRC"
Peripheral Access Control Register, offset: 0x28 
.SS "\fB__IO\fP uint32_t PACRD"
Peripheral Access Control Register, offset: 0x2C 
.SS "\fB__IO\fP uint32_t PACRE"
Peripheral Access Control Register, offset: 0x40 
.SS "\fB__IO\fP uint32_t PACRF"
Peripheral Access Control Register, offset: 0x44 
.SS "\fB__IO\fP uint32_t PACRG"
Peripheral Access Control Register, offset: 0x48 
.SS "\fB__IO\fP uint32_t PACRH"
Peripheral Access Control Register, offset: 0x4C 
.SS "\fB__IO\fP uint32_t PACRI"
Peripheral Access Control Register, offset: 0x50 
.SS "\fB__IO\fP uint32_t PACRJ"
Peripheral Access Control Register, offset: 0x54 
.SS "\fB__IO\fP uint32_t PACRK"
Peripheral Access Control Register, offset: 0x58 
.SS "\fB__IO\fP uint32_t PACRL"
Peripheral Access Control Register, offset: 0x5C 
.SS "\fB__IO\fP uint32_t PACRM"
Peripheral Access Control Register, offset: 0x60 
.SS "\fB__IO\fP uint32_t PACRN"
Peripheral Access Control Register, offset: 0x64 
.SS "\fB__IO\fP uint32_t PACRO"
Peripheral Access Control Register, offset: 0x68 
.SS "\fB__IO\fP uint32_t PACRP"
Peripheral Access Control Register, offset: 0x6C 
.SS "\fB__IO\fP uint32_t PACRU"
Peripheral Access Control Register, offset: 0x80 
.SS "\fB__IO\fP uint32_t PALR"
Physical Address Lower Register, offset: 0xE4 
.SS "\fB__IO\fP uint32_t PAUR"
Physical Address Upper Register, offset: 0xE8 
.SS "\fB__O\fP uint32_t PCOR"
Port Clear Output Register, offset: 0x8 
.SS "\fB__IO\fP uint32_t PCR[32]"
Pin Control Register n, array offset: 0x0, array step: 0x4 
.SS "\fB__IO\fP uint32_t PDDR"
Port Data Direction Register, offset: 0x14 
.SS "\fB__I\fP uint32_t PDIR"
Port Data Input Register, offset: 0x10 
.SS "\fB__IO\fP uint32_t PDOR"
Port Data Output Register, offset: 0x0 
.SS "\fB__IO\fP uint8_t PE1"
LLWU Pin Enable 1 register, offset: 0x0 
.SS "\fB__IO\fP uint8_t PE2"
LLWU Pin Enable 2 register, offset: 0x1 
.SS "\fB__IO\fP uint8_t PE3"
LLWU Pin Enable 3 register, offset: 0x2 
.SS "\fB__IO\fP uint8_t PE4"
LLWU Pin Enable 4 register, offset: 0x3 
.SS "\fB__I\fP uint8_t PERID"
Peripheral ID register, offset: 0x0 
.SS "\fB__IO\fP uint32_t PFAPR"
Flash Access Protection Register, offset: 0x0 
.SS "\fB__IO\fP uint32_t PFB0CR"
Flash Bank 0 Control Register, offset: 0x4 
.SS "\fB__IO\fP uint32_t PFB1CR"
Flash Bank 1 Control Register, offset: 0x8 
.SS "\fB__IO\fP uint8_t PFIFO"
UART FIFO Parameters, offset: 0x10 
.SS "\fB__IO\fP uint32_t PG"
ADC Plus-Side Gain Register, offset: 0x2C 
.SS "\fB__IO\fP uint32_t PID"
Process ID register, offset: 0x30 
.SS "\fB__I\fP uint16_t PLAMC"
Crossbar Switch (AXBS) Master Configuration, offset: 0xA 
.SS "\fB__I\fP uint16_t PLASC"
Crossbar Switch (AXBS) Slave Configuration, offset: 0x8 
.SS "\fB__IO\fP uint8_t PMCTRL"
Power Mode Control register, offset: 0x1 
.SS "\fB__IO\fP uint8_t PMPROT"
Power Mode Protection register, offset: 0x0 
.SS "\fB__I\fP uint8_t PMSTAT"
Power Mode Status register, offset: 0x3 
.SS "\fB__IO\fP uint32_t PODLY[3]"
Pulse-Out n Delay register, array offset: 0x194, array step: 0x4 
.SS "\fB__IO\fP uint32_t POEN"
Pulse-Out n Enable register, offset: 0x190 
.SS "\fB__IO\fP uint32_t POL"
Channels Polarity, offset: 0x70 
.SS "\fB__I\fP uint32_t POPR"
POP RX FIFO Register, offset: 0x38 
.SS "\fB__IO\fP uint8_t PPS"
CMT Primary Prescaler Register, offset: 0xA 
.SS "\fB__IO\fP uint16_t PRESC"
Watchdog Prescaler register, offset: 0x16 
.SS "\fB__IO\fP uint32_t PROCTL"
Protocol Control register, offset: 0x28 
.SS "\fB__IO\fP uint32_t PRS"
Priority Registers Slave, array offset: 0x0, array step: 0x100 
.SS "\fB__IO\fP uint32_t PRS"
Priority Registers Slave, array offset: 0x0, array step: 0x100 
.SS "\fB__I\fP uint32_t PRSSTAT"
Present State register, offset: 0x24 
.SS "\fB__O\fP uint32_t PSOR"
Port Set Output Register, offset: 0x4 
.SS "\fB__IO\fP uint32_t PSR"
Low Power Timer Prescale Register, offset: 0x4 
.SS "\fB__O\fP uint32_t PTOR"
Port Toggle Output Register, offset: 0xC 
.SS "\fB__IO\fP uint32_t PUSHR"
PUSH TX FIFO Register In Master Mode, offset: 0x34 
.SS "\fB__IO\fP uint32_t PUSHR"
PUSH TX FIFO Register In Master Mode, offset: 0x34 
.SS "\fB__IO\fP uint32_t PUSHR_SLAVE"
PUSH TX FIFO Register In Slave Mode, offset: 0x34 
.SS "\fB__IO\fP uint32_t PUSHR_SLAVE"
PUSH TX FIFO Register In Slave Mode, offset: 0x34 
.SS "\fB__IO\fP uint32_t PWMLOAD"
FTM PWM Load, offset: 0x98 
.SS "\fB__IO\fP uint32_t QDCTRL"
Quadrature Decoder Control And Status, offset: 0x80 
.SS "\fB__I\fP uint32_t R[2]"
ADC Data Result Register, array offset: 0x10, array step: 0x4 
.SS "\fB__IO\fP uint8_t RA"
I2C Range Address register, offset: 0x7 
.SS "\fB__IO\fP uint32_t RACC"
Receive Accelerator Function Configuration, offset: 0x1C4 
.SS "\fB__O\fP uint32_t RADR_CA[9]"
General Purpose Register 0 - Reverse and Add to Register command\&.\&.General Purpose Register 8 - Reverse and Add to Register command, array offset: 0x908, array step: 0x4 
.SS "\fB__O\fP uint32_t RADR_CAA"
Accumulator register - Reverse and Add to Register command, offset: 0x904 
.SS "\fB__O\fP uint32_t RADR_CASR"
Status register - Reverse and Add to Register command, offset: 0x900 
.SS "\fB__IO\fP uint32_t RAEM"
Receive FIFO Almost Empty Threshold, offset: 0x198 
.SS "\fB__IO\fP uint32_t RAFL"
Receive FIFO Almost Full Threshold, offset: 0x19C 
.SS "\fB__IO\fP uint32_t RAR"
RTC Read Access Register, offset: 0x804 
.SS "\fB__I\fP uint8_t RCFIFO"
UART FIFO Receive Count, offset: 0x16 
.SS "\fB__IO\fP uint32_t RCR"
Receive Control Register, offset: 0x84 
.SS "\fB__IO\fP uint32_t RCR1"
SAI Receive Configuration 1 Register, offset: 0x84 
.SS "\fB__IO\fP uint32_t RCR2"
SAI Receive Configuration 2 Register, offset: 0x88 
.SS "\fB__IO\fP uint32_t RCR3"
SAI Receive Configuration 3 Register, offset: 0x8C 
.SS "\fB__IO\fP uint32_t RCR4"
SAI Receive Configuration 4 Register, offset: 0x90 
.SS "\fB__IO\fP uint32_t RCR5"
SAI Receive Configuration 5 Register, offset: 0x94 
.SS "\fB__IO\fP uint32_t RCSR"
SAI Receive Control Register, offset: 0x80 
.SS "\fB__IO\fP uint32_t RDAR"
Receive Descriptor Active Register, offset: 0x10 
.SS "\fB__I\fP uint32_t RDR[2]"
SAI Receive Data Register, array offset: 0xA0, array step: 0x4 
.SS "\fB__IO\fP uint32_t RDSR"
Receive Descriptor Ring Start Register, offset: 0x180 
.SS "\fB__IO\fP uint16_t REFRESH"
Watchdog Refresh register, offset: 0xC 
.SS "\fB__IO\fP uint32_t REG[8]"
Register file register, array offset: 0x0, array step: 0x4 
.SS "\fB__IO\fP uint32_t REG[8]"
VBAT register file register, array offset: 0x0, array step: 0x4 
.SS "\fB__IO\fP uint8_t REGSC"
Regulator Status And Control register, offset: 0x2 
.SS "uint8_t RESERVED_0[4]"

.SS "uint8_t RESERVED_0[28]"

.SS "uint8_t RESERVED_0"

.SS "uint8_t RESERVED_0[12]"

.SS "uint8_t RESERVED_0[4]"

.SS "uint8_t RESERVED_0[2048]"

.SS "uint8_t RESERVED_0[3]"

.SS "uint8_t RESERVED_0[3]"

.SS "uint8_t RESERVED_0[4]"

.SS "uint8_t RESERVED_0[4]"

.SS "uint8_t RESERVED_0[24]"

.SS "uint8_t RESERVED_0[244]"

.SS "uint8_t RESERVED_0[2]"

.SS "uint8_t RESERVED_0[8]"

.SS "uint8_t RESERVED_0[1]"

.SS "uint8_t RESERVED_0[8]"

.SS "uint8_t RESERVED_0[24]"

.SS "uint8_t RESERVED_0"

.SS "uint8_t RESERVED_0[252]"

.SS "uint8_t RESERVED_0[24]"

.SS "uint8_t RESERVED_0[2]"

.SS "uint8_t RESERVED_0[2016]"

.SS "uint8_t RESERVED_0[8]"

.SS "uint8_t RESERVED_0[4092]"

.SS "uint8_t RESERVED_0[4]"

.SS "uint8_t RESERVED_0[12]"

.SS "uint8_t RESERVED_0[1]"

.SS "uint8_t RESERVED_0[3]"

.SS "uint8_t RESERVED_0[3]"

.SS "uint8_t RESERVED_0[4]"

.SS "uint8_t RESERVED_1[16]"

.SS "uint8_t RESERVED_1"

.SS "uint8_t RESERVED_1[236]"

.SS "uint8_t RESERVED_1[4]"

.SS "uint8_t RESERVED_1[20]"

.SS "uint8_t RESERVED_1[4]"

.SS "uint8_t RESERVED_1[4]"

.SS "uint8_t RESERVED_1[192]"

.SS "uint8_t RESERVED_1[24]"

.SS "uint8_t RESERVED_1[1]"

.SS "uint8_t RESERVED_1[16]"

.SS "uint8_t RESERVED_1[48]"

.SS "uint8_t RESERVED_1[28]"

.SS "uint8_t RESERVED_1[1]"

.SS "uint8_t RESERVED_1[100]"

.SS "uint8_t RESERVED_1[4]"

.SS "uint8_t RESERVED_1[24]"

.SS "uint8_t RESERVED_1[968]"

.SS "uint8_t RESERVED_1[1]"

.SS "uint8_t RESERVED_1[3]"

.SS "uint8_t RESERVED_10[56]"

.SS "uint8_t RESERVED_10[3]"

.SS "uint8_t RESERVED_11[4]"

.SS "uint8_t RESERVED_11[3]"

.SS "uint8_t RESERVED_12[12]"

.SS "uint8_t RESERVED_12[3]"

.SS "uint8_t RESERVED_13[60]"

.SS "uint8_t RESERVED_13[3]"

.SS "uint8_t RESERVED_14[4]"

.SS "uint8_t RESERVED_14[3]"

.SS "uint8_t RESERVED_15[4]"

.SS "uint8_t RESERVED_15[3]"

.SS "uint8_t RESERVED_16[12]"

.SS "uint8_t RESERVED_16[3]"

.SS "uint8_t RESERVED_17[4]"

.SS "uint8_t RESERVED_17[3]"

.SS "uint8_t RESERVED_18[284]"

.SS "uint8_t RESERVED_18[3]"

.SS "uint8_t RESERVED_19[488]"

.SS "uint8_t RESERVED_19[3]"

.SS "uint8_t RESERVED_2[16]"

.SS "uint8_t RESERVED_2[252]"

.SS "uint8_t RESERVED_2[4]"

.SS "uint8_t RESERVED_2[20]"

.SS "uint8_t RESERVED_2[4]"

.SS "uint8_t RESERVED_2[12]"

.SS "uint8_t RESERVED_2[24]"

.SS "uint8_t RESERVED_2[52]"

.SS "uint8_t RESERVED_2[4]"

.SS "uint8_t RESERVED_2[48]"

.SS "uint8_t RESERVED_2[832]"

.SS "uint8_t RESERVED_2[3]"

.SS "uint8_t RESERVED_20[3]"

.SS "uint8_t RESERVED_21[11]"

.SS "uint8_t RESERVED_22[3]"

.SS "uint8_t RESERVED_23[3]"

.SS "uint8_t RESERVED_24[3]"

.SS "uint8_t RESERVED_25[7]"

.SS "uint8_t RESERVED_26[43]"

.SS "uint8_t RESERVED_27[3]"

.SS "uint8_t RESERVED_28[23]"

.SS "uint8_t RESERVED_3[252]"

.SS "uint8_t RESERVED_3[8]"

.SS "uint8_t RESERVED_3[20]"

.SS "uint8_t RESERVED_3[4]"

.SS "uint8_t RESERVED_3[24]"

.SS "uint8_t RESERVED_3[28]"

.SS "uint8_t RESERVED_3[8]"

.SS "uint8_t RESERVED_3[3]"

.SS "uint8_t RESERVED_4[252]"

.SS "uint8_t RESERVED_4[48]"

.SS "uint8_t RESERVED_4[84]"

.SS "uint8_t RESERVED_4[4]"

.SS "uint8_t RESERVED_4[28]"

.SS "uint8_t RESERVED_4[8]"

.SS "uint8_t RESERVED_4[3]"

.SS "uint8_t RESERVED_5[252]"

.SS "uint8_t RESERVED_5[1792]"

.SS "uint8_t RESERVED_5[20]"

.SS "uint8_t RESERVED_5[200]"

.SS "uint8_t RESERVED_5[28]"

.SS "uint8_t RESERVED_5[24]"

.SS "uint8_t RESERVED_5[3]"

.SS "uint8_t RESERVED_6[276]"

.SS "uint8_t RESERVED_6[3824]"

.SS "uint8_t RESERVED_6[60]"

.SS "uint8_t RESERVED_6[24]"

.SS "uint8_t RESERVED_6[3]"

.SS "uint8_t RESERVED_7[20]"

.SS "uint8_t RESERVED_7[28]"

.SS "uint8_t RESERVED_7[28]"

.SS "uint8_t RESERVED_7[99]"

.SS "uint8_t RESERVED_8[40]"

.SS "uint8_t RESERVED_8[3]"

.SS "uint8_t RESERVED_9[28]"

.SS "uint8_t RESERVED_9[3]"

.SS "\fB__I\fP uint8_t REV"
Peripheral Revision register, offset: 0x8 
.SS "\fB__I\fP uint32_t RFR[2]"
SAI Receive FIFO Register, array offset: 0xC0, array step: 0x4 
.SS "\fB__IO\fP uint32_t RGDAAC[12]"
Region Descriptor Alternate Access Control n, array offset: 0x800, array step: 0x4 
.SS "\fB__I\fP uint32_t RMON_R_BC_PKT"
Rx Broadcast Packets Statistic Register, offset: 0x288 
.SS "\fB__I\fP uint32_t RMON_R_CRC_ALIGN"
Rx Packets with CRC/Align Error Statistic Register, offset: 0x290 
.SS "\fB__I\fP uint32_t RMON_R_FRAG"
Rx Packets Less Than 64 Bytes and Bad CRC Statistic Register, offset: 0x29C 
.SS "\fB__I\fP uint32_t RMON_R_JAB"
Rx Packets Greater Than MAX_FL Bytes and Bad CRC Statistic Register, offset: 0x2A0 
.SS "\fB__I\fP uint32_t RMON_R_MC_PKT"
Rx Multicast Packets Statistic Register, offset: 0x28C 
.SS "\fB__I\fP uint32_t RMON_R_OCTETS"
Rx Octets Statistic Register, offset: 0x2C4 
.SS "\fB__I\fP uint32_t RMON_R_OVERSIZE"
Rx Packets Greater Than MAX_FL and Good CRC Statistic Register, offset: 0x298 
.SS "\fB__I\fP uint32_t RMON_R_P1024TO2047"
Rx 1024- to 2047-Byte Packets Statistic Register, offset: 0x2BC 
.SS "\fB__I\fP uint32_t RMON_R_P128TO255"
Rx 128- to 255-Byte Packets Statistic Register, offset: 0x2B0 
.SS "\fB__I\fP uint32_t RMON_R_P256TO511"
Rx 256- to 511-Byte Packets Statistic Register, offset: 0x2B4 
.SS "\fB__I\fP uint32_t RMON_R_P512TO1023"
Rx 512- to 1023-Byte Packets Statistic Register, offset: 0x2B8 
.SS "\fB__I\fP uint32_t RMON_R_P64"
Rx 64-Byte Packets Statistic Register, offset: 0x2A8 
.SS "\fB__I\fP uint32_t RMON_R_P65TO127"
Rx 65- to 127-Byte Packets Statistic Register, offset: 0x2AC 
.SS "\fB__I\fP uint32_t RMON_R_P_GTE2048"
Rx Packets Greater than 2048 Bytes Statistic Register, offset: 0x2C0 
.SS "\fB__I\fP uint32_t RMON_R_PACKETS"
Rx Packet Count Statistic Register, offset: 0x284 
.SS "\fB__I\fP uint32_t RMON_R_UNDERSIZE"
Rx Packets with Less Than 64 Bytes and Good CRC Statistic Register, offset: 0x294 
.SS "\fB__I\fP uint32_t RMON_T_BC_PKT"
Tx Broadcast Packets Statistic Register, offset: 0x208 
.SS "\fB__I\fP uint32_t RMON_T_COL"
Tx Collision Count Statistic Register, offset: 0x224 
.SS "\fB__I\fP uint32_t RMON_T_CRC_ALIGN"
Tx Packets with CRC/Align Error Statistic Register, offset: 0x210 
.SS "\fB__I\fP uint32_t RMON_T_FRAG"
Tx Packets Less Than 64 Bytes and Bad CRC Statistic Register, offset: 0x21C 
.SS "\fB__I\fP uint32_t RMON_T_JAB"
Tx Packets Greater Than MAX_FL bytes and Bad CRC Statistic Register, offset: 0x220 
.SS "\fB__I\fP uint32_t RMON_T_MC_PKT"
Tx Multicast Packets Statistic Register, offset: 0x20C 
.SS "\fB__I\fP uint32_t RMON_T_OCTETS"
Tx Octets Statistic Register, offset: 0x244 
.SS "\fB__I\fP uint32_t RMON_T_OVERSIZE"
Tx Packets GT MAX_FL bytes and Good CRC Statistic Register, offset: 0x218 
.SS "\fB__I\fP uint32_t RMON_T_P1024TO2047"
Tx 1024- to 2047-byte Packets Statistic Register, offset: 0x23C 
.SS "\fB__I\fP uint32_t RMON_T_P128TO255"
Tx 128- to 255-byte Packets Statistic Register, offset: 0x230 
.SS "\fB__I\fP uint32_t RMON_T_P256TO511"
Tx 256- to 511-byte Packets Statistic Register, offset: 0x234 
.SS "\fB__I\fP uint32_t RMON_T_P512TO1023"
Tx 512- to 1023-byte Packets Statistic Register, offset: 0x238 
.SS "\fB__I\fP uint32_t RMON_T_P64"
Tx 64-Byte Packets Statistic Register, offset: 0x228 
.SS "\fB__I\fP uint32_t RMON_T_P65TO127"
Tx 65- to 127-byte Packets Statistic Register, offset: 0x22C 
.SS "\fB__I\fP uint32_t RMON_T_P_GTE2048"
Tx Packets Greater Than 2048 Bytes Statistic Register, offset: 0x240 
.SS "\fB__I\fP uint32_t RMON_T_PACKETS"
Tx Packet Count Statistic Register, offset: 0x204 
.SS "\fB__I\fP uint32_t RMON_T_UNDERSIZE"
Tx Packets Less Than Bytes and Good CRC Statistic Register, offset: 0x214 
.SS "\fB__IO\fP uint32_t RMR"
SAI Receive Mask Register, offset: 0xE0 
.SS "\fB__O\fP uint32_t ROTL_CA[9]"
General Purpose Register 0 - Rotate Left command\&.\&.General Purpose Register 8 - Rotate Left command, array offset: 0x9C8, array step: 0x4 
.SS "\fB__O\fP uint32_t ROTL_CAA"
Accumulator register - Rotate Left command, offset: 0x9C4 
.SS "\fB__O\fP uint32_t ROTL_CASR"
Status register - Rotate Left command, offset: 0x9C0 
.SS "\fB__IO\fP uint8_t RPFC"
Reset Pin Filter Control register, offset: 0x4 
.SS "\fB__IO\fP uint8_t RPFW"
Reset Pin Filter Width register, offset: 0x5 
.SS "\fB__IO\fP uint32_t RSEM"
Receive FIFO Section Empty Threshold, offset: 0x194 
.SS "\fB__IO\fP uint32_t RSER"
DMA/Interrupt Request Select and Enable Register, offset: 0x30 
.SS "\fB__IO\fP uint32_t RSFL"
Receive FIFO Section Full Threshold, offset: 0x190 
.SS "\fB__IO\fP uint8_t RST"
LLWU Reset Enable register, offset: 0xA 
.SS "\fB__IO\fP uint16_t RSTCNT"
Watchdog Reset Count register, offset: 0x14 
.SS "\fB__IO\fP uint8_t RWFIFO"
UART FIFO Receive Watermark, offset: 0x15 
.SS "\fB__IO\fP uint32_t RX14MASK"
Rx 14 Mask register, offset: 0x14 
.SS "\fB__IO\fP uint32_t RX15MASK"
Rx 15 Mask register, offset: 0x18 
.SS "\fB__IO\fP uint32_t RXFGMASK"
Rx FIFO Global Mask register, offset: 0x48 
.SS "\fB__I\fP uint32_t RXFIR"
Rx FIFO Information Register, offset: 0x4C 
.SS "\fB__I\fP uint32_t RXFR0"
Receive FIFO Registers, offset: 0x7C 
.SS "\fB__I\fP uint32_t RXFR1"
Receive FIFO Registers, offset: 0x80 
.SS "\fB__I\fP uint32_t RXFR2"
Receive FIFO Registers, offset: 0x84 
.SS "\fB__I\fP uint32_t RXFR3"
Receive FIFO Registers, offset: 0x88 
.SS "\fB__IO\fP uint32_t RXIMR[16]"
Rx Individual Mask Registers, array offset: 0x880, array step: 0x4 
.SS "\fB__IO\fP uint32_t RXMGMASK"
Rx Mailboxes Global Mask Register, offset: 0x10 
.SS "\fB__IO\fP uint8_t S"
I2C Status register, offset: 0x3 
.SS "\fB__IO\fP uint8_t S"
MCG Status Register, offset: 0x6 
.SS "\fB__IO\fP uint32_t S"
Channel n Status register, array offset: 0x14, array step: 0x28 
.SS "\fB__IO\fP uint32_t S"
Channel n Status register, array offset: 0x14, array step: 0x28 
.SS "\fB__I\fP uint8_t S1"
UART Status Register 1, offset: 0x4 
.SS "\fB__IO\fP uint8_t S2"
UART Status Register 2, offset: 0x5 
.SS "\fB__IO\fP uint32_t SADDR"
TCD Source Address, array offset: 0x1000, array step: 0x20 
.SS "\fB__IO\fP uint32_t SADDR"
TCD Source Address, array offset: 0x1000, array step: 0x20 
.SS "\fB__IO\fP uint32_t SC"
Status And Control, offset: 0x0 
.SS "\fB__IO\fP uint8_t SC"
MCG Status and Control Register, offset: 0x8 
.SS "\fB__IO\fP uint32_t SC"
Status and Control register, offset: 0x0 
.SS "\fB__IO\fP uint8_t SC"
VREF Status and Control Register, offset: 0x1 
.SS "\fB__IO\fP uint32_t SC1[2]"
ADC Status and Control Registers 1, array offset: 0x0, array step: 0x4 
.SS "\fB__IO\fP uint32_t SC2"
Status and Control Register 2, offset: 0x20 
.SS "\fB__IO\fP uint32_t SC3"
Status and Control Register 3, offset: 0x24 
.SS "\fB__IO\fP uint32_t SCGC1"
System Clock Gating Control Register 1, offset: 0x1028 
.SS "\fB__IO\fP uint32_t SCGC2"
System Clock Gating Control Register 2, offset: 0x102C 
.SS "\fB__IO\fP uint32_t SCGC3"
System Clock Gating Control Register 3, offset: 0x1030 
.SS "\fB__IO\fP uint32_t SCGC4"
System Clock Gating Control Register 4, offset: 0x1034 
.SS "\fB__IO\fP uint32_t SCGC5"
System Clock Gating Control Register 5, offset: 0x1038 
.SS "\fB__IO\fP uint32_t SCGC6"
System Clock Gating Control Register 6, offset: 0x103C 
.SS "\fB__IO\fP uint32_t SCGC7"
System Clock Gating Control Register 7, offset: 0x1040 
.SS "\fB__IO\fP uint8_t SCR"
CMP Status and Control Register, offset: 0x3 
.SS "\fB__I\fP uint32_t SDID"
System Device Identification Register, offset: 0x1024 
.SS "\fB__O\fP uint8_t SEEI"
Set Enable Error Interrupt Register, offset: 0x19 
.SS "\fB__O\fP uint8_t SERQ"
Set Enable Request Register, offset: 0x1B 
.SS "\fB__O\fP uint8_t SERV"
Service Register, offset: 0x1 
.SS "struct { \&.\&.\&. }   SET[4][4]"

.SS "\fB__IO\fP uint8_t SFIFO"
UART FIFO Status Register, offset: 0x12 
.SS "\fB__IO\fP uint32_t SLAST"
TCD Last Source Address Adjustment, array offset: 0x100C, array step: 0x20 
.SS "\fB__IO\fP uint32_t SLAST"
TCD Last Source Address Adjustment, array offset: 0x100C, array step: 0x20 
.SS "struct { \&.\&.\&. }   SLAVE[5]"

.SS "\fB__IO\fP uint8_t SLTH"
I2C SCL Low Timeout Register High, offset: 0xA 
.SS "\fB__IO\fP uint8_t SLTL"
I2C SCL Low Timeout Register Low, offset: 0xB 
.SS "\fB__IO\fP uint8_t SMB"
I2C SMBus Control and Status register, offset: 0x8 
.SS "\fB__IO\fP uint16_t SOFF"
TCD Signed Source Address Offset, array offset: 0x1004, array step: 0x20 
.SS "\fB__IO\fP uint16_t SOFF"
TCD Signed Source Address Offset, array offset: 0x1004, array step: 0x20 
.SS "\fB__IO\fP uint8_t SOFTHLD"
SOF Threshold register, offset: 0xAC 
.SS "\fB__IO\fP uint32_t SOPT1"
System Options Register 1, offset: 0x0 
.SS "\fB__IO\fP uint32_t SOPT1CFG"
SOPT1 Configuration Register, offset: 0x4 
.SS "\fB__IO\fP uint32_t SOPT2"
System Options Register 2, offset: 0x1004 
.SS "\fB__IO\fP uint32_t SOPT4"
System Options Register 4, offset: 0x100C 
.SS "\fB__IO\fP uint32_t SOPT5"
System Options Register 5, offset: 0x1010 
.SS "\fB__IO\fP uint32_t SOPT7"
System Options Register 7, offset: 0x1018 
.SS "struct { \&.\&.\&. }   SP[5]"

.SS "\fB__IO\fP uint8_t SR"
DAC Status Register, offset: 0x20 
.SS "\fB__I\fP uint32_t SR"
RNGA Status Register, offset: 0x4 
.SS "\fB__IO\fP uint32_t SR"
RTC Status Register, offset: 0x14 
.SS "\fB__IO\fP uint32_t SR"
Status Register, offset: 0x2C 
.SS "\fB__I\fP uint8_t SRS0"
System Reset Status Register 0, offset: 0x0 
.SS "\fB__I\fP uint8_t SRS1"
System Reset Status Register 1, offset: 0x1 
.SS "\fB__O\fP uint8_t SSRT"
Set START Bit Register, offset: 0x1D 
.SS "\fB__I\fP uint8_t STAT"
Status register, offset: 0x90 
.SS "\fB__IO\fP uint32_t STATUS"
Capture And Compare Status, offset: 0x50 
.SS "\fB__I\fP uint32_t STATUS"
Status register, offset: 0x8 
.SS "\fB__IO\fP uint16_t STCTRLH"
Watchdog Status and Control Register High, offset: 0x0 
.SS "\fB__IO\fP uint16_t STCTRLL"
Watchdog Status and Control Register Low, offset: 0x2 
.SS "\fB__I\fP uint32_t STR_CA[9]"
General Purpose Register 0 - Store Register command\&.\&.General Purpose Register 8 - Store Register command, array offset: 0x888, array step: 0x4 
.SS "\fB__I\fP uint32_t STR_CAA"
Accumulator register - Store Register command, offset: 0x884 
.SS "\fB__I\fP uint32_t STR_CASR"
Status register - Store Register command, offset: 0x880 
.SS "\fB__IO\fP uint32_t SWOCTRL"
FTM Software Output Control, offset: 0x94 
.SS "\fB__IO\fP uint32_t SYNC"
Synchronization, offset: 0x58 
.SS "\fB__IO\fP uint32_t SYNCONF"
Synchronization Configuration, offset: 0x8C 
.SS "\fB__IO\fP uint32_t SYSCTL"
System Control register, offset: 0x2C 
.SS "\fB__IO\fP uint32_t TACC"
Transmit Accelerator Function Configuration, offset: 0x1C0 
.SS "\fB__IO\fP uint32_t TAEM"
Transmit FIFO Almost Empty Threshold, offset: 0x1A4 
.SS "\fB__IO\fP uint32_t TAFL"
Transmit FIFO Almost Full Threshold, offset: 0x1A8 
.SS "\fB__IO\fP uint32_t TAGVDW0S[4]"
Cache Tag Storage, array offset: 0x100, array step: 0x4 
.SS "\fB__IO\fP uint32_t TAGVDW1S[4]"
Cache Tag Storage, array offset: 0x110, array step: 0x4 
.SS "\fB__IO\fP uint32_t TAGVDW2S[4]"
Cache Tag Storage, array offset: 0x120, array step: 0x4 
.SS "\fB__IO\fP uint32_t TAGVDW3S[4]"
Cache Tag Storage, array offset: 0x130, array step: 0x4 
.SS "\fB__IO\fP uint32_t TAR"
RTC Time Alarm Register, offset: 0x8 
.SS "\fB__IO\fP uint32_t TCCR"
Timer Compare Capture Register, array offset: 0x60C, array step: 0x8 
.SS "\fB__IO\fP uint32_t TCCR"
Timer Compare Capture Register, array offset: 0x60C, array step: 0x8 
.SS "struct { \&.\&.\&. }   TCD[16]"

.SS "\fB__I\fP uint8_t TCFIFO"
UART FIFO Transmit Count, offset: 0x14 
.SS "\fB__IO\fP uint32_t TCR"
Transmit Control Register, offset: 0xC4 
.SS "\fB__IO\fP uint32_t TCR"
RTC Time Compensation Register, offset: 0xC 
.SS "\fB__IO\fP uint32_t TCR"
Transfer Count Register, offset: 0x8 
.SS "\fB__IO\fP uint32_t TCR1"
SAI Transmit Configuration 1 Register, offset: 0x4 
.SS "\fB__IO\fP uint32_t TCR2"
SAI Transmit Configuration 2 Register, offset: 0x8 
.SS "\fB__IO\fP uint32_t TCR3"
SAI Transmit Configuration 3 Register, offset: 0xC 
.SS "\fB__IO\fP uint32_t TCR4"
SAI Transmit Configuration 4 Register, offset: 0x10 
.SS "\fB__IO\fP uint32_t TCR5"
SAI Transmit Configuration 5 Register, offset: 0x14 
.SS "\fB__IO\fP uint32_t TCSR"
Timer Control Status Register, array offset: 0x608, array step: 0x8 
.SS "\fB__IO\fP uint32_t TCSR"
Timer Control Status Register, array offset: 0x608, array step: 0x8 
.SS "\fB__IO\fP uint32_t TCSR"
SAI Transmit Control Register, offset: 0x0 
.SS "\fB__IO\fP uint32_t TCTRL"
Timer Control Register, array offset: 0x108, array step: 0x10 
.SS "\fB__IO\fP uint32_t TCTRL"
Timer Control Register, array offset: 0x108, array step: 0x10 
.SS "\fB__IO\fP uint32_t TDAR"
Transmit Descriptor Active Register, offset: 0x14 
.SS "\fB__O\fP uint32_t TDR[2]"
SAI Transmit Data Register, array offset: 0x20, array step: 0x4 
.SS "\fB__IO\fP uint32_t TDSR"
Transmit Buffer Descriptor Ring Start Register, offset: 0x184 
.SS "\fB__IO\fP uint32_t TFLG"
Timer Flag Register, array offset: 0x10C, array step: 0x10 
.SS "\fB__IO\fP uint32_t TFLG"
Timer Flag Register, array offset: 0x10C, array step: 0x10 
.SS "\fB__I\fP uint32_t TFR[2]"
SAI Transmit FIFO Register, array offset: 0x40, array step: 0x4 
.SS "\fB__IO\fP uint32_t TFWR"
Transmit FIFO Watermark Register, offset: 0x144 
.SS "\fB__IO\fP uint32_t TGSR"
Timer Global Status Register, offset: 0x604 
.SS "\fB__IO\fP uint32_t TIMER"
Free Running Timer, offset: 0x8 
.SS "\fB__IO\fP uint32_t TIMER0"
TIMER0 register, offset: 0x10 
.SS "\fB__IO\fP uint32_t TIMER1"
TIMER1 register, offset: 0x14 
.SS "\fB__IO\fP uint32_t TIMER2_BC11"
TIMER2_BC11 register, offset: 0x18 
.SS "\fB__IO\fP uint32_t TIMER2_BC11"
TIMER2_BC11 register, offset: 0x18 
.SS "\fB__IO\fP uint32_t TIMER2_BC12"
TIMER2_BC12 register, offset: 0x18 
.SS "\fB__IO\fP uint32_t TIMER2_BC12"
TIMER2_BC12 register, offset: 0x18 
.SS "\fB__IO\fP uint32_t TIPG"
Transmit Inter-Packet Gap, offset: 0x1AC 
.SS "\fB__IO\fP uint8_t TL7816"
UART 7816 Transmit Length Register, offset: 0x1F 
.SS "\fB__IO\fP uint32_t TMR"
SAI Transmit Mask Register, offset: 0x60 
.SS "\fB__IO\fP uint16_t TMROUTH"
Watchdog Timer Output Register High, offset: 0x10 
.SS "\fB__IO\fP uint16_t TMROUTL"
Watchdog Timer Output Register Low, offset: 0x12 
.SS "\fB__IO\fP uint8_t TOKEN"
Token register, offset: 0xA8 
.SS "\fB__IO\fP uint16_t TOVALH"
Watchdog Time-out Value Register High, offset: 0x4 
.SS "\fB__IO\fP uint16_t TOVALL"
Watchdog Time-out Value Register Low, offset: 0x6 
.SS "\fB__IO\fP uint32_t TPR"
RTC Time Prescaler Register, offset: 0x4 
.SS "\fB__IO\fP uint8_t TRM"
VREF Trim Register, offset: 0x0 
.SS "\fB__IO\fP uint32_t TSEM"
Transmit FIFO Section Empty Threshold, offset: 0x1A0 
.SS "\fB__IO\fP uint32_t TSR"
RTC Time Seconds Register, offset: 0x0 
.SS "\fB__IO\fP uint8_t TWFIFO"
UART FIFO Transmit Watermark, offset: 0x13 
.SS "\fB__I\fP uint32_t TXFR0"
Transmit FIFO Registers, offset: 0x3C 
.SS "\fB__I\fP uint32_t TXFR1"
Transmit FIFO Registers, offset: 0x40 
.SS "\fB__I\fP uint32_t TXFR2"
Transmit FIFO Registers, offset: 0x44 
.SS "\fB__I\fP uint32_t TXFR3"
Transmit FIFO Registers, offset: 0x48 
.SS "\fB__I\fP uint32_t UIDH"
Unique Identification Register High, offset: 0x1054 
.SS "\fB__I\fP uint32_t UIDL"
Unique Identification Register Low, offset: 0x1060 
.SS "\fB__I\fP uint32_t UIDMH"
Unique Identification Register Mid-High, offset: 0x1058 
.SS "\fB__I\fP uint32_t UIDML"
Unique Identification Register Mid Low, offset: 0x105C 
.SS "\fB__IO\fP uint16_t UNLOCK"
Watchdog Unlock register, offset: 0xE 
.SS "\fB__IO\fP uint8_t USBCTRL"
USB Control register, offset: 0x100 
.SS "\fB__IO\fP uint8_t USBFRMADJUST"
Frame Adjust Register, offset: 0x114 
.SS "\fB__IO\fP uint8_t USBTRC0"
USB Transceiver Control register 0, offset: 0x10C 
.SS "\fB__IO\fP uint32_t VENDOR"
Vendor Specific register, offset: 0xC0 
.SS "\fB__IO\fP uint8_t VLLSCTRL"
VLLS Control register, offset: 0x2 
.SS "\fB__IO\fP uint32_t WAR"
RTC Write Access Register, offset: 0x800 
.SS "\fB__IO\fP uint8_t WF7816"
UART 7816 Wait FD Register, offset: 0x1D 
.SS "\fB__IO\fP uint16_t WINH"
Watchdog Window Register High, offset: 0x8 
.SS "\fB__IO\fP uint16_t WINL"
Watchdog Window Register Low, offset: 0xA 
.SS "\fB__IO\fP uint32_t WML"
Watermark Level Register, offset: 0x44 
.SS "\fB__IO\fP uint8_t WN7816"
UART 7816 Wait N Register, offset: 0x1C 
.SS "\fB__IO\fP uint32_t WORD[12][4]"
Region Descriptor n, Word 0\&.\&.Region Descriptor n, Word 3, array offset: 0x400, array step: index*0x10, index2*0x4 
.SS "\fB__IO\fP uint32_t WORD0"
Message Buffer 0 WORD0 Register\&.\&.Message Buffer 15 WORD0 Register, array offset: 0x88, array step: 0x10 
.SS "\fB__IO\fP uint32_t WORD0"
Message Buffer 0 WORD0 Register\&.\&.Message Buffer 15 WORD0 Register, array offset: 0x88, array step: 0x10 
.SS "\fB__IO\fP uint32_t WORD1"
Message Buffer 0 WORD1 Register\&.\&.Message Buffer 15 WORD1 Register, array offset: 0x8C, array step: 0x10 
.SS "\fB__IO\fP uint32_t WORD1"
Message Buffer 0 WORD1 Register\&.\&.Message Buffer 15 WORD1 Register, array offset: 0x8C, array step: 0x10 
.SS "\fB__IO\fP uint8_t WP7816T0"
UART 7816 Wait Parameter Register, offset: 0x1B 
.SS "\fB__IO\fP uint8_t WP7816T0"
UART 7816 Wait Parameter Register, offset: 0x1B 
.SS "\fB__IO\fP uint8_t WP7816T1"
UART 7816 Wait Parameter Register, offset: 0x1B 
.SS "\fB__IO\fP uint8_t WP7816T1"
UART 7816 Wait Parameter Register, offset: 0x1B 
.SS "\fB__IO\fP uint32_t XFERTYP"
Transfer Type register, offset: 0xC 
.SS "\fB__O\fP uint32_t XOR_CA[9]"
General Purpose Register 0 - Exclusive Or command\&.\&.General Purpose Register 8 - Exclusive Or command, array offset: 0x988, array step: 0x4 
.SS "\fB__O\fP uint32_t XOR_CAA"
Accumulator register - Exclusive Or command, offset: 0x984 
.SS "\fB__O\fP uint32_t XOR_CASR"
Status register - Exclusive Or command, offset: 0x980 
.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
