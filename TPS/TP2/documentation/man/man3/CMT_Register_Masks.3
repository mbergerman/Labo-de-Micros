.TH "CMT_Register_Masks" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CMT_Register_Masks
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBCMT_BASE\fP   (0x40062000u)"
.br
.ti -1c
.RI "#define \fBCMT\fP   ((\fBCMT_Type\fP *)\fBCMT_BASE\fP)"
.br
.ti -1c
.RI "#define \fBCMT_BASE_ADDRS\fP   { \fBCMT_BASE\fP }"
.br
.ti -1c
.RI "#define \fBCMT_BASE_PTRS\fP   { \fBCMT\fP }"
.br
.ti -1c
.RI "#define \fBCMT_IRQS\fP   { \fBCMT_IRQn\fP }"
.br
.in -1c
.SS "CGH1 - CMT Carrier Generator High Data Register 1"

.in +1c
.ti -1c
.RI "#define \fBCMT_CGH1_PH_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBCMT_CGH1_PH_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCMT_CGH1_PH\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_CGH1_PH_SHIFT\fP)) & \fBCMT_CGH1_PH_MASK\fP)"
.br
.in -1c
.SS "CGL1 - CMT Carrier Generator Low Data Register 1"

.in +1c
.ti -1c
.RI "#define \fBCMT_CGL1_PL_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBCMT_CGL1_PL_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCMT_CGL1_PL\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_CGL1_PL_SHIFT\fP)) & \fBCMT_CGL1_PL_MASK\fP)"
.br
.in -1c
.SS "CGH2 - CMT Carrier Generator High Data Register 2"

.in +1c
.ti -1c
.RI "#define \fBCMT_CGH2_SH_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBCMT_CGH2_SH_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCMT_CGH2_SH\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_CGH2_SH_SHIFT\fP)) & \fBCMT_CGH2_SH_MASK\fP)"
.br
.in -1c
.SS "CGL2 - CMT Carrier Generator Low Data Register 2"

.in +1c
.ti -1c
.RI "#define \fBCMT_CGL2_SL_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBCMT_CGL2_SL_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCMT_CGL2_SL\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_CGL2_SL_SHIFT\fP)) & \fBCMT_CGL2_SL_MASK\fP)"
.br
.in -1c
.SS "OC - CMT Output Control Register"

.in +1c
.ti -1c
.RI "#define \fBCMT_OC_IROPEN_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBCMT_OC_IROPEN_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBCMT_OC_IROPEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_OC_IROPEN_SHIFT\fP)) & \fBCMT_OC_IROPEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCMT_OC_CMTPOL_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBCMT_OC_CMTPOL_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBCMT_OC_CMTPOL\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_OC_CMTPOL_SHIFT\fP)) & \fBCMT_OC_CMTPOL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCMT_OC_IROL_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBCMT_OC_IROL_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBCMT_OC_IROL\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_OC_IROL_SHIFT\fP)) & \fBCMT_OC_IROL_MASK\fP)"
.br
.in -1c
.SS "MSC - CMT Modulator Status and Control Register"

.in +1c
.ti -1c
.RI "#define \fBCMT_MSC_MCGEN_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_MCGEN_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_MCGEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_MSC_MCGEN_SHIFT\fP)) & \fBCMT_MSC_MCGEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_EOCIE_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_EOCIE_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_EOCIE\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_MSC_EOCIE_SHIFT\fP)) & \fBCMT_MSC_EOCIE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_FSK_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_FSK_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_FSK\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_MSC_FSK_SHIFT\fP)) & \fBCMT_MSC_FSK_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_BASE_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_BASE_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_BASE\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_MSC_BASE_SHIFT\fP)) & \fBCMT_MSC_BASE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_EXSPC_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_EXSPC_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_EXSPC\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_MSC_EXSPC_SHIFT\fP)) & \fBCMT_MSC_EXSPC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_CMTDIV_MASK\fP   (0x60U)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_CMTDIV_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_CMTDIV\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_MSC_CMTDIV_SHIFT\fP)) & \fBCMT_MSC_CMTDIV_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_EOCF_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_EOCF_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBCMT_MSC_EOCF\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_MSC_EOCF_SHIFT\fP)) & \fBCMT_MSC_EOCF_MASK\fP)"
.br
.in -1c
.SS "CMD1 - CMT Modulator Data Register Mark High"

.in +1c
.ti -1c
.RI "#define \fBCMT_CMD1_MB_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBCMT_CMD1_MB_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCMT_CMD1_MB\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_CMD1_MB_SHIFT\fP)) & \fBCMT_CMD1_MB_MASK\fP)"
.br
.in -1c
.SS "CMD2 - CMT Modulator Data Register Mark Low"

.in +1c
.ti -1c
.RI "#define \fBCMT_CMD2_MB_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBCMT_CMD2_MB_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCMT_CMD2_MB\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_CMD2_MB_SHIFT\fP)) & \fBCMT_CMD2_MB_MASK\fP)"
.br
.in -1c
.SS "CMD3 - CMT Modulator Data Register Space High"

.in +1c
.ti -1c
.RI "#define \fBCMT_CMD3_SB_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBCMT_CMD3_SB_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCMT_CMD3_SB\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_CMD3_SB_SHIFT\fP)) & \fBCMT_CMD3_SB_MASK\fP)"
.br
.in -1c
.SS "CMD4 - CMT Modulator Data Register Space Low"

.in +1c
.ti -1c
.RI "#define \fBCMT_CMD4_SB_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBCMT_CMD4_SB_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCMT_CMD4_SB\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_CMD4_SB_SHIFT\fP)) & \fBCMT_CMD4_SB_MASK\fP)"
.br
.in -1c
.SS "PPS - CMT Primary Prescaler Register"

.in +1c
.ti -1c
.RI "#define \fBCMT_PPS_PPSDIV_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBCMT_PPS_PPSDIV_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCMT_PPS_PPSDIV\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_PPS_PPSDIV_SHIFT\fP)) & \fBCMT_PPS_PPSDIV_MASK\fP)"
.br
.in -1c
.SS "DMA - CMT Direct Memory Access Register"

.in +1c
.ti -1c
.RI "#define \fBCMT_DMA_DMA_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBCMT_DMA_DMA_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCMT_DMA_DMA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_DMA_DMA_SHIFT\fP)) & \fBCMT_DMA_DMA_MASK\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define CMT   ((\fBCMT_Type\fP *)\fBCMT_BASE\fP)"
Peripheral CMT base pointer 
.SS "#define CMT_BASE   (0x40062000u)"
Peripheral CMT base address 
.SS "#define CMT_BASE_ADDRS   { \fBCMT_BASE\fP }"
Array initializer of CMT peripheral base addresses 
.SS "#define CMT_BASE_PTRS   { \fBCMT\fP }"
Array initializer of CMT peripheral base pointers 
.SS "#define CMT_CGH1_PH(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_CGH1_PH_SHIFT\fP)) & \fBCMT_CGH1_PH_MASK\fP)"

.SS "#define CMT_CGH1_PH_MASK   (0xFFU)"

.SS "#define CMT_CGH1_PH_SHIFT   (0U)"

.SS "#define CMT_CGH2_SH(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_CGH2_SH_SHIFT\fP)) & \fBCMT_CGH2_SH_MASK\fP)"

.SS "#define CMT_CGH2_SH_MASK   (0xFFU)"

.SS "#define CMT_CGH2_SH_SHIFT   (0U)"

.SS "#define CMT_CGL1_PL(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_CGL1_PL_SHIFT\fP)) & \fBCMT_CGL1_PL_MASK\fP)"

.SS "#define CMT_CGL1_PL_MASK   (0xFFU)"

.SS "#define CMT_CGL1_PL_SHIFT   (0U)"

.SS "#define CMT_CGL2_SL(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_CGL2_SL_SHIFT\fP)) & \fBCMT_CGL2_SL_MASK\fP)"

.SS "#define CMT_CGL2_SL_MASK   (0xFFU)"

.SS "#define CMT_CGL2_SL_SHIFT   (0U)"

.SS "#define CMT_CMD1_MB(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_CMD1_MB_SHIFT\fP)) & \fBCMT_CMD1_MB_MASK\fP)"

.SS "#define CMT_CMD1_MB_MASK   (0xFFU)"

.SS "#define CMT_CMD1_MB_SHIFT   (0U)"

.SS "#define CMT_CMD2_MB(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_CMD2_MB_SHIFT\fP)) & \fBCMT_CMD2_MB_MASK\fP)"

.SS "#define CMT_CMD2_MB_MASK   (0xFFU)"

.SS "#define CMT_CMD2_MB_SHIFT   (0U)"

.SS "#define CMT_CMD3_SB(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_CMD3_SB_SHIFT\fP)) & \fBCMT_CMD3_SB_MASK\fP)"

.SS "#define CMT_CMD3_SB_MASK   (0xFFU)"

.SS "#define CMT_CMD3_SB_SHIFT   (0U)"

.SS "#define CMT_CMD4_SB(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_CMD4_SB_SHIFT\fP)) & \fBCMT_CMD4_SB_MASK\fP)"

.SS "#define CMT_CMD4_SB_MASK   (0xFFU)"

.SS "#define CMT_CMD4_SB_SHIFT   (0U)"

.SS "#define CMT_DMA_DMA(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_DMA_DMA_SHIFT\fP)) & \fBCMT_DMA_DMA_MASK\fP)"

.SS "#define CMT_DMA_DMA_MASK   (0x1U)"

.SS "#define CMT_DMA_DMA_SHIFT   (0U)"

.SS "#define CMT_IRQS   { \fBCMT_IRQn\fP }"
Interrupt vectors for the CMT peripheral type 
.SS "#define CMT_MSC_BASE(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_MSC_BASE_SHIFT\fP)) & \fBCMT_MSC_BASE_MASK\fP)"

.SS "#define CMT_MSC_BASE_MASK   (0x8U)"

.SS "#define CMT_MSC_BASE_SHIFT   (3U)"

.SS "#define CMT_MSC_CMTDIV(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_MSC_CMTDIV_SHIFT\fP)) & \fBCMT_MSC_CMTDIV_MASK\fP)"

.SS "#define CMT_MSC_CMTDIV_MASK   (0x60U)"

.SS "#define CMT_MSC_CMTDIV_SHIFT   (5U)"

.SS "#define CMT_MSC_EOCF(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_MSC_EOCF_SHIFT\fP)) & \fBCMT_MSC_EOCF_MASK\fP)"

.SS "#define CMT_MSC_EOCF_MASK   (0x80U)"

.SS "#define CMT_MSC_EOCF_SHIFT   (7U)"

.SS "#define CMT_MSC_EOCIE(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_MSC_EOCIE_SHIFT\fP)) & \fBCMT_MSC_EOCIE_MASK\fP)"

.SS "#define CMT_MSC_EOCIE_MASK   (0x2U)"

.SS "#define CMT_MSC_EOCIE_SHIFT   (1U)"

.SS "#define CMT_MSC_EXSPC(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_MSC_EXSPC_SHIFT\fP)) & \fBCMT_MSC_EXSPC_MASK\fP)"

.SS "#define CMT_MSC_EXSPC_MASK   (0x10U)"

.SS "#define CMT_MSC_EXSPC_SHIFT   (4U)"

.SS "#define CMT_MSC_FSK(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_MSC_FSK_SHIFT\fP)) & \fBCMT_MSC_FSK_MASK\fP)"

.SS "#define CMT_MSC_FSK_MASK   (0x4U)"

.SS "#define CMT_MSC_FSK_SHIFT   (2U)"

.SS "#define CMT_MSC_MCGEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_MSC_MCGEN_SHIFT\fP)) & \fBCMT_MSC_MCGEN_MASK\fP)"

.SS "#define CMT_MSC_MCGEN_MASK   (0x1U)"

.SS "#define CMT_MSC_MCGEN_SHIFT   (0U)"

.SS "#define CMT_OC_CMTPOL(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_OC_CMTPOL_SHIFT\fP)) & \fBCMT_OC_CMTPOL_MASK\fP)"

.SS "#define CMT_OC_CMTPOL_MASK   (0x40U)"

.SS "#define CMT_OC_CMTPOL_SHIFT   (6U)"

.SS "#define CMT_OC_IROL(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_OC_IROL_SHIFT\fP)) & \fBCMT_OC_IROL_MASK\fP)"

.SS "#define CMT_OC_IROL_MASK   (0x80U)"

.SS "#define CMT_OC_IROL_SHIFT   (7U)"

.SS "#define CMT_OC_IROPEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_OC_IROPEN_SHIFT\fP)) & \fBCMT_OC_IROPEN_MASK\fP)"

.SS "#define CMT_OC_IROPEN_MASK   (0x20U)"

.SS "#define CMT_OC_IROPEN_SHIFT   (5U)"

.SS "#define CMT_PPS_PPSDIV(x)   (((uint8_t)(((uint8_t)(x)) << \fBCMT_PPS_PPSDIV_SHIFT\fP)) & \fBCMT_PPS_PPSDIV_MASK\fP)"

.SS "#define CMT_PPS_PPSDIV_MASK   (0xFU)"

.SS "#define CMT_PPS_PPSDIV_SHIFT   (0U)"

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
