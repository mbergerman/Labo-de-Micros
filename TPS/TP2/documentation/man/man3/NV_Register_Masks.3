.TH "NV_Register_Masks" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NV_Register_Masks
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBFTFE_FlashConfig_BASE\fP   (0x400u)"
.br
.ti -1c
.RI "#define \fBFTFE_FlashConfig\fP   ((\fBNV_Type\fP *)\fBFTFE_FlashConfig_BASE\fP)"
.br
.ti -1c
.RI "#define \fBNV_BASE_ADDRS\fP   { \fBFTFE_FlashConfig_BASE\fP }"
.br
.ti -1c
.RI "#define \fBNV_BASE_PTRS\fP   { \fBFTFE_FlashConfig\fP }"
.br
.in -1c
.SS "BACKKEY3 - Backdoor Comparison Key 3\&."

.in +1c
.ti -1c
.RI "#define \fBNV_BACKKEY3_KEY_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBNV_BACKKEY3_KEY_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBNV_BACKKEY3_KEY\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_BACKKEY3_KEY_SHIFT\fP)) & \fBNV_BACKKEY3_KEY_MASK\fP)"
.br
.in -1c
.SS "BACKKEY2 - Backdoor Comparison Key 2\&."

.in +1c
.ti -1c
.RI "#define \fBNV_BACKKEY2_KEY_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBNV_BACKKEY2_KEY_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBNV_BACKKEY2_KEY\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_BACKKEY2_KEY_SHIFT\fP)) & \fBNV_BACKKEY2_KEY_MASK\fP)"
.br
.in -1c
.SS "BACKKEY1 - Backdoor Comparison Key 1\&."

.in +1c
.ti -1c
.RI "#define \fBNV_BACKKEY1_KEY_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBNV_BACKKEY1_KEY_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBNV_BACKKEY1_KEY\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_BACKKEY1_KEY_SHIFT\fP)) & \fBNV_BACKKEY1_KEY_MASK\fP)"
.br
.in -1c
.SS "BACKKEY0 - Backdoor Comparison Key 0\&."

.in +1c
.ti -1c
.RI "#define \fBNV_BACKKEY0_KEY_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBNV_BACKKEY0_KEY_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBNV_BACKKEY0_KEY\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_BACKKEY0_KEY_SHIFT\fP)) & \fBNV_BACKKEY0_KEY_MASK\fP)"
.br
.in -1c
.SS "BACKKEY7 - Backdoor Comparison Key 7\&."

.in +1c
.ti -1c
.RI "#define \fBNV_BACKKEY7_KEY_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBNV_BACKKEY7_KEY_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBNV_BACKKEY7_KEY\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_BACKKEY7_KEY_SHIFT\fP)) & \fBNV_BACKKEY7_KEY_MASK\fP)"
.br
.in -1c
.SS "BACKKEY6 - Backdoor Comparison Key 6\&."

.in +1c
.ti -1c
.RI "#define \fBNV_BACKKEY6_KEY_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBNV_BACKKEY6_KEY_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBNV_BACKKEY6_KEY\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_BACKKEY6_KEY_SHIFT\fP)) & \fBNV_BACKKEY6_KEY_MASK\fP)"
.br
.in -1c
.SS "BACKKEY5 - Backdoor Comparison Key 5\&."

.in +1c
.ti -1c
.RI "#define \fBNV_BACKKEY5_KEY_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBNV_BACKKEY5_KEY_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBNV_BACKKEY5_KEY\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_BACKKEY5_KEY_SHIFT\fP)) & \fBNV_BACKKEY5_KEY_MASK\fP)"
.br
.in -1c
.SS "BACKKEY4 - Backdoor Comparison Key 4\&."

.in +1c
.ti -1c
.RI "#define \fBNV_BACKKEY4_KEY_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBNV_BACKKEY4_KEY_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBNV_BACKKEY4_KEY\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_BACKKEY4_KEY_SHIFT\fP)) & \fBNV_BACKKEY4_KEY_MASK\fP)"
.br
.in -1c
.SS "FPROT3 - Non-volatile P-Flash Protection 1 - Low Register"

.in +1c
.ti -1c
.RI "#define \fBNV_FPROT3_PROT_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBNV_FPROT3_PROT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBNV_FPROT3_PROT\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FPROT3_PROT_SHIFT\fP)) & \fBNV_FPROT3_PROT_MASK\fP)"
.br
.in -1c
.SS "FPROT2 - Non-volatile P-Flash Protection 1 - High Register"

.in +1c
.ti -1c
.RI "#define \fBNV_FPROT2_PROT_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBNV_FPROT2_PROT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBNV_FPROT2_PROT\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FPROT2_PROT_SHIFT\fP)) & \fBNV_FPROT2_PROT_MASK\fP)"
.br
.in -1c
.SS "FPROT1 - Non-volatile P-Flash Protection 0 - Low Register"

.in +1c
.ti -1c
.RI "#define \fBNV_FPROT1_PROT_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBNV_FPROT1_PROT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBNV_FPROT1_PROT\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FPROT1_PROT_SHIFT\fP)) & \fBNV_FPROT1_PROT_MASK\fP)"
.br
.in -1c
.SS "FPROT0 - Non-volatile P-Flash Protection 0 - High Register"

.in +1c
.ti -1c
.RI "#define \fBNV_FPROT0_PROT_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBNV_FPROT0_PROT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBNV_FPROT0_PROT\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FPROT0_PROT_SHIFT\fP)) & \fBNV_FPROT0_PROT_MASK\fP)"
.br
.in -1c
.SS "FSEC - Non-volatile Flash Security Register"

.in +1c
.ti -1c
.RI "#define \fBNV_FSEC_SEC_MASK\fP   (0x3U)"
.br
.ti -1c
.RI "#define \fBNV_FSEC_SEC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBNV_FSEC_SEC\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FSEC_SEC_SHIFT\fP)) & \fBNV_FSEC_SEC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBNV_FSEC_FSLACC_MASK\fP   (0xCU)"
.br
.ti -1c
.RI "#define \fBNV_FSEC_FSLACC_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBNV_FSEC_FSLACC\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FSEC_FSLACC_SHIFT\fP)) & \fBNV_FSEC_FSLACC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBNV_FSEC_MEEN_MASK\fP   (0x30U)"
.br
.ti -1c
.RI "#define \fBNV_FSEC_MEEN_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBNV_FSEC_MEEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FSEC_MEEN_SHIFT\fP)) & \fBNV_FSEC_MEEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBNV_FSEC_KEYEN_MASK\fP   (0xC0U)"
.br
.ti -1c
.RI "#define \fBNV_FSEC_KEYEN_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBNV_FSEC_KEYEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FSEC_KEYEN_SHIFT\fP)) & \fBNV_FSEC_KEYEN_MASK\fP)"
.br
.in -1c
.SS "FOPT - Non-volatile Flash Option Register"

.in +1c
.ti -1c
.RI "#define \fBNV_FOPT_LPBOOT_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBNV_FOPT_LPBOOT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBNV_FOPT_LPBOOT\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FOPT_LPBOOT_SHIFT\fP)) & \fBNV_FOPT_LPBOOT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBNV_FOPT_EZPORT_DIS_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBNV_FOPT_EZPORT_DIS_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBNV_FOPT_EZPORT_DIS\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FOPT_EZPORT_DIS_SHIFT\fP)) & \fBNV_FOPT_EZPORT_DIS_MASK\fP)"
.br
.in -1c
.SS "FEPROT - Non-volatile EERAM Protection Register"

.in +1c
.ti -1c
.RI "#define \fBNV_FEPROT_EPROT_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBNV_FEPROT_EPROT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBNV_FEPROT_EPROT\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FEPROT_EPROT_SHIFT\fP)) & \fBNV_FEPROT_EPROT_MASK\fP)"
.br
.in -1c
.SS "FDPROT - Non-volatile D-Flash Protection Register"

.in +1c
.ti -1c
.RI "#define \fBNV_FDPROT_DPROT_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBNV_FDPROT_DPROT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBNV_FDPROT_DPROT\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FDPROT_DPROT_SHIFT\fP)) & \fBNV_FDPROT_DPROT_MASK\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define FTFE_FlashConfig   ((\fBNV_Type\fP *)\fBFTFE_FlashConfig_BASE\fP)"
Peripheral FTFE_FlashConfig base pointer 
.SS "#define FTFE_FlashConfig_BASE   (0x400u)"
Peripheral FTFE_FlashConfig base address 
.SS "#define NV_BACKKEY0_KEY(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_BACKKEY0_KEY_SHIFT\fP)) & \fBNV_BACKKEY0_KEY_MASK\fP)"

.SS "#define NV_BACKKEY0_KEY_MASK   (0xFFU)"

.SS "#define NV_BACKKEY0_KEY_SHIFT   (0U)"

.SS "#define NV_BACKKEY1_KEY(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_BACKKEY1_KEY_SHIFT\fP)) & \fBNV_BACKKEY1_KEY_MASK\fP)"

.SS "#define NV_BACKKEY1_KEY_MASK   (0xFFU)"

.SS "#define NV_BACKKEY1_KEY_SHIFT   (0U)"

.SS "#define NV_BACKKEY2_KEY(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_BACKKEY2_KEY_SHIFT\fP)) & \fBNV_BACKKEY2_KEY_MASK\fP)"

.SS "#define NV_BACKKEY2_KEY_MASK   (0xFFU)"

.SS "#define NV_BACKKEY2_KEY_SHIFT   (0U)"

.SS "#define NV_BACKKEY3_KEY(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_BACKKEY3_KEY_SHIFT\fP)) & \fBNV_BACKKEY3_KEY_MASK\fP)"

.SS "#define NV_BACKKEY3_KEY_MASK   (0xFFU)"

.SS "#define NV_BACKKEY3_KEY_SHIFT   (0U)"

.SS "#define NV_BACKKEY4_KEY(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_BACKKEY4_KEY_SHIFT\fP)) & \fBNV_BACKKEY4_KEY_MASK\fP)"

.SS "#define NV_BACKKEY4_KEY_MASK   (0xFFU)"

.SS "#define NV_BACKKEY4_KEY_SHIFT   (0U)"

.SS "#define NV_BACKKEY5_KEY(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_BACKKEY5_KEY_SHIFT\fP)) & \fBNV_BACKKEY5_KEY_MASK\fP)"

.SS "#define NV_BACKKEY5_KEY_MASK   (0xFFU)"

.SS "#define NV_BACKKEY5_KEY_SHIFT   (0U)"

.SS "#define NV_BACKKEY6_KEY(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_BACKKEY6_KEY_SHIFT\fP)) & \fBNV_BACKKEY6_KEY_MASK\fP)"

.SS "#define NV_BACKKEY6_KEY_MASK   (0xFFU)"

.SS "#define NV_BACKKEY6_KEY_SHIFT   (0U)"

.SS "#define NV_BACKKEY7_KEY(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_BACKKEY7_KEY_SHIFT\fP)) & \fBNV_BACKKEY7_KEY_MASK\fP)"

.SS "#define NV_BACKKEY7_KEY_MASK   (0xFFU)"

.SS "#define NV_BACKKEY7_KEY_SHIFT   (0U)"

.SS "#define NV_BASE_ADDRS   { \fBFTFE_FlashConfig_BASE\fP }"
Array initializer of NV peripheral base addresses 
.SS "#define NV_BASE_PTRS   { \fBFTFE_FlashConfig\fP }"
Array initializer of NV peripheral base pointers 
.SS "#define NV_FDPROT_DPROT(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FDPROT_DPROT_SHIFT\fP)) & \fBNV_FDPROT_DPROT_MASK\fP)"

.SS "#define NV_FDPROT_DPROT_MASK   (0xFFU)"

.SS "#define NV_FDPROT_DPROT_SHIFT   (0U)"

.SS "#define NV_FEPROT_EPROT(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FEPROT_EPROT_SHIFT\fP)) & \fBNV_FEPROT_EPROT_MASK\fP)"

.SS "#define NV_FEPROT_EPROT_MASK   (0xFFU)"

.SS "#define NV_FEPROT_EPROT_SHIFT   (0U)"

.SS "#define NV_FOPT_EZPORT_DIS(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FOPT_EZPORT_DIS_SHIFT\fP)) & \fBNV_FOPT_EZPORT_DIS_MASK\fP)"

.SS "#define NV_FOPT_EZPORT_DIS_MASK   (0x2U)"

.SS "#define NV_FOPT_EZPORT_DIS_SHIFT   (1U)"

.SS "#define NV_FOPT_LPBOOT(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FOPT_LPBOOT_SHIFT\fP)) & \fBNV_FOPT_LPBOOT_MASK\fP)"

.SS "#define NV_FOPT_LPBOOT_MASK   (0x1U)"

.SS "#define NV_FOPT_LPBOOT_SHIFT   (0U)"

.SS "#define NV_FPROT0_PROT(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FPROT0_PROT_SHIFT\fP)) & \fBNV_FPROT0_PROT_MASK\fP)"

.SS "#define NV_FPROT0_PROT_MASK   (0xFFU)"

.SS "#define NV_FPROT0_PROT_SHIFT   (0U)"

.SS "#define NV_FPROT1_PROT(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FPROT1_PROT_SHIFT\fP)) & \fBNV_FPROT1_PROT_MASK\fP)"

.SS "#define NV_FPROT1_PROT_MASK   (0xFFU)"

.SS "#define NV_FPROT1_PROT_SHIFT   (0U)"

.SS "#define NV_FPROT2_PROT(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FPROT2_PROT_SHIFT\fP)) & \fBNV_FPROT2_PROT_MASK\fP)"

.SS "#define NV_FPROT2_PROT_MASK   (0xFFU)"

.SS "#define NV_FPROT2_PROT_SHIFT   (0U)"

.SS "#define NV_FPROT3_PROT(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FPROT3_PROT_SHIFT\fP)) & \fBNV_FPROT3_PROT_MASK\fP)"

.SS "#define NV_FPROT3_PROT_MASK   (0xFFU)"

.SS "#define NV_FPROT3_PROT_SHIFT   (0U)"

.SS "#define NV_FSEC_FSLACC(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FSEC_FSLACC_SHIFT\fP)) & \fBNV_FSEC_FSLACC_MASK\fP)"

.SS "#define NV_FSEC_FSLACC_MASK   (0xCU)"

.SS "#define NV_FSEC_FSLACC_SHIFT   (2U)"

.SS "#define NV_FSEC_KEYEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FSEC_KEYEN_SHIFT\fP)) & \fBNV_FSEC_KEYEN_MASK\fP)"

.SS "#define NV_FSEC_KEYEN_MASK   (0xC0U)"

.SS "#define NV_FSEC_KEYEN_SHIFT   (6U)"

.SS "#define NV_FSEC_MEEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FSEC_MEEN_SHIFT\fP)) & \fBNV_FSEC_MEEN_MASK\fP)"

.SS "#define NV_FSEC_MEEN_MASK   (0x30U)"

.SS "#define NV_FSEC_MEEN_SHIFT   (4U)"

.SS "#define NV_FSEC_SEC(x)   (((uint8_t)(((uint8_t)(x)) << \fBNV_FSEC_SEC_SHIFT\fP)) & \fBNV_FSEC_SEC_MASK\fP)"

.SS "#define NV_FSEC_SEC_MASK   (0x3U)"

.SS "#define NV_FSEC_SEC_SHIFT   (0U)"

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
