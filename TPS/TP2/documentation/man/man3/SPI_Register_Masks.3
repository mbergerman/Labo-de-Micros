.TH "SPI_Register_Masks" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SPI_Register_Masks
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBSPI0_BASE\fP   (0x4002C000u)"
.br
.ti -1c
.RI "#define \fBSPI0\fP   ((\fBSPI_Type\fP *)\fBSPI0_BASE\fP)"
.br
.ti -1c
.RI "#define \fBSPI1_BASE\fP   (0x4002D000u)"
.br
.ti -1c
.RI "#define \fBSPI1\fP   ((\fBSPI_Type\fP *)\fBSPI1_BASE\fP)"
.br
.ti -1c
.RI "#define \fBSPI2_BASE\fP   (0x400AC000u)"
.br
.ti -1c
.RI "#define \fBSPI2\fP   ((\fBSPI_Type\fP *)\fBSPI2_BASE\fP)"
.br
.ti -1c
.RI "#define \fBSPI_BASE_ADDRS\fP   { \fBSPI0_BASE\fP, \fBSPI1_BASE\fP, \fBSPI2_BASE\fP }"
.br
.ti -1c
.RI "#define \fBSPI_BASE_PTRS\fP   { \fBSPI0\fP, \fBSPI1\fP, \fBSPI2\fP }"
.br
.ti -1c
.RI "#define \fBSPI_IRQS\fP   { \fBSPI0_IRQn\fP, \fBSPI1_IRQn\fP, \fBSPI2_IRQn\fP }"
.br
.in -1c
.SS "MCR - Module Configuration Register"

.in +1c
.ti -1c
.RI "#define \fBSPI_MCR_HALT_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_HALT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_HALT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_HALT_SHIFT\fP)) & \fBSPI_MCR_HALT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_SMPL_PT_MASK\fP   (0x300U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_SMPL_PT_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_SMPL_PT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_SMPL_PT_SHIFT\fP)) & \fBSPI_MCR_SMPL_PT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_CLR_RXF_MASK\fP   (0x400U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_CLR_RXF_SHIFT\fP   (10U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_CLR_RXF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_CLR_RXF_SHIFT\fP)) & \fBSPI_MCR_CLR_RXF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_CLR_TXF_MASK\fP   (0x800U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_CLR_TXF_SHIFT\fP   (11U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_CLR_TXF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_CLR_TXF_SHIFT\fP)) & \fBSPI_MCR_CLR_TXF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_DIS_RXF_MASK\fP   (0x1000U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_DIS_RXF_SHIFT\fP   (12U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_DIS_RXF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_DIS_RXF_SHIFT\fP)) & \fBSPI_MCR_DIS_RXF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_DIS_TXF_MASK\fP   (0x2000U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_DIS_TXF_SHIFT\fP   (13U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_DIS_TXF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_DIS_TXF_SHIFT\fP)) & \fBSPI_MCR_DIS_TXF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_MDIS_MASK\fP   (0x4000U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_MDIS_SHIFT\fP   (14U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_MDIS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_MDIS_SHIFT\fP)) & \fBSPI_MCR_MDIS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_DOZE_MASK\fP   (0x8000U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_DOZE_SHIFT\fP   (15U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_DOZE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_DOZE_SHIFT\fP)) & \fBSPI_MCR_DOZE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_PCSIS_MASK\fP   (0x3F0000U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_PCSIS_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_PCSIS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_PCSIS_SHIFT\fP)) & \fBSPI_MCR_PCSIS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_ROOE_MASK\fP   (0x1000000U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_ROOE_SHIFT\fP   (24U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_ROOE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_ROOE_SHIFT\fP)) & \fBSPI_MCR_ROOE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_PCSSE_MASK\fP   (0x2000000U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_PCSSE_SHIFT\fP   (25U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_PCSSE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_PCSSE_SHIFT\fP)) & \fBSPI_MCR_PCSSE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_MTFE_MASK\fP   (0x4000000U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_MTFE_SHIFT\fP   (26U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_MTFE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_MTFE_SHIFT\fP)) & \fBSPI_MCR_MTFE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_FRZ_MASK\fP   (0x8000000U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_FRZ_SHIFT\fP   (27U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_FRZ\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_FRZ_SHIFT\fP)) & \fBSPI_MCR_FRZ_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_DCONF_MASK\fP   (0x30000000U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_DCONF_SHIFT\fP   (28U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_DCONF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_DCONF_SHIFT\fP)) & \fBSPI_MCR_DCONF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_CONT_SCKE_MASK\fP   (0x40000000U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_CONT_SCKE_SHIFT\fP   (30U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_CONT_SCKE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_CONT_SCKE_SHIFT\fP)) & \fBSPI_MCR_CONT_SCKE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_MSTR_MASK\fP   (0x80000000U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_MSTR_SHIFT\fP   (31U)"
.br
.ti -1c
.RI "#define \fBSPI_MCR_MSTR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_MSTR_SHIFT\fP)) & \fBSPI_MCR_MSTR_MASK\fP)"
.br
.in -1c
.SS "TCR - Transfer Count Register"

.in +1c
.ti -1c
.RI "#define \fBSPI_TCR_SPI_TCNT_MASK\fP   (0xFFFF0000U)"
.br
.ti -1c
.RI "#define \fBSPI_TCR_SPI_TCNT_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBSPI_TCR_SPI_TCNT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TCR_SPI_TCNT_SHIFT\fP)) & \fBSPI_TCR_SPI_TCNT_MASK\fP)"
.br
.in -1c
.SS "CTAR - Clock and Transfer Attributes Register (In Master Mode)"

.in +1c
.ti -1c
.RI "#define \fBSPI_CTAR_BR_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_BR_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_BR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_BR_SHIFT\fP)) & \fBSPI_CTAR_BR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_DT_MASK\fP   (0xF0U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_DT_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_DT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_DT_SHIFT\fP)) & \fBSPI_CTAR_DT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_ASC_MASK\fP   (0xF00U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_ASC_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_ASC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_ASC_SHIFT\fP)) & \fBSPI_CTAR_ASC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_CSSCK_MASK\fP   (0xF000U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_CSSCK_SHIFT\fP   (12U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_CSSCK\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_CSSCK_SHIFT\fP)) & \fBSPI_CTAR_CSSCK_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_PBR_MASK\fP   (0x30000U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_PBR_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_PBR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_PBR_SHIFT\fP)) & \fBSPI_CTAR_PBR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_PDT_MASK\fP   (0xC0000U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_PDT_SHIFT\fP   (18U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_PDT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_PDT_SHIFT\fP)) & \fBSPI_CTAR_PDT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_PASC_MASK\fP   (0x300000U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_PASC_SHIFT\fP   (20U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_PASC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_PASC_SHIFT\fP)) & \fBSPI_CTAR_PASC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_PCSSCK_MASK\fP   (0xC00000U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_PCSSCK_SHIFT\fP   (22U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_PCSSCK\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_PCSSCK_SHIFT\fP)) & \fBSPI_CTAR_PCSSCK_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_LSBFE_MASK\fP   (0x1000000U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_LSBFE_SHIFT\fP   (24U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_LSBFE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_LSBFE_SHIFT\fP)) & \fBSPI_CTAR_LSBFE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_CPHA_MASK\fP   (0x2000000U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_CPHA_SHIFT\fP   (25U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_CPHA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_CPHA_SHIFT\fP)) & \fBSPI_CTAR_CPHA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_CPOL_MASK\fP   (0x4000000U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_CPOL_SHIFT\fP   (26U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_CPOL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_CPOL_SHIFT\fP)) & \fBSPI_CTAR_CPOL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_FMSZ_MASK\fP   (0x78000000U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_FMSZ_SHIFT\fP   (27U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_FMSZ\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_FMSZ_SHIFT\fP)) & \fBSPI_CTAR_FMSZ_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_DBR_MASK\fP   (0x80000000U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_DBR_SHIFT\fP   (31U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_DBR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_DBR_SHIFT\fP)) & \fBSPI_CTAR_DBR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_COUNT\fP   (2U)"
.br
.in -1c
.SS "CTAR_SLAVE - Clock and Transfer Attributes Register (In Slave Mode)"

.in +1c
.ti -1c
.RI "#define \fBSPI_CTAR_SLAVE_CPHA_MASK\fP   (0x2000000U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_SLAVE_CPHA_SHIFT\fP   (25U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_SLAVE_CPHA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_SLAVE_CPHA_SHIFT\fP)) & \fBSPI_CTAR_SLAVE_CPHA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_SLAVE_CPOL_MASK\fP   (0x4000000U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_SLAVE_CPOL_SHIFT\fP   (26U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_SLAVE_CPOL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_SLAVE_CPOL_SHIFT\fP)) & \fBSPI_CTAR_SLAVE_CPOL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_SLAVE_FMSZ_MASK\fP   (0xF8000000U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_SLAVE_FMSZ_SHIFT\fP   (27U)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_SLAVE_FMSZ\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_SLAVE_FMSZ_SHIFT\fP)) & \fBSPI_CTAR_SLAVE_FMSZ_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_CTAR_SLAVE_COUNT\fP   (1U)"
.br
.in -1c
.SS "SR - Status Register"

.in +1c
.ti -1c
.RI "#define \fBSPI_SR_POPNXTPTR_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBSPI_SR_POPNXTPTR_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_POPNXTPTR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_POPNXTPTR_SHIFT\fP)) & \fBSPI_SR_POPNXTPTR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_SR_RXCTR_MASK\fP   (0xF0U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_RXCTR_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_RXCTR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_RXCTR_SHIFT\fP)) & \fBSPI_SR_RXCTR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TXNXTPTR_MASK\fP   (0xF00U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TXNXTPTR_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TXNXTPTR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_TXNXTPTR_SHIFT\fP)) & \fBSPI_SR_TXNXTPTR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TXCTR_MASK\fP   (0xF000U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TXCTR_SHIFT\fP   (12U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TXCTR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_TXCTR_SHIFT\fP)) & \fBSPI_SR_TXCTR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_SR_RFDF_MASK\fP   (0x20000U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_RFDF_SHIFT\fP   (17U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_RFDF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_RFDF_SHIFT\fP)) & \fBSPI_SR_RFDF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_SR_RFOF_MASK\fP   (0x80000U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_RFOF_SHIFT\fP   (19U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_RFOF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_RFOF_SHIFT\fP)) & \fBSPI_SR_RFOF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TFFF_MASK\fP   (0x2000000U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TFFF_SHIFT\fP   (25U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TFFF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_TFFF_SHIFT\fP)) & \fBSPI_SR_TFFF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TFUF_MASK\fP   (0x8000000U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TFUF_SHIFT\fP   (27U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TFUF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_TFUF_SHIFT\fP)) & \fBSPI_SR_TFUF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_SR_EOQF_MASK\fP   (0x10000000U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_EOQF_SHIFT\fP   (28U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_EOQF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_EOQF_SHIFT\fP)) & \fBSPI_SR_EOQF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TXRXS_MASK\fP   (0x40000000U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TXRXS_SHIFT\fP   (30U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TXRXS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_TXRXS_SHIFT\fP)) & \fBSPI_SR_TXRXS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TCF_MASK\fP   (0x80000000U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TCF_SHIFT\fP   (31U)"
.br
.ti -1c
.RI "#define \fBSPI_SR_TCF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_TCF_SHIFT\fP)) & \fBSPI_SR_TCF_MASK\fP)"
.br
.in -1c
.SS "RSER - DMA/Interrupt Request Select and Enable Register"

.in +1c
.ti -1c
.RI "#define \fBSPI_RSER_RFDF_DIRS_MASK\fP   (0x10000U)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_RFDF_DIRS_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_RFDF_DIRS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RSER_RFDF_DIRS_SHIFT\fP)) & \fBSPI_RSER_RFDF_DIRS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_RFDF_RE_MASK\fP   (0x20000U)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_RFDF_RE_SHIFT\fP   (17U)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_RFDF_RE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RSER_RFDF_RE_SHIFT\fP)) & \fBSPI_RSER_RFDF_RE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_RFOF_RE_MASK\fP   (0x80000U)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_RFOF_RE_SHIFT\fP   (19U)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_RFOF_RE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RSER_RFOF_RE_SHIFT\fP)) & \fBSPI_RSER_RFOF_RE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_TFFF_DIRS_MASK\fP   (0x1000000U)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_TFFF_DIRS_SHIFT\fP   (24U)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_TFFF_DIRS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RSER_TFFF_DIRS_SHIFT\fP)) & \fBSPI_RSER_TFFF_DIRS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_TFFF_RE_MASK\fP   (0x2000000U)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_TFFF_RE_SHIFT\fP   (25U)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_TFFF_RE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RSER_TFFF_RE_SHIFT\fP)) & \fBSPI_RSER_TFFF_RE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_TFUF_RE_MASK\fP   (0x8000000U)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_TFUF_RE_SHIFT\fP   (27U)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_TFUF_RE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RSER_TFUF_RE_SHIFT\fP)) & \fBSPI_RSER_TFUF_RE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_EOQF_RE_MASK\fP   (0x10000000U)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_EOQF_RE_SHIFT\fP   (28U)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_EOQF_RE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RSER_EOQF_RE_SHIFT\fP)) & \fBSPI_RSER_EOQF_RE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_TCF_RE_MASK\fP   (0x80000000U)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_TCF_RE_SHIFT\fP   (31U)"
.br
.ti -1c
.RI "#define \fBSPI_RSER_TCF_RE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RSER_TCF_RE_SHIFT\fP)) & \fBSPI_RSER_TCF_RE_MASK\fP)"
.br
.in -1c
.SS "PUSHR - PUSH TX FIFO Register In Master Mode"

.in +1c
.ti -1c
.RI "#define \fBSPI_PUSHR_TXDATA_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_TXDATA_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_TXDATA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_PUSHR_TXDATA_SHIFT\fP)) & \fBSPI_PUSHR_TXDATA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_PCS_MASK\fP   (0x3F0000U)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_PCS_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_PCS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_PUSHR_PCS_SHIFT\fP)) & \fBSPI_PUSHR_PCS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_CTCNT_MASK\fP   (0x4000000U)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_CTCNT_SHIFT\fP   (26U)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_CTCNT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_PUSHR_CTCNT_SHIFT\fP)) & \fBSPI_PUSHR_CTCNT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_EOQ_MASK\fP   (0x8000000U)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_EOQ_SHIFT\fP   (27U)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_EOQ\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_PUSHR_EOQ_SHIFT\fP)) & \fBSPI_PUSHR_EOQ_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_CTAS_MASK\fP   (0x70000000U)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_CTAS_SHIFT\fP   (28U)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_CTAS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_PUSHR_CTAS_SHIFT\fP)) & \fBSPI_PUSHR_CTAS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_CONT_MASK\fP   (0x80000000U)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_CONT_SHIFT\fP   (31U)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_CONT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_PUSHR_CONT_SHIFT\fP)) & \fBSPI_PUSHR_CONT_MASK\fP)"
.br
.in -1c
.SS "PUSHR_SLAVE - PUSH TX FIFO Register In Slave Mode"

.in +1c
.ti -1c
.RI "#define \fBSPI_PUSHR_SLAVE_TXDATA_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_SLAVE_TXDATA_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBSPI_PUSHR_SLAVE_TXDATA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_PUSHR_SLAVE_TXDATA_SHIFT\fP)) & \fBSPI_PUSHR_SLAVE_TXDATA_MASK\fP)"
.br
.in -1c
.SS "POPR - POP RX FIFO Register"

.in +1c
.ti -1c
.RI "#define \fBSPI_POPR_RXDATA_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBSPI_POPR_RXDATA_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBSPI_POPR_RXDATA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_POPR_RXDATA_SHIFT\fP)) & \fBSPI_POPR_RXDATA_MASK\fP)"
.br
.in -1c
.SS "TXFR0 - Transmit FIFO Registers"

.in +1c
.ti -1c
.RI "#define \fBSPI_TXFR0_TXDATA_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR0_TXDATA_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR0_TXDATA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TXFR0_TXDATA_SHIFT\fP)) & \fBSPI_TXFR0_TXDATA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR0_TXCMD_TXDATA_MASK\fP   (0xFFFF0000U)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR0_TXCMD_TXDATA_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR0_TXCMD_TXDATA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TXFR0_TXCMD_TXDATA_SHIFT\fP)) & \fBSPI_TXFR0_TXCMD_TXDATA_MASK\fP)"
.br
.in -1c
.SS "TXFR1 - Transmit FIFO Registers"

.in +1c
.ti -1c
.RI "#define \fBSPI_TXFR1_TXDATA_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR1_TXDATA_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR1_TXDATA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TXFR1_TXDATA_SHIFT\fP)) & \fBSPI_TXFR1_TXDATA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR1_TXCMD_TXDATA_MASK\fP   (0xFFFF0000U)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR1_TXCMD_TXDATA_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR1_TXCMD_TXDATA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TXFR1_TXCMD_TXDATA_SHIFT\fP)) & \fBSPI_TXFR1_TXCMD_TXDATA_MASK\fP)"
.br
.in -1c
.SS "TXFR2 - Transmit FIFO Registers"

.in +1c
.ti -1c
.RI "#define \fBSPI_TXFR2_TXDATA_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR2_TXDATA_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR2_TXDATA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TXFR2_TXDATA_SHIFT\fP)) & \fBSPI_TXFR2_TXDATA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR2_TXCMD_TXDATA_MASK\fP   (0xFFFF0000U)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR2_TXCMD_TXDATA_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR2_TXCMD_TXDATA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TXFR2_TXCMD_TXDATA_SHIFT\fP)) & \fBSPI_TXFR2_TXCMD_TXDATA_MASK\fP)"
.br
.in -1c
.SS "TXFR3 - Transmit FIFO Registers"

.in +1c
.ti -1c
.RI "#define \fBSPI_TXFR3_TXDATA_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR3_TXDATA_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR3_TXDATA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TXFR3_TXDATA_SHIFT\fP)) & \fBSPI_TXFR3_TXDATA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR3_TXCMD_TXDATA_MASK\fP   (0xFFFF0000U)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR3_TXCMD_TXDATA_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBSPI_TXFR3_TXCMD_TXDATA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TXFR3_TXCMD_TXDATA_SHIFT\fP)) & \fBSPI_TXFR3_TXCMD_TXDATA_MASK\fP)"
.br
.in -1c
.SS "RXFR0 - Receive FIFO Registers"

.in +1c
.ti -1c
.RI "#define \fBSPI_RXFR0_RXDATA_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBSPI_RXFR0_RXDATA_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBSPI_RXFR0_RXDATA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RXFR0_RXDATA_SHIFT\fP)) & \fBSPI_RXFR0_RXDATA_MASK\fP)"
.br
.in -1c
.SS "RXFR1 - Receive FIFO Registers"

.in +1c
.ti -1c
.RI "#define \fBSPI_RXFR1_RXDATA_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBSPI_RXFR1_RXDATA_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBSPI_RXFR1_RXDATA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RXFR1_RXDATA_SHIFT\fP)) & \fBSPI_RXFR1_RXDATA_MASK\fP)"
.br
.in -1c
.SS "RXFR2 - Receive FIFO Registers"

.in +1c
.ti -1c
.RI "#define \fBSPI_RXFR2_RXDATA_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBSPI_RXFR2_RXDATA_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBSPI_RXFR2_RXDATA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RXFR2_RXDATA_SHIFT\fP)) & \fBSPI_RXFR2_RXDATA_MASK\fP)"
.br
.in -1c
.SS "RXFR3 - Receive FIFO Registers"

.in +1c
.ti -1c
.RI "#define \fBSPI_RXFR3_RXDATA_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBSPI_RXFR3_RXDATA_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBSPI_RXFR3_RXDATA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RXFR3_RXDATA_SHIFT\fP)) & \fBSPI_RXFR3_RXDATA_MASK\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define SPI0   ((\fBSPI_Type\fP *)\fBSPI0_BASE\fP)"
Peripheral SPI0 base pointer 
.SS "#define SPI0_BASE   (0x4002C000u)"
Peripheral SPI0 base address 
.SS "#define SPI1   ((\fBSPI_Type\fP *)\fBSPI1_BASE\fP)"
Peripheral SPI1 base pointer 
.SS "#define SPI1_BASE   (0x4002D000u)"
Peripheral SPI1 base address 
.SS "#define SPI2   ((\fBSPI_Type\fP *)\fBSPI2_BASE\fP)"
Peripheral SPI2 base pointer 
.SS "#define SPI2_BASE   (0x400AC000u)"
Peripheral SPI2 base address 
.SS "#define SPI_BASE_ADDRS   { \fBSPI0_BASE\fP, \fBSPI1_BASE\fP, \fBSPI2_BASE\fP }"
Array initializer of SPI peripheral base addresses 
.SS "#define SPI_BASE_PTRS   { \fBSPI0\fP, \fBSPI1\fP, \fBSPI2\fP }"
Array initializer of SPI peripheral base pointers 
.SS "#define SPI_CTAR_ASC(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_ASC_SHIFT\fP)) & \fBSPI_CTAR_ASC_MASK\fP)"

.SS "#define SPI_CTAR_ASC_MASK   (0xF00U)"

.SS "#define SPI_CTAR_ASC_SHIFT   (8U)"

.SS "#define SPI_CTAR_BR(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_BR_SHIFT\fP)) & \fBSPI_CTAR_BR_MASK\fP)"

.SS "#define SPI_CTAR_BR_MASK   (0xFU)"

.SS "#define SPI_CTAR_BR_SHIFT   (0U)"

.SS "#define SPI_CTAR_COUNT   (2U)"

.SS "#define SPI_CTAR_CPHA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_CPHA_SHIFT\fP)) & \fBSPI_CTAR_CPHA_MASK\fP)"

.SS "#define SPI_CTAR_CPHA_MASK   (0x2000000U)"

.SS "#define SPI_CTAR_CPHA_SHIFT   (25U)"

.SS "#define SPI_CTAR_CPOL(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_CPOL_SHIFT\fP)) & \fBSPI_CTAR_CPOL_MASK\fP)"

.SS "#define SPI_CTAR_CPOL_MASK   (0x4000000U)"

.SS "#define SPI_CTAR_CPOL_SHIFT   (26U)"

.SS "#define SPI_CTAR_CSSCK(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_CSSCK_SHIFT\fP)) & \fBSPI_CTAR_CSSCK_MASK\fP)"

.SS "#define SPI_CTAR_CSSCK_MASK   (0xF000U)"

.SS "#define SPI_CTAR_CSSCK_SHIFT   (12U)"

.SS "#define SPI_CTAR_DBR(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_DBR_SHIFT\fP)) & \fBSPI_CTAR_DBR_MASK\fP)"

.SS "#define SPI_CTAR_DBR_MASK   (0x80000000U)"

.SS "#define SPI_CTAR_DBR_SHIFT   (31U)"

.SS "#define SPI_CTAR_DT(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_DT_SHIFT\fP)) & \fBSPI_CTAR_DT_MASK\fP)"

.SS "#define SPI_CTAR_DT_MASK   (0xF0U)"

.SS "#define SPI_CTAR_DT_SHIFT   (4U)"

.SS "#define SPI_CTAR_FMSZ(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_FMSZ_SHIFT\fP)) & \fBSPI_CTAR_FMSZ_MASK\fP)"

.SS "#define SPI_CTAR_FMSZ_MASK   (0x78000000U)"

.SS "#define SPI_CTAR_FMSZ_SHIFT   (27U)"

.SS "#define SPI_CTAR_LSBFE(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_LSBFE_SHIFT\fP)) & \fBSPI_CTAR_LSBFE_MASK\fP)"

.SS "#define SPI_CTAR_LSBFE_MASK   (0x1000000U)"

.SS "#define SPI_CTAR_LSBFE_SHIFT   (24U)"

.SS "#define SPI_CTAR_PASC(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_PASC_SHIFT\fP)) & \fBSPI_CTAR_PASC_MASK\fP)"

.SS "#define SPI_CTAR_PASC_MASK   (0x300000U)"

.SS "#define SPI_CTAR_PASC_SHIFT   (20U)"

.SS "#define SPI_CTAR_PBR(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_PBR_SHIFT\fP)) & \fBSPI_CTAR_PBR_MASK\fP)"

.SS "#define SPI_CTAR_PBR_MASK   (0x30000U)"

.SS "#define SPI_CTAR_PBR_SHIFT   (16U)"

.SS "#define SPI_CTAR_PCSSCK(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_PCSSCK_SHIFT\fP)) & \fBSPI_CTAR_PCSSCK_MASK\fP)"

.SS "#define SPI_CTAR_PCSSCK_MASK   (0xC00000U)"

.SS "#define SPI_CTAR_PCSSCK_SHIFT   (22U)"

.SS "#define SPI_CTAR_PDT(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_PDT_SHIFT\fP)) & \fBSPI_CTAR_PDT_MASK\fP)"

.SS "#define SPI_CTAR_PDT_MASK   (0xC0000U)"

.SS "#define SPI_CTAR_PDT_SHIFT   (18U)"

.SS "#define SPI_CTAR_SLAVE_COUNT   (1U)"

.SS "#define SPI_CTAR_SLAVE_CPHA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_SLAVE_CPHA_SHIFT\fP)) & \fBSPI_CTAR_SLAVE_CPHA_MASK\fP)"

.SS "#define SPI_CTAR_SLAVE_CPHA_MASK   (0x2000000U)"

.SS "#define SPI_CTAR_SLAVE_CPHA_SHIFT   (25U)"

.SS "#define SPI_CTAR_SLAVE_CPOL(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_SLAVE_CPOL_SHIFT\fP)) & \fBSPI_CTAR_SLAVE_CPOL_MASK\fP)"

.SS "#define SPI_CTAR_SLAVE_CPOL_MASK   (0x4000000U)"

.SS "#define SPI_CTAR_SLAVE_CPOL_SHIFT   (26U)"

.SS "#define SPI_CTAR_SLAVE_FMSZ(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_CTAR_SLAVE_FMSZ_SHIFT\fP)) & \fBSPI_CTAR_SLAVE_FMSZ_MASK\fP)"

.SS "#define SPI_CTAR_SLAVE_FMSZ_MASK   (0xF8000000U)"

.SS "#define SPI_CTAR_SLAVE_FMSZ_SHIFT   (27U)"

.SS "#define SPI_IRQS   { \fBSPI0_IRQn\fP, \fBSPI1_IRQn\fP, \fBSPI2_IRQn\fP }"
Interrupt vectors for the SPI peripheral type 
.SS "#define SPI_MCR_CLR_RXF(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_CLR_RXF_SHIFT\fP)) & \fBSPI_MCR_CLR_RXF_MASK\fP)"

.SS "#define SPI_MCR_CLR_RXF_MASK   (0x400U)"

.SS "#define SPI_MCR_CLR_RXF_SHIFT   (10U)"

.SS "#define SPI_MCR_CLR_TXF(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_CLR_TXF_SHIFT\fP)) & \fBSPI_MCR_CLR_TXF_MASK\fP)"

.SS "#define SPI_MCR_CLR_TXF_MASK   (0x800U)"

.SS "#define SPI_MCR_CLR_TXF_SHIFT   (11U)"

.SS "#define SPI_MCR_CONT_SCKE(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_CONT_SCKE_SHIFT\fP)) & \fBSPI_MCR_CONT_SCKE_MASK\fP)"

.SS "#define SPI_MCR_CONT_SCKE_MASK   (0x40000000U)"

.SS "#define SPI_MCR_CONT_SCKE_SHIFT   (30U)"

.SS "#define SPI_MCR_DCONF(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_DCONF_SHIFT\fP)) & \fBSPI_MCR_DCONF_MASK\fP)"

.SS "#define SPI_MCR_DCONF_MASK   (0x30000000U)"

.SS "#define SPI_MCR_DCONF_SHIFT   (28U)"

.SS "#define SPI_MCR_DIS_RXF(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_DIS_RXF_SHIFT\fP)) & \fBSPI_MCR_DIS_RXF_MASK\fP)"

.SS "#define SPI_MCR_DIS_RXF_MASK   (0x1000U)"

.SS "#define SPI_MCR_DIS_RXF_SHIFT   (12U)"

.SS "#define SPI_MCR_DIS_TXF(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_DIS_TXF_SHIFT\fP)) & \fBSPI_MCR_DIS_TXF_MASK\fP)"

.SS "#define SPI_MCR_DIS_TXF_MASK   (0x2000U)"

.SS "#define SPI_MCR_DIS_TXF_SHIFT   (13U)"

.SS "#define SPI_MCR_DOZE(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_DOZE_SHIFT\fP)) & \fBSPI_MCR_DOZE_MASK\fP)"

.SS "#define SPI_MCR_DOZE_MASK   (0x8000U)"

.SS "#define SPI_MCR_DOZE_SHIFT   (15U)"

.SS "#define SPI_MCR_FRZ(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_FRZ_SHIFT\fP)) & \fBSPI_MCR_FRZ_MASK\fP)"

.SS "#define SPI_MCR_FRZ_MASK   (0x8000000U)"

.SS "#define SPI_MCR_FRZ_SHIFT   (27U)"

.SS "#define SPI_MCR_HALT(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_HALT_SHIFT\fP)) & \fBSPI_MCR_HALT_MASK\fP)"

.SS "#define SPI_MCR_HALT_MASK   (0x1U)"

.SS "#define SPI_MCR_HALT_SHIFT   (0U)"

.SS "#define SPI_MCR_MDIS(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_MDIS_SHIFT\fP)) & \fBSPI_MCR_MDIS_MASK\fP)"

.SS "#define SPI_MCR_MDIS_MASK   (0x4000U)"

.SS "#define SPI_MCR_MDIS_SHIFT   (14U)"

.SS "#define SPI_MCR_MSTR(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_MSTR_SHIFT\fP)) & \fBSPI_MCR_MSTR_MASK\fP)"

.SS "#define SPI_MCR_MSTR_MASK   (0x80000000U)"

.SS "#define SPI_MCR_MSTR_SHIFT   (31U)"

.SS "#define SPI_MCR_MTFE(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_MTFE_SHIFT\fP)) & \fBSPI_MCR_MTFE_MASK\fP)"

.SS "#define SPI_MCR_MTFE_MASK   (0x4000000U)"

.SS "#define SPI_MCR_MTFE_SHIFT   (26U)"

.SS "#define SPI_MCR_PCSIS(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_PCSIS_SHIFT\fP)) & \fBSPI_MCR_PCSIS_MASK\fP)"

.SS "#define SPI_MCR_PCSIS_MASK   (0x3F0000U)"

.SS "#define SPI_MCR_PCSIS_SHIFT   (16U)"

.SS "#define SPI_MCR_PCSSE(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_PCSSE_SHIFT\fP)) & \fBSPI_MCR_PCSSE_MASK\fP)"

.SS "#define SPI_MCR_PCSSE_MASK   (0x2000000U)"

.SS "#define SPI_MCR_PCSSE_SHIFT   (25U)"

.SS "#define SPI_MCR_ROOE(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_ROOE_SHIFT\fP)) & \fBSPI_MCR_ROOE_MASK\fP)"

.SS "#define SPI_MCR_ROOE_MASK   (0x1000000U)"

.SS "#define SPI_MCR_ROOE_SHIFT   (24U)"

.SS "#define SPI_MCR_SMPL_PT(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_MCR_SMPL_PT_SHIFT\fP)) & \fBSPI_MCR_SMPL_PT_MASK\fP)"

.SS "#define SPI_MCR_SMPL_PT_MASK   (0x300U)"

.SS "#define SPI_MCR_SMPL_PT_SHIFT   (8U)"

.SS "#define SPI_POPR_RXDATA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_POPR_RXDATA_SHIFT\fP)) & \fBSPI_POPR_RXDATA_MASK\fP)"

.SS "#define SPI_POPR_RXDATA_MASK   (0xFFFFFFFFU)"

.SS "#define SPI_POPR_RXDATA_SHIFT   (0U)"

.SS "#define SPI_PUSHR_CONT(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_PUSHR_CONT_SHIFT\fP)) & \fBSPI_PUSHR_CONT_MASK\fP)"

.SS "#define SPI_PUSHR_CONT_MASK   (0x80000000U)"

.SS "#define SPI_PUSHR_CONT_SHIFT   (31U)"

.SS "#define SPI_PUSHR_CTAS(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_PUSHR_CTAS_SHIFT\fP)) & \fBSPI_PUSHR_CTAS_MASK\fP)"

.SS "#define SPI_PUSHR_CTAS_MASK   (0x70000000U)"

.SS "#define SPI_PUSHR_CTAS_SHIFT   (28U)"

.SS "#define SPI_PUSHR_CTCNT(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_PUSHR_CTCNT_SHIFT\fP)) & \fBSPI_PUSHR_CTCNT_MASK\fP)"

.SS "#define SPI_PUSHR_CTCNT_MASK   (0x4000000U)"

.SS "#define SPI_PUSHR_CTCNT_SHIFT   (26U)"

.SS "#define SPI_PUSHR_EOQ(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_PUSHR_EOQ_SHIFT\fP)) & \fBSPI_PUSHR_EOQ_MASK\fP)"

.SS "#define SPI_PUSHR_EOQ_MASK   (0x8000000U)"

.SS "#define SPI_PUSHR_EOQ_SHIFT   (27U)"

.SS "#define SPI_PUSHR_PCS(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_PUSHR_PCS_SHIFT\fP)) & \fBSPI_PUSHR_PCS_MASK\fP)"

.SS "#define SPI_PUSHR_PCS_MASK   (0x3F0000U)"

.SS "#define SPI_PUSHR_PCS_SHIFT   (16U)"

.SS "#define SPI_PUSHR_SLAVE_TXDATA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_PUSHR_SLAVE_TXDATA_SHIFT\fP)) & \fBSPI_PUSHR_SLAVE_TXDATA_MASK\fP)"

.SS "#define SPI_PUSHR_SLAVE_TXDATA_MASK   (0xFFFFFFFFU)"

.SS "#define SPI_PUSHR_SLAVE_TXDATA_SHIFT   (0U)"

.SS "#define SPI_PUSHR_TXDATA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_PUSHR_TXDATA_SHIFT\fP)) & \fBSPI_PUSHR_TXDATA_MASK\fP)"

.SS "#define SPI_PUSHR_TXDATA_MASK   (0xFFFFU)"

.SS "#define SPI_PUSHR_TXDATA_SHIFT   (0U)"

.SS "#define SPI_RSER_EOQF_RE(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RSER_EOQF_RE_SHIFT\fP)) & \fBSPI_RSER_EOQF_RE_MASK\fP)"

.SS "#define SPI_RSER_EOQF_RE_MASK   (0x10000000U)"

.SS "#define SPI_RSER_EOQF_RE_SHIFT   (28U)"

.SS "#define SPI_RSER_RFDF_DIRS(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RSER_RFDF_DIRS_SHIFT\fP)) & \fBSPI_RSER_RFDF_DIRS_MASK\fP)"

.SS "#define SPI_RSER_RFDF_DIRS_MASK   (0x10000U)"

.SS "#define SPI_RSER_RFDF_DIRS_SHIFT   (16U)"

.SS "#define SPI_RSER_RFDF_RE(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RSER_RFDF_RE_SHIFT\fP)) & \fBSPI_RSER_RFDF_RE_MASK\fP)"

.SS "#define SPI_RSER_RFDF_RE_MASK   (0x20000U)"

.SS "#define SPI_RSER_RFDF_RE_SHIFT   (17U)"

.SS "#define SPI_RSER_RFOF_RE(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RSER_RFOF_RE_SHIFT\fP)) & \fBSPI_RSER_RFOF_RE_MASK\fP)"

.SS "#define SPI_RSER_RFOF_RE_MASK   (0x80000U)"

.SS "#define SPI_RSER_RFOF_RE_SHIFT   (19U)"

.SS "#define SPI_RSER_TCF_RE(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RSER_TCF_RE_SHIFT\fP)) & \fBSPI_RSER_TCF_RE_MASK\fP)"

.SS "#define SPI_RSER_TCF_RE_MASK   (0x80000000U)"

.SS "#define SPI_RSER_TCF_RE_SHIFT   (31U)"

.SS "#define SPI_RSER_TFFF_DIRS(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RSER_TFFF_DIRS_SHIFT\fP)) & \fBSPI_RSER_TFFF_DIRS_MASK\fP)"

.SS "#define SPI_RSER_TFFF_DIRS_MASK   (0x1000000U)"

.SS "#define SPI_RSER_TFFF_DIRS_SHIFT   (24U)"

.SS "#define SPI_RSER_TFFF_RE(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RSER_TFFF_RE_SHIFT\fP)) & \fBSPI_RSER_TFFF_RE_MASK\fP)"

.SS "#define SPI_RSER_TFFF_RE_MASK   (0x2000000U)"

.SS "#define SPI_RSER_TFFF_RE_SHIFT   (25U)"

.SS "#define SPI_RSER_TFUF_RE(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RSER_TFUF_RE_SHIFT\fP)) & \fBSPI_RSER_TFUF_RE_MASK\fP)"

.SS "#define SPI_RSER_TFUF_RE_MASK   (0x8000000U)"

.SS "#define SPI_RSER_TFUF_RE_SHIFT   (27U)"

.SS "#define SPI_RXFR0_RXDATA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RXFR0_RXDATA_SHIFT\fP)) & \fBSPI_RXFR0_RXDATA_MASK\fP)"

.SS "#define SPI_RXFR0_RXDATA_MASK   (0xFFFFFFFFU)"

.SS "#define SPI_RXFR0_RXDATA_SHIFT   (0U)"

.SS "#define SPI_RXFR1_RXDATA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RXFR1_RXDATA_SHIFT\fP)) & \fBSPI_RXFR1_RXDATA_MASK\fP)"

.SS "#define SPI_RXFR1_RXDATA_MASK   (0xFFFFFFFFU)"

.SS "#define SPI_RXFR1_RXDATA_SHIFT   (0U)"

.SS "#define SPI_RXFR2_RXDATA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RXFR2_RXDATA_SHIFT\fP)) & \fBSPI_RXFR2_RXDATA_MASK\fP)"

.SS "#define SPI_RXFR2_RXDATA_MASK   (0xFFFFFFFFU)"

.SS "#define SPI_RXFR2_RXDATA_SHIFT   (0U)"

.SS "#define SPI_RXFR3_RXDATA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_RXFR3_RXDATA_SHIFT\fP)) & \fBSPI_RXFR3_RXDATA_MASK\fP)"

.SS "#define SPI_RXFR3_RXDATA_MASK   (0xFFFFFFFFU)"

.SS "#define SPI_RXFR3_RXDATA_SHIFT   (0U)"

.SS "#define SPI_SR_EOQF(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_EOQF_SHIFT\fP)) & \fBSPI_SR_EOQF_MASK\fP)"

.SS "#define SPI_SR_EOQF_MASK   (0x10000000U)"

.SS "#define SPI_SR_EOQF_SHIFT   (28U)"

.SS "#define SPI_SR_POPNXTPTR(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_POPNXTPTR_SHIFT\fP)) & \fBSPI_SR_POPNXTPTR_MASK\fP)"

.SS "#define SPI_SR_POPNXTPTR_MASK   (0xFU)"

.SS "#define SPI_SR_POPNXTPTR_SHIFT   (0U)"

.SS "#define SPI_SR_RFDF(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_RFDF_SHIFT\fP)) & \fBSPI_SR_RFDF_MASK\fP)"

.SS "#define SPI_SR_RFDF_MASK   (0x20000U)"

.SS "#define SPI_SR_RFDF_SHIFT   (17U)"

.SS "#define SPI_SR_RFOF(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_RFOF_SHIFT\fP)) & \fBSPI_SR_RFOF_MASK\fP)"

.SS "#define SPI_SR_RFOF_MASK   (0x80000U)"

.SS "#define SPI_SR_RFOF_SHIFT   (19U)"

.SS "#define SPI_SR_RXCTR(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_RXCTR_SHIFT\fP)) & \fBSPI_SR_RXCTR_MASK\fP)"

.SS "#define SPI_SR_RXCTR_MASK   (0xF0U)"

.SS "#define SPI_SR_RXCTR_SHIFT   (4U)"

.SS "#define SPI_SR_TCF(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_TCF_SHIFT\fP)) & \fBSPI_SR_TCF_MASK\fP)"

.SS "#define SPI_SR_TCF_MASK   (0x80000000U)"

.SS "#define SPI_SR_TCF_SHIFT   (31U)"

.SS "#define SPI_SR_TFFF(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_TFFF_SHIFT\fP)) & \fBSPI_SR_TFFF_MASK\fP)"

.SS "#define SPI_SR_TFFF_MASK   (0x2000000U)"

.SS "#define SPI_SR_TFFF_SHIFT   (25U)"

.SS "#define SPI_SR_TFUF(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_TFUF_SHIFT\fP)) & \fBSPI_SR_TFUF_MASK\fP)"

.SS "#define SPI_SR_TFUF_MASK   (0x8000000U)"

.SS "#define SPI_SR_TFUF_SHIFT   (27U)"

.SS "#define SPI_SR_TXCTR(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_TXCTR_SHIFT\fP)) & \fBSPI_SR_TXCTR_MASK\fP)"

.SS "#define SPI_SR_TXCTR_MASK   (0xF000U)"

.SS "#define SPI_SR_TXCTR_SHIFT   (12U)"

.SS "#define SPI_SR_TXNXTPTR(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_TXNXTPTR_SHIFT\fP)) & \fBSPI_SR_TXNXTPTR_MASK\fP)"

.SS "#define SPI_SR_TXNXTPTR_MASK   (0xF00U)"

.SS "#define SPI_SR_TXNXTPTR_SHIFT   (8U)"

.SS "#define SPI_SR_TXRXS(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_SR_TXRXS_SHIFT\fP)) & \fBSPI_SR_TXRXS_MASK\fP)"

.SS "#define SPI_SR_TXRXS_MASK   (0x40000000U)"

.SS "#define SPI_SR_TXRXS_SHIFT   (30U)"

.SS "#define SPI_TCR_SPI_TCNT(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TCR_SPI_TCNT_SHIFT\fP)) & \fBSPI_TCR_SPI_TCNT_MASK\fP)"

.SS "#define SPI_TCR_SPI_TCNT_MASK   (0xFFFF0000U)"

.SS "#define SPI_TCR_SPI_TCNT_SHIFT   (16U)"

.SS "#define SPI_TXFR0_TXCMD_TXDATA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TXFR0_TXCMD_TXDATA_SHIFT\fP)) & \fBSPI_TXFR0_TXCMD_TXDATA_MASK\fP)"

.SS "#define SPI_TXFR0_TXCMD_TXDATA_MASK   (0xFFFF0000U)"

.SS "#define SPI_TXFR0_TXCMD_TXDATA_SHIFT   (16U)"

.SS "#define SPI_TXFR0_TXDATA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TXFR0_TXDATA_SHIFT\fP)) & \fBSPI_TXFR0_TXDATA_MASK\fP)"

.SS "#define SPI_TXFR0_TXDATA_MASK   (0xFFFFU)"

.SS "#define SPI_TXFR0_TXDATA_SHIFT   (0U)"

.SS "#define SPI_TXFR1_TXCMD_TXDATA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TXFR1_TXCMD_TXDATA_SHIFT\fP)) & \fBSPI_TXFR1_TXCMD_TXDATA_MASK\fP)"

.SS "#define SPI_TXFR1_TXCMD_TXDATA_MASK   (0xFFFF0000U)"

.SS "#define SPI_TXFR1_TXCMD_TXDATA_SHIFT   (16U)"

.SS "#define SPI_TXFR1_TXDATA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TXFR1_TXDATA_SHIFT\fP)) & \fBSPI_TXFR1_TXDATA_MASK\fP)"

.SS "#define SPI_TXFR1_TXDATA_MASK   (0xFFFFU)"

.SS "#define SPI_TXFR1_TXDATA_SHIFT   (0U)"

.SS "#define SPI_TXFR2_TXCMD_TXDATA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TXFR2_TXCMD_TXDATA_SHIFT\fP)) & \fBSPI_TXFR2_TXCMD_TXDATA_MASK\fP)"

.SS "#define SPI_TXFR2_TXCMD_TXDATA_MASK   (0xFFFF0000U)"

.SS "#define SPI_TXFR2_TXCMD_TXDATA_SHIFT   (16U)"

.SS "#define SPI_TXFR2_TXDATA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TXFR2_TXDATA_SHIFT\fP)) & \fBSPI_TXFR2_TXDATA_MASK\fP)"

.SS "#define SPI_TXFR2_TXDATA_MASK   (0xFFFFU)"

.SS "#define SPI_TXFR2_TXDATA_SHIFT   (0U)"

.SS "#define SPI_TXFR3_TXCMD_TXDATA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TXFR3_TXCMD_TXDATA_SHIFT\fP)) & \fBSPI_TXFR3_TXCMD_TXDATA_MASK\fP)"

.SS "#define SPI_TXFR3_TXCMD_TXDATA_MASK   (0xFFFF0000U)"

.SS "#define SPI_TXFR3_TXCMD_TXDATA_SHIFT   (16U)"

.SS "#define SPI_TXFR3_TXDATA(x)   (((uint32_t)(((uint32_t)(x)) << \fBSPI_TXFR3_TXDATA_SHIFT\fP)) & \fBSPI_TXFR3_TXDATA_MASK\fP)"

.SS "#define SPI_TXFR3_TXDATA_MASK   (0xFFFFU)"

.SS "#define SPI_TXFR3_TXDATA_SHIFT   (0U)"

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
