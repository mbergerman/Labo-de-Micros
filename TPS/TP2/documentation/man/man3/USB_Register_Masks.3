.TH "USB_Register_Masks" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
USB_Register_Masks
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBUSB0_BASE\fP   (0x40072000u)"
.br
.ti -1c
.RI "#define \fBUSB0\fP   ((\fBUSB_Type\fP *)\fBUSB0_BASE\fP)"
.br
.ti -1c
.RI "#define \fBUSB_BASE_ADDRS\fP   { \fBUSB0_BASE\fP }"
.br
.ti -1c
.RI "#define \fBUSB_BASE_PTRS\fP   { \fBUSB0\fP }"
.br
.ti -1c
.RI "#define \fBUSB_IRQS\fP   { \fBUSB0_IRQn\fP }"
.br
.in -1c
.SS "PERID - Peripheral ID register"

.in +1c
.ti -1c
.RI "#define \fBUSB_PERID_ID_MASK\fP   (0x3FU)"
.br
.ti -1c
.RI "#define \fBUSB_PERID_ID_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_PERID_ID\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_PERID_ID_SHIFT\fP)) & \fBUSB_PERID_ID_MASK\fP)"
.br
.in -1c
.SS "IDCOMP - Peripheral ID Complement register"

.in +1c
.ti -1c
.RI "#define \fBUSB_IDCOMP_NID_MASK\fP   (0x3FU)"
.br
.ti -1c
.RI "#define \fBUSB_IDCOMP_NID_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_IDCOMP_NID\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_IDCOMP_NID_SHIFT\fP)) & \fBUSB_IDCOMP_NID_MASK\fP)"
.br
.in -1c
.SS "REV - Peripheral Revision register"

.in +1c
.ti -1c
.RI "#define \fBUSB_REV_REV_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBUSB_REV_REV_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_REV_REV\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_REV_REV_SHIFT\fP)) & \fBUSB_REV_REV_MASK\fP)"
.br
.in -1c
.SS "ADDINFO - Peripheral Additional Info register"

.in +1c
.ti -1c
.RI "#define \fBUSB_ADDINFO_IEHOST_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBUSB_ADDINFO_IEHOST_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_ADDINFO_IEHOST\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ADDINFO_IEHOST_SHIFT\fP)) & \fBUSB_ADDINFO_IEHOST_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ADDINFO_IRQNUM_MASK\fP   (0xF8U)"
.br
.ti -1c
.RI "#define \fBUSB_ADDINFO_IRQNUM_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBUSB_ADDINFO_IRQNUM\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ADDINFO_IRQNUM_SHIFT\fP)) & \fBUSB_ADDINFO_IRQNUM_MASK\fP)"
.br
.in -1c
.SS "OTGISTAT - OTG Interrupt Status register"

.in +1c
.ti -1c
.RI "#define \fBUSB_OTGISTAT_AVBUSCHG_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_AVBUSCHG_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_AVBUSCHG\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGISTAT_AVBUSCHG_SHIFT\fP)) & \fBUSB_OTGISTAT_AVBUSCHG_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_B_SESS_CHG_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_B_SESS_CHG_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_B_SESS_CHG\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGISTAT_B_SESS_CHG_SHIFT\fP)) & \fBUSB_OTGISTAT_B_SESS_CHG_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_SESSVLDCHG_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_SESSVLDCHG_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_SESSVLDCHG\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGISTAT_SESSVLDCHG_SHIFT\fP)) & \fBUSB_OTGISTAT_SESSVLDCHG_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_LINE_STATE_CHG_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_LINE_STATE_CHG_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_LINE_STATE_CHG\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGISTAT_LINE_STATE_CHG_SHIFT\fP)) & \fBUSB_OTGISTAT_LINE_STATE_CHG_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_ONEMSEC_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_ONEMSEC_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_ONEMSEC\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGISTAT_ONEMSEC_SHIFT\fP)) & \fBUSB_OTGISTAT_ONEMSEC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_IDCHG_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_IDCHG_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGISTAT_IDCHG\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGISTAT_IDCHG_SHIFT\fP)) & \fBUSB_OTGISTAT_IDCHG_MASK\fP)"
.br
.in -1c
.SS "OTGICR - OTG Interrupt Control register"

.in +1c
.ti -1c
.RI "#define \fBUSB_OTGICR_AVBUSEN_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_AVBUSEN_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_AVBUSEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGICR_AVBUSEN_SHIFT\fP)) & \fBUSB_OTGICR_AVBUSEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_BSESSEN_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_BSESSEN_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_BSESSEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGICR_BSESSEN_SHIFT\fP)) & \fBUSB_OTGICR_BSESSEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_SESSVLDEN_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_SESSVLDEN_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_SESSVLDEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGICR_SESSVLDEN_SHIFT\fP)) & \fBUSB_OTGICR_SESSVLDEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_LINESTATEEN_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_LINESTATEEN_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_LINESTATEEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGICR_LINESTATEEN_SHIFT\fP)) & \fBUSB_OTGICR_LINESTATEEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_ONEMSECEN_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_ONEMSECEN_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_ONEMSECEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGICR_ONEMSECEN_SHIFT\fP)) & \fBUSB_OTGICR_ONEMSECEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_IDEN_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_IDEN_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGICR_IDEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGICR_IDEN_SHIFT\fP)) & \fBUSB_OTGICR_IDEN_MASK\fP)"
.br
.in -1c
.SS "OTGSTAT - OTG Status register"

.in +1c
.ti -1c
.RI "#define \fBUSB_OTGSTAT_AVBUSVLD_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_AVBUSVLD_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_AVBUSVLD\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGSTAT_AVBUSVLD_SHIFT\fP)) & \fBUSB_OTGSTAT_AVBUSVLD_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_BSESSEND_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_BSESSEND_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_BSESSEND\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGSTAT_BSESSEND_SHIFT\fP)) & \fBUSB_OTGSTAT_BSESSEND_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_SESS_VLD_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_SESS_VLD_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_SESS_VLD\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGSTAT_SESS_VLD_SHIFT\fP)) & \fBUSB_OTGSTAT_SESS_VLD_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_LINESTATESTABLE_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_LINESTATESTABLE_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_LINESTATESTABLE\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGSTAT_LINESTATESTABLE_SHIFT\fP)) & \fBUSB_OTGSTAT_LINESTATESTABLE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_ONEMSECEN_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_ONEMSECEN_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_ONEMSECEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGSTAT_ONEMSECEN_SHIFT\fP)) & \fBUSB_OTGSTAT_ONEMSECEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_ID_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_ID_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGSTAT_ID\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGSTAT_ID_SHIFT\fP)) & \fBUSB_OTGSTAT_ID_MASK\fP)"
.br
.in -1c
.SS "OTGCTL - OTG Control register"

.in +1c
.ti -1c
.RI "#define \fBUSB_OTGCTL_OTGEN_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGCTL_OTGEN_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGCTL_OTGEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGCTL_OTGEN_SHIFT\fP)) & \fBUSB_OTGCTL_OTGEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGCTL_DMLOW_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGCTL_DMLOW_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGCTL_DMLOW\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGCTL_DMLOW_SHIFT\fP)) & \fBUSB_OTGCTL_DMLOW_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGCTL_DPLOW_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGCTL_DPLOW_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGCTL_DPLOW\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGCTL_DPLOW_SHIFT\fP)) & \fBUSB_OTGCTL_DPLOW_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OTGCTL_DPHIGH_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGCTL_DPHIGH_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBUSB_OTGCTL_DPHIGH\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGCTL_DPHIGH_SHIFT\fP)) & \fBUSB_OTGCTL_DPHIGH_MASK\fP)"
.br
.in -1c
.SS "ISTAT - Interrupt Status register"

.in +1c
.ti -1c
.RI "#define \fBUSB_ISTAT_USBRST_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_USBRST_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_USBRST\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ISTAT_USBRST_SHIFT\fP)) & \fBUSB_ISTAT_USBRST_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_ERROR_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_ERROR_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_ERROR\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ISTAT_ERROR_SHIFT\fP)) & \fBUSB_ISTAT_ERROR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_SOFTOK_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_SOFTOK_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_SOFTOK\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ISTAT_SOFTOK_SHIFT\fP)) & \fBUSB_ISTAT_SOFTOK_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_TOKDNE_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_TOKDNE_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_TOKDNE\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ISTAT_TOKDNE_SHIFT\fP)) & \fBUSB_ISTAT_TOKDNE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_SLEEP_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_SLEEP_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_SLEEP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ISTAT_SLEEP_SHIFT\fP)) & \fBUSB_ISTAT_SLEEP_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_RESUME_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_RESUME_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_RESUME\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ISTAT_RESUME_SHIFT\fP)) & \fBUSB_ISTAT_RESUME_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_ATTACH_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_ATTACH_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_ATTACH\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ISTAT_ATTACH_SHIFT\fP)) & \fBUSB_ISTAT_ATTACH_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_STALL_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_STALL_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBUSB_ISTAT_STALL\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ISTAT_STALL_SHIFT\fP)) & \fBUSB_ISTAT_STALL_MASK\fP)"
.br
.in -1c
.SS "INTEN - Interrupt Enable register"

.in +1c
.ti -1c
.RI "#define \fBUSB_INTEN_USBRSTEN_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_USBRSTEN_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_USBRSTEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_INTEN_USBRSTEN_SHIFT\fP)) & \fBUSB_INTEN_USBRSTEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_ERROREN_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_ERROREN_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_ERROREN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_INTEN_ERROREN_SHIFT\fP)) & \fBUSB_INTEN_ERROREN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_SOFTOKEN_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_SOFTOKEN_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_SOFTOKEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_INTEN_SOFTOKEN_SHIFT\fP)) & \fBUSB_INTEN_SOFTOKEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_TOKDNEEN_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_TOKDNEEN_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_TOKDNEEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_INTEN_TOKDNEEN_SHIFT\fP)) & \fBUSB_INTEN_TOKDNEEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_SLEEPEN_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_SLEEPEN_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_SLEEPEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_INTEN_SLEEPEN_SHIFT\fP)) & \fBUSB_INTEN_SLEEPEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_RESUMEEN_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_RESUMEEN_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_RESUMEEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_INTEN_RESUMEEN_SHIFT\fP)) & \fBUSB_INTEN_RESUMEEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_ATTACHEN_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_ATTACHEN_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_ATTACHEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_INTEN_ATTACHEN_SHIFT\fP)) & \fBUSB_INTEN_ATTACHEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_STALLEN_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_STALLEN_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBUSB_INTEN_STALLEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_INTEN_STALLEN_SHIFT\fP)) & \fBUSB_INTEN_STALLEN_MASK\fP)"
.br
.in -1c
.SS "ERRSTAT - Error Interrupt Status register"

.in +1c
.ti -1c
.RI "#define \fBUSB_ERRSTAT_PIDERR_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_PIDERR_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_PIDERR\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERRSTAT_PIDERR_SHIFT\fP)) & \fBUSB_ERRSTAT_PIDERR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_CRC5EOF_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_CRC5EOF_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_CRC5EOF\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERRSTAT_CRC5EOF_SHIFT\fP)) & \fBUSB_ERRSTAT_CRC5EOF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_CRC16_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_CRC16_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_CRC16\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERRSTAT_CRC16_SHIFT\fP)) & \fBUSB_ERRSTAT_CRC16_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_DFN8_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_DFN8_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_DFN8\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERRSTAT_DFN8_SHIFT\fP)) & \fBUSB_ERRSTAT_DFN8_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_BTOERR_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_BTOERR_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_BTOERR\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERRSTAT_BTOERR_SHIFT\fP)) & \fBUSB_ERRSTAT_BTOERR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_DMAERR_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_DMAERR_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_DMAERR\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERRSTAT_DMAERR_SHIFT\fP)) & \fBUSB_ERRSTAT_DMAERR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_BTSERR_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_BTSERR_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBUSB_ERRSTAT_BTSERR\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERRSTAT_BTSERR_SHIFT\fP)) & \fBUSB_ERRSTAT_BTSERR_MASK\fP)"
.br
.in -1c
.SS "ERREN - Error Interrupt Enable register"

.in +1c
.ti -1c
.RI "#define \fBUSB_ERREN_PIDERREN_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_PIDERREN_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_PIDERREN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERREN_PIDERREN_SHIFT\fP)) & \fBUSB_ERREN_PIDERREN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_CRC5EOFEN_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_CRC5EOFEN_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_CRC5EOFEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERREN_CRC5EOFEN_SHIFT\fP)) & \fBUSB_ERREN_CRC5EOFEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_CRC16EN_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_CRC16EN_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_CRC16EN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERREN_CRC16EN_SHIFT\fP)) & \fBUSB_ERREN_CRC16EN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_DFN8EN_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_DFN8EN_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_DFN8EN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERREN_DFN8EN_SHIFT\fP)) & \fBUSB_ERREN_DFN8EN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_BTOERREN_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_BTOERREN_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_BTOERREN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERREN_BTOERREN_SHIFT\fP)) & \fBUSB_ERREN_BTOERREN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_DMAERREN_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_DMAERREN_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_DMAERREN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERREN_DMAERREN_SHIFT\fP)) & \fBUSB_ERREN_DMAERREN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_BTSERREN_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_BTSERREN_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBUSB_ERREN_BTSERREN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERREN_BTSERREN_SHIFT\fP)) & \fBUSB_ERREN_BTSERREN_MASK\fP)"
.br
.in -1c
.SS "STAT - Status register"

.in +1c
.ti -1c
.RI "#define \fBUSB_STAT_ODD_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBUSB_STAT_ODD_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBUSB_STAT_ODD\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_STAT_ODD_SHIFT\fP)) & \fBUSB_STAT_ODD_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_STAT_TX_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBUSB_STAT_TX_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBUSB_STAT_TX\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_STAT_TX_SHIFT\fP)) & \fBUSB_STAT_TX_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_STAT_ENDP_MASK\fP   (0xF0U)"
.br
.ti -1c
.RI "#define \fBUSB_STAT_ENDP_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBUSB_STAT_ENDP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_STAT_ENDP_SHIFT\fP)) & \fBUSB_STAT_ENDP_MASK\fP)"
.br
.in -1c
.SS "CTL - Control register"

.in +1c
.ti -1c
.RI "#define \fBUSB_CTL_USBENSOFEN_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_USBENSOFEN_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_USBENSOFEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CTL_USBENSOFEN_SHIFT\fP)) & \fBUSB_CTL_USBENSOFEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_ODDRST_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_ODDRST_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_ODDRST\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CTL_ODDRST_SHIFT\fP)) & \fBUSB_CTL_ODDRST_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_RESUME_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_RESUME_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_RESUME\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CTL_RESUME_SHIFT\fP)) & \fBUSB_CTL_RESUME_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_HOSTMODEEN_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_HOSTMODEEN_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_HOSTMODEEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CTL_HOSTMODEEN_SHIFT\fP)) & \fBUSB_CTL_HOSTMODEEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_RESET_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_RESET_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_RESET\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CTL_RESET_SHIFT\fP)) & \fBUSB_CTL_RESET_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_TXSUSPENDTOKENBUSY_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_TXSUSPENDTOKENBUSY_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_TXSUSPENDTOKENBUSY\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CTL_TXSUSPENDTOKENBUSY_SHIFT\fP)) & \fBUSB_CTL_TXSUSPENDTOKENBUSY_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_SE0_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_SE0_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_SE0\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CTL_SE0_SHIFT\fP)) & \fBUSB_CTL_SE0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_JSTATE_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_JSTATE_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBUSB_CTL_JSTATE\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CTL_JSTATE_SHIFT\fP)) & \fBUSB_CTL_JSTATE_MASK\fP)"
.br
.in -1c
.SS "ADDR - Address register"

.in +1c
.ti -1c
.RI "#define \fBUSB_ADDR_ADDR_MASK\fP   (0x7FU)"
.br
.ti -1c
.RI "#define \fBUSB_ADDR_ADDR_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_ADDR_ADDR\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ADDR_ADDR_SHIFT\fP)) & \fBUSB_ADDR_ADDR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ADDR_LSEN_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBUSB_ADDR_LSEN_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBUSB_ADDR_LSEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ADDR_LSEN_SHIFT\fP)) & \fBUSB_ADDR_LSEN_MASK\fP)"
.br
.in -1c
.SS "BDTPAGE1 - BDT Page register 1"

.in +1c
.ti -1c
.RI "#define \fBUSB_BDTPAGE1_BDTBA_MASK\fP   (0xFEU)"
.br
.ti -1c
.RI "#define \fBUSB_BDTPAGE1_BDTBA_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBUSB_BDTPAGE1_BDTBA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_BDTPAGE1_BDTBA_SHIFT\fP)) & \fBUSB_BDTPAGE1_BDTBA_MASK\fP)"
.br
.in -1c
.SS "FRMNUML - Frame Number register Low"

.in +1c
.ti -1c
.RI "#define \fBUSB_FRMNUML_FRM_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBUSB_FRMNUML_FRM_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_FRMNUML_FRM\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_FRMNUML_FRM_SHIFT\fP)) & \fBUSB_FRMNUML_FRM_MASK\fP)"
.br
.in -1c
.SS "FRMNUMH - Frame Number register High"

.in +1c
.ti -1c
.RI "#define \fBUSB_FRMNUMH_FRM_MASK\fP   (0x7U)"
.br
.ti -1c
.RI "#define \fBUSB_FRMNUMH_FRM_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_FRMNUMH_FRM\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_FRMNUMH_FRM_SHIFT\fP)) & \fBUSB_FRMNUMH_FRM_MASK\fP)"
.br
.in -1c
.SS "TOKEN - Token register"

.in +1c
.ti -1c
.RI "#define \fBUSB_TOKEN_TOKENENDPT_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBUSB_TOKEN_TOKENENDPT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_TOKEN_TOKENENDPT\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_TOKEN_TOKENENDPT_SHIFT\fP)) & \fBUSB_TOKEN_TOKENENDPT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_TOKEN_TOKENPID_MASK\fP   (0xF0U)"
.br
.ti -1c
.RI "#define \fBUSB_TOKEN_TOKENPID_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBUSB_TOKEN_TOKENPID\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_TOKEN_TOKENPID_SHIFT\fP)) & \fBUSB_TOKEN_TOKENPID_MASK\fP)"
.br
.in -1c
.SS "SOFTHLD - SOF Threshold register"

.in +1c
.ti -1c
.RI "#define \fBUSB_SOFTHLD_CNT_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBUSB_SOFTHLD_CNT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_SOFTHLD_CNT\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_SOFTHLD_CNT_SHIFT\fP)) & \fBUSB_SOFTHLD_CNT_MASK\fP)"
.br
.in -1c
.SS "BDTPAGE2 - BDT Page Register 2"

.in +1c
.ti -1c
.RI "#define \fBUSB_BDTPAGE2_BDTBA_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBUSB_BDTPAGE2_BDTBA_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_BDTPAGE2_BDTBA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_BDTPAGE2_BDTBA_SHIFT\fP)) & \fBUSB_BDTPAGE2_BDTBA_MASK\fP)"
.br
.in -1c
.SS "BDTPAGE3 - BDT Page Register 3"

.in +1c
.ti -1c
.RI "#define \fBUSB_BDTPAGE3_BDTBA_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBUSB_BDTPAGE3_BDTBA_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_BDTPAGE3_BDTBA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_BDTPAGE3_BDTBA_SHIFT\fP)) & \fBUSB_BDTPAGE3_BDTBA_MASK\fP)"
.br
.in -1c
.SS "ENDPT - Endpoint Control register"

.in +1c
.ti -1c
.RI "#define \fBUSB_ENDPT_EPHSHK_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_EPHSHK_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_EPHSHK\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ENDPT_EPHSHK_SHIFT\fP)) & \fBUSB_ENDPT_EPHSHK_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_EPSTALL_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_EPSTALL_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_EPSTALL\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ENDPT_EPSTALL_SHIFT\fP)) & \fBUSB_ENDPT_EPSTALL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_EPTXEN_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_EPTXEN_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_EPTXEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ENDPT_EPTXEN_SHIFT\fP)) & \fBUSB_ENDPT_EPTXEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_EPRXEN_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_EPRXEN_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_EPRXEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ENDPT_EPRXEN_SHIFT\fP)) & \fBUSB_ENDPT_EPRXEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_EPCTLDIS_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_EPCTLDIS_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_EPCTLDIS\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ENDPT_EPCTLDIS_SHIFT\fP)) & \fBUSB_ENDPT_EPCTLDIS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_RETRYDIS_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_RETRYDIS_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_RETRYDIS\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ENDPT_RETRYDIS_SHIFT\fP)) & \fBUSB_ENDPT_RETRYDIS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_HOSTWOHUB_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_HOSTWOHUB_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_HOSTWOHUB\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ENDPT_HOSTWOHUB_SHIFT\fP)) & \fBUSB_ENDPT_HOSTWOHUB_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_ENDPT_COUNT\fP   (16U)"
.br
.in -1c
.SS "USBCTRL - USB Control register"

.in +1c
.ti -1c
.RI "#define \fBUSB_USBCTRL_PDE_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBUSB_USBCTRL_PDE_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBUSB_USBCTRL_PDE\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_USBCTRL_PDE_SHIFT\fP)) & \fBUSB_USBCTRL_PDE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_USBCTRL_SUSP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBUSB_USBCTRL_SUSP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBUSB_USBCTRL_SUSP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_USBCTRL_SUSP_SHIFT\fP)) & \fBUSB_USBCTRL_SUSP_MASK\fP)"
.br
.in -1c
.SS "OBSERVE - USB OTG Observe register"

.in +1c
.ti -1c
.RI "#define \fBUSB_OBSERVE_DMPD_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBUSB_OBSERVE_DMPD_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBUSB_OBSERVE_DMPD\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OBSERVE_DMPD_SHIFT\fP)) & \fBUSB_OBSERVE_DMPD_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OBSERVE_DPPD_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBUSB_OBSERVE_DPPD_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBUSB_OBSERVE_DPPD\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OBSERVE_DPPD_SHIFT\fP)) & \fBUSB_OBSERVE_DPPD_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_OBSERVE_DPPU_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBUSB_OBSERVE_DPPU_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBUSB_OBSERVE_DPPU\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OBSERVE_DPPU_SHIFT\fP)) & \fBUSB_OBSERVE_DPPU_MASK\fP)"
.br
.in -1c
.SS "CONTROL - USB OTG Control register"

.in +1c
.ti -1c
.RI "#define \fBUSB_CONTROL_DPPULLUPNONOTG_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBUSB_CONTROL_DPPULLUPNONOTG_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBUSB_CONTROL_DPPULLUPNONOTG\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CONTROL_DPPULLUPNONOTG_SHIFT\fP)) & \fBUSB_CONTROL_DPPULLUPNONOTG_MASK\fP)"
.br
.in -1c
.SS "USBTRC0 - USB Transceiver Control register 0"

.in +1c
.ti -1c
.RI "#define \fBUSB_USBTRC0_USB_RESUME_INT_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBUSB_USBTRC0_USB_RESUME_INT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_USBTRC0_USB_RESUME_INT\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_USBTRC0_USB_RESUME_INT_SHIFT\fP)) & \fBUSB_USBTRC0_USB_RESUME_INT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_USBTRC0_SYNC_DET_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBUSB_USBTRC0_SYNC_DET_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBUSB_USBTRC0_SYNC_DET\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_USBTRC0_SYNC_DET_SHIFT\fP)) & \fBUSB_USBTRC0_SYNC_DET_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_USBTRC0_USB_CLK_RECOVERY_INT_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBUSB_USBTRC0_USB_CLK_RECOVERY_INT_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBUSB_USBTRC0_USB_CLK_RECOVERY_INT\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_USBTRC0_USB_CLK_RECOVERY_INT_SHIFT\fP)) & \fBUSB_USBTRC0_USB_CLK_RECOVERY_INT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_USBTRC0_USBRESMEN_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBUSB_USBTRC0_USBRESMEN_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBUSB_USBTRC0_USBRESMEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_USBTRC0_USBRESMEN_SHIFT\fP)) & \fBUSB_USBTRC0_USBRESMEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_USBTRC0_USBRESET_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBUSB_USBTRC0_USBRESET_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBUSB_USBTRC0_USBRESET\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_USBTRC0_USBRESET_SHIFT\fP)) & \fBUSB_USBTRC0_USBRESET_MASK\fP)"
.br
.in -1c
.SS "USBFRMADJUST - Frame Adjust Register"

.in +1c
.ti -1c
.RI "#define \fBUSB_USBFRMADJUST_ADJ_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBUSB_USBFRMADJUST_ADJ_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_USBFRMADJUST_ADJ\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_USBFRMADJUST_ADJ_SHIFT\fP)) & \fBUSB_USBFRMADJUST_ADJ_MASK\fP)"
.br
.in -1c
.SS "CLK_RECOVER_CTRL - USB Clock recovery control"

.in +1c
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_CTRL_RESTART_IFRTRIM_EN_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_CTRL_RESTART_IFRTRIM_EN_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_CTRL_RESTART_IFRTRIM_EN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CLK_RECOVER_CTRL_RESTART_IFRTRIM_EN_SHIFT\fP)) & \fBUSB_CLK_RECOVER_CTRL_RESTART_IFRTRIM_EN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_CTRL_RESET_RESUME_ROUGH_EN_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_CTRL_RESET_RESUME_ROUGH_EN_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_CTRL_RESET_RESUME_ROUGH_EN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CLK_RECOVER_CTRL_RESET_RESUME_ROUGH_EN_SHIFT\fP)) & \fBUSB_CLK_RECOVER_CTRL_RESET_RESUME_ROUGH_EN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_CTRL_CLOCK_RECOVER_EN_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_CTRL_CLOCK_RECOVER_EN_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_CTRL_CLOCK_RECOVER_EN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CLK_RECOVER_CTRL_CLOCK_RECOVER_EN_SHIFT\fP)) & \fBUSB_CLK_RECOVER_CTRL_CLOCK_RECOVER_EN_MASK\fP)"
.br
.in -1c
.SS "CLK_RECOVER_IRC_EN - IRC48M oscillator enable register"

.in +1c
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_IRC_EN_REG_EN_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_IRC_EN_REG_EN_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_IRC_EN_REG_EN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CLK_RECOVER_IRC_EN_REG_EN_SHIFT\fP)) & \fBUSB_CLK_RECOVER_IRC_EN_REG_EN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_IRC_EN_IRC_EN_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_IRC_EN_IRC_EN_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_IRC_EN_IRC_EN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CLK_RECOVER_IRC_EN_IRC_EN_SHIFT\fP)) & \fBUSB_CLK_RECOVER_IRC_EN_IRC_EN_MASK\fP)"
.br
.in -1c
.SS "CLK_RECOVER_INT_STATUS - Clock recovery separated interrupt status"

.in +1c
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_INT_STATUS_OVF_ERROR_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_INT_STATUS_OVF_ERROR_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBUSB_CLK_RECOVER_INT_STATUS_OVF_ERROR\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CLK_RECOVER_INT_STATUS_OVF_ERROR_SHIFT\fP)) & \fBUSB_CLK_RECOVER_INT_STATUS_OVF_ERROR_MASK\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define USB0   ((\fBUSB_Type\fP *)\fBUSB0_BASE\fP)"
Peripheral USB0 base pointer 
.SS "#define USB0_BASE   (0x40072000u)"
Peripheral USB0 base address 
.SS "#define USB_ADDINFO_IEHOST(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ADDINFO_IEHOST_SHIFT\fP)) & \fBUSB_ADDINFO_IEHOST_MASK\fP)"

.SS "#define USB_ADDINFO_IEHOST_MASK   (0x1U)"

.SS "#define USB_ADDINFO_IEHOST_SHIFT   (0U)"

.SS "#define USB_ADDINFO_IRQNUM(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ADDINFO_IRQNUM_SHIFT\fP)) & \fBUSB_ADDINFO_IRQNUM_MASK\fP)"

.SS "#define USB_ADDINFO_IRQNUM_MASK   (0xF8U)"

.SS "#define USB_ADDINFO_IRQNUM_SHIFT   (3U)"

.SS "#define USB_ADDR_ADDR(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ADDR_ADDR_SHIFT\fP)) & \fBUSB_ADDR_ADDR_MASK\fP)"

.SS "#define USB_ADDR_ADDR_MASK   (0x7FU)"

.SS "#define USB_ADDR_ADDR_SHIFT   (0U)"

.SS "#define USB_ADDR_LSEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ADDR_LSEN_SHIFT\fP)) & \fBUSB_ADDR_LSEN_MASK\fP)"

.SS "#define USB_ADDR_LSEN_MASK   (0x80U)"

.SS "#define USB_ADDR_LSEN_SHIFT   (7U)"

.SS "#define USB_BASE_ADDRS   { \fBUSB0_BASE\fP }"
Array initializer of USB peripheral base addresses 
.SS "#define USB_BASE_PTRS   { \fBUSB0\fP }"
Array initializer of USB peripheral base pointers 
.SS "#define USB_BDTPAGE1_BDTBA(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_BDTPAGE1_BDTBA_SHIFT\fP)) & \fBUSB_BDTPAGE1_BDTBA_MASK\fP)"

.SS "#define USB_BDTPAGE1_BDTBA_MASK   (0xFEU)"

.SS "#define USB_BDTPAGE1_BDTBA_SHIFT   (1U)"

.SS "#define USB_BDTPAGE2_BDTBA(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_BDTPAGE2_BDTBA_SHIFT\fP)) & \fBUSB_BDTPAGE2_BDTBA_MASK\fP)"

.SS "#define USB_BDTPAGE2_BDTBA_MASK   (0xFFU)"

.SS "#define USB_BDTPAGE2_BDTBA_SHIFT   (0U)"

.SS "#define USB_BDTPAGE3_BDTBA(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_BDTPAGE3_BDTBA_SHIFT\fP)) & \fBUSB_BDTPAGE3_BDTBA_MASK\fP)"

.SS "#define USB_BDTPAGE3_BDTBA_MASK   (0xFFU)"

.SS "#define USB_BDTPAGE3_BDTBA_SHIFT   (0U)"

.SS "#define USB_CLK_RECOVER_CTRL_CLOCK_RECOVER_EN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CLK_RECOVER_CTRL_CLOCK_RECOVER_EN_SHIFT\fP)) & \fBUSB_CLK_RECOVER_CTRL_CLOCK_RECOVER_EN_MASK\fP)"

.SS "#define USB_CLK_RECOVER_CTRL_CLOCK_RECOVER_EN_MASK   (0x80U)"

.SS "#define USB_CLK_RECOVER_CTRL_CLOCK_RECOVER_EN_SHIFT   (7U)"

.SS "#define USB_CLK_RECOVER_CTRL_RESET_RESUME_ROUGH_EN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CLK_RECOVER_CTRL_RESET_RESUME_ROUGH_EN_SHIFT\fP)) & \fBUSB_CLK_RECOVER_CTRL_RESET_RESUME_ROUGH_EN_MASK\fP)"

.SS "#define USB_CLK_RECOVER_CTRL_RESET_RESUME_ROUGH_EN_MASK   (0x40U)"

.SS "#define USB_CLK_RECOVER_CTRL_RESET_RESUME_ROUGH_EN_SHIFT   (6U)"

.SS "#define USB_CLK_RECOVER_CTRL_RESTART_IFRTRIM_EN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CLK_RECOVER_CTRL_RESTART_IFRTRIM_EN_SHIFT\fP)) & \fBUSB_CLK_RECOVER_CTRL_RESTART_IFRTRIM_EN_MASK\fP)"

.SS "#define USB_CLK_RECOVER_CTRL_RESTART_IFRTRIM_EN_MASK   (0x20U)"

.SS "#define USB_CLK_RECOVER_CTRL_RESTART_IFRTRIM_EN_SHIFT   (5U)"

.SS "#define USB_CLK_RECOVER_INT_STATUS_OVF_ERROR(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CLK_RECOVER_INT_STATUS_OVF_ERROR_SHIFT\fP)) & \fBUSB_CLK_RECOVER_INT_STATUS_OVF_ERROR_MASK\fP)"

.SS "#define USB_CLK_RECOVER_INT_STATUS_OVF_ERROR_MASK   (0x10U)"

.SS "#define USB_CLK_RECOVER_INT_STATUS_OVF_ERROR_SHIFT   (4U)"

.SS "#define USB_CLK_RECOVER_IRC_EN_IRC_EN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CLK_RECOVER_IRC_EN_IRC_EN_SHIFT\fP)) & \fBUSB_CLK_RECOVER_IRC_EN_IRC_EN_MASK\fP)"

.SS "#define USB_CLK_RECOVER_IRC_EN_IRC_EN_MASK   (0x2U)"

.SS "#define USB_CLK_RECOVER_IRC_EN_IRC_EN_SHIFT   (1U)"

.SS "#define USB_CLK_RECOVER_IRC_EN_REG_EN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CLK_RECOVER_IRC_EN_REG_EN_SHIFT\fP)) & \fBUSB_CLK_RECOVER_IRC_EN_REG_EN_MASK\fP)"

.SS "#define USB_CLK_RECOVER_IRC_EN_REG_EN_MASK   (0x1U)"

.SS "#define USB_CLK_RECOVER_IRC_EN_REG_EN_SHIFT   (0U)"

.SS "#define USB_CONTROL_DPPULLUPNONOTG(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CONTROL_DPPULLUPNONOTG_SHIFT\fP)) & \fBUSB_CONTROL_DPPULLUPNONOTG_MASK\fP)"

.SS "#define USB_CONTROL_DPPULLUPNONOTG_MASK   (0x10U)"

.SS "#define USB_CONTROL_DPPULLUPNONOTG_SHIFT   (4U)"

.SS "#define USB_CTL_HOSTMODEEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CTL_HOSTMODEEN_SHIFT\fP)) & \fBUSB_CTL_HOSTMODEEN_MASK\fP)"

.SS "#define USB_CTL_HOSTMODEEN_MASK   (0x8U)"

.SS "#define USB_CTL_HOSTMODEEN_SHIFT   (3U)"

.SS "#define USB_CTL_JSTATE(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CTL_JSTATE_SHIFT\fP)) & \fBUSB_CTL_JSTATE_MASK\fP)"

.SS "#define USB_CTL_JSTATE_MASK   (0x80U)"

.SS "#define USB_CTL_JSTATE_SHIFT   (7U)"

.SS "#define USB_CTL_ODDRST(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CTL_ODDRST_SHIFT\fP)) & \fBUSB_CTL_ODDRST_MASK\fP)"

.SS "#define USB_CTL_ODDRST_MASK   (0x2U)"

.SS "#define USB_CTL_ODDRST_SHIFT   (1U)"

.SS "#define USB_CTL_RESET(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CTL_RESET_SHIFT\fP)) & \fBUSB_CTL_RESET_MASK\fP)"

.SS "#define USB_CTL_RESET_MASK   (0x10U)"

.SS "#define USB_CTL_RESET_SHIFT   (4U)"

.SS "#define USB_CTL_RESUME(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CTL_RESUME_SHIFT\fP)) & \fBUSB_CTL_RESUME_MASK\fP)"

.SS "#define USB_CTL_RESUME_MASK   (0x4U)"

.SS "#define USB_CTL_RESUME_SHIFT   (2U)"

.SS "#define USB_CTL_SE0(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CTL_SE0_SHIFT\fP)) & \fBUSB_CTL_SE0_MASK\fP)"

.SS "#define USB_CTL_SE0_MASK   (0x40U)"

.SS "#define USB_CTL_SE0_SHIFT   (6U)"

.SS "#define USB_CTL_TXSUSPENDTOKENBUSY(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CTL_TXSUSPENDTOKENBUSY_SHIFT\fP)) & \fBUSB_CTL_TXSUSPENDTOKENBUSY_MASK\fP)"

.SS "#define USB_CTL_TXSUSPENDTOKENBUSY_MASK   (0x20U)"

.SS "#define USB_CTL_TXSUSPENDTOKENBUSY_SHIFT   (5U)"

.SS "#define USB_CTL_USBENSOFEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_CTL_USBENSOFEN_SHIFT\fP)) & \fBUSB_CTL_USBENSOFEN_MASK\fP)"

.SS "#define USB_CTL_USBENSOFEN_MASK   (0x1U)"

.SS "#define USB_CTL_USBENSOFEN_SHIFT   (0U)"

.SS "#define USB_ENDPT_COUNT   (16U)"

.SS "#define USB_ENDPT_EPCTLDIS(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ENDPT_EPCTLDIS_SHIFT\fP)) & \fBUSB_ENDPT_EPCTLDIS_MASK\fP)"

.SS "#define USB_ENDPT_EPCTLDIS_MASK   (0x10U)"

.SS "#define USB_ENDPT_EPCTLDIS_SHIFT   (4U)"

.SS "#define USB_ENDPT_EPHSHK(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ENDPT_EPHSHK_SHIFT\fP)) & \fBUSB_ENDPT_EPHSHK_MASK\fP)"

.SS "#define USB_ENDPT_EPHSHK_MASK   (0x1U)"

.SS "#define USB_ENDPT_EPHSHK_SHIFT   (0U)"

.SS "#define USB_ENDPT_EPRXEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ENDPT_EPRXEN_SHIFT\fP)) & \fBUSB_ENDPT_EPRXEN_MASK\fP)"

.SS "#define USB_ENDPT_EPRXEN_MASK   (0x8U)"

.SS "#define USB_ENDPT_EPRXEN_SHIFT   (3U)"

.SS "#define USB_ENDPT_EPSTALL(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ENDPT_EPSTALL_SHIFT\fP)) & \fBUSB_ENDPT_EPSTALL_MASK\fP)"

.SS "#define USB_ENDPT_EPSTALL_MASK   (0x2U)"

.SS "#define USB_ENDPT_EPSTALL_SHIFT   (1U)"

.SS "#define USB_ENDPT_EPTXEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ENDPT_EPTXEN_SHIFT\fP)) & \fBUSB_ENDPT_EPTXEN_MASK\fP)"

.SS "#define USB_ENDPT_EPTXEN_MASK   (0x4U)"

.SS "#define USB_ENDPT_EPTXEN_SHIFT   (2U)"

.SS "#define USB_ENDPT_HOSTWOHUB(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ENDPT_HOSTWOHUB_SHIFT\fP)) & \fBUSB_ENDPT_HOSTWOHUB_MASK\fP)"

.SS "#define USB_ENDPT_HOSTWOHUB_MASK   (0x80U)"

.SS "#define USB_ENDPT_HOSTWOHUB_SHIFT   (7U)"

.SS "#define USB_ENDPT_RETRYDIS(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ENDPT_RETRYDIS_SHIFT\fP)) & \fBUSB_ENDPT_RETRYDIS_MASK\fP)"

.SS "#define USB_ENDPT_RETRYDIS_MASK   (0x40U)"

.SS "#define USB_ENDPT_RETRYDIS_SHIFT   (6U)"

.SS "#define USB_ERREN_BTOERREN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERREN_BTOERREN_SHIFT\fP)) & \fBUSB_ERREN_BTOERREN_MASK\fP)"

.SS "#define USB_ERREN_BTOERREN_MASK   (0x10U)"

.SS "#define USB_ERREN_BTOERREN_SHIFT   (4U)"

.SS "#define USB_ERREN_BTSERREN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERREN_BTSERREN_SHIFT\fP)) & \fBUSB_ERREN_BTSERREN_MASK\fP)"

.SS "#define USB_ERREN_BTSERREN_MASK   (0x80U)"

.SS "#define USB_ERREN_BTSERREN_SHIFT   (7U)"

.SS "#define USB_ERREN_CRC16EN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERREN_CRC16EN_SHIFT\fP)) & \fBUSB_ERREN_CRC16EN_MASK\fP)"

.SS "#define USB_ERREN_CRC16EN_MASK   (0x4U)"

.SS "#define USB_ERREN_CRC16EN_SHIFT   (2U)"

.SS "#define USB_ERREN_CRC5EOFEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERREN_CRC5EOFEN_SHIFT\fP)) & \fBUSB_ERREN_CRC5EOFEN_MASK\fP)"

.SS "#define USB_ERREN_CRC5EOFEN_MASK   (0x2U)"

.SS "#define USB_ERREN_CRC5EOFEN_SHIFT   (1U)"

.SS "#define USB_ERREN_DFN8EN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERREN_DFN8EN_SHIFT\fP)) & \fBUSB_ERREN_DFN8EN_MASK\fP)"

.SS "#define USB_ERREN_DFN8EN_MASK   (0x8U)"

.SS "#define USB_ERREN_DFN8EN_SHIFT   (3U)"

.SS "#define USB_ERREN_DMAERREN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERREN_DMAERREN_SHIFT\fP)) & \fBUSB_ERREN_DMAERREN_MASK\fP)"

.SS "#define USB_ERREN_DMAERREN_MASK   (0x20U)"

.SS "#define USB_ERREN_DMAERREN_SHIFT   (5U)"

.SS "#define USB_ERREN_PIDERREN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERREN_PIDERREN_SHIFT\fP)) & \fBUSB_ERREN_PIDERREN_MASK\fP)"

.SS "#define USB_ERREN_PIDERREN_MASK   (0x1U)"

.SS "#define USB_ERREN_PIDERREN_SHIFT   (0U)"

.SS "#define USB_ERRSTAT_BTOERR(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERRSTAT_BTOERR_SHIFT\fP)) & \fBUSB_ERRSTAT_BTOERR_MASK\fP)"

.SS "#define USB_ERRSTAT_BTOERR_MASK   (0x10U)"

.SS "#define USB_ERRSTAT_BTOERR_SHIFT   (4U)"

.SS "#define USB_ERRSTAT_BTSERR(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERRSTAT_BTSERR_SHIFT\fP)) & \fBUSB_ERRSTAT_BTSERR_MASK\fP)"

.SS "#define USB_ERRSTAT_BTSERR_MASK   (0x80U)"

.SS "#define USB_ERRSTAT_BTSERR_SHIFT   (7U)"

.SS "#define USB_ERRSTAT_CRC16(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERRSTAT_CRC16_SHIFT\fP)) & \fBUSB_ERRSTAT_CRC16_MASK\fP)"

.SS "#define USB_ERRSTAT_CRC16_MASK   (0x4U)"

.SS "#define USB_ERRSTAT_CRC16_SHIFT   (2U)"

.SS "#define USB_ERRSTAT_CRC5EOF(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERRSTAT_CRC5EOF_SHIFT\fP)) & \fBUSB_ERRSTAT_CRC5EOF_MASK\fP)"

.SS "#define USB_ERRSTAT_CRC5EOF_MASK   (0x2U)"

.SS "#define USB_ERRSTAT_CRC5EOF_SHIFT   (1U)"

.SS "#define USB_ERRSTAT_DFN8(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERRSTAT_DFN8_SHIFT\fP)) & \fBUSB_ERRSTAT_DFN8_MASK\fP)"

.SS "#define USB_ERRSTAT_DFN8_MASK   (0x8U)"

.SS "#define USB_ERRSTAT_DFN8_SHIFT   (3U)"

.SS "#define USB_ERRSTAT_DMAERR(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERRSTAT_DMAERR_SHIFT\fP)) & \fBUSB_ERRSTAT_DMAERR_MASK\fP)"

.SS "#define USB_ERRSTAT_DMAERR_MASK   (0x20U)"

.SS "#define USB_ERRSTAT_DMAERR_SHIFT   (5U)"

.SS "#define USB_ERRSTAT_PIDERR(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ERRSTAT_PIDERR_SHIFT\fP)) & \fBUSB_ERRSTAT_PIDERR_MASK\fP)"

.SS "#define USB_ERRSTAT_PIDERR_MASK   (0x1U)"

.SS "#define USB_ERRSTAT_PIDERR_SHIFT   (0U)"

.SS "#define USB_FRMNUMH_FRM(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_FRMNUMH_FRM_SHIFT\fP)) & \fBUSB_FRMNUMH_FRM_MASK\fP)"

.SS "#define USB_FRMNUMH_FRM_MASK   (0x7U)"

.SS "#define USB_FRMNUMH_FRM_SHIFT   (0U)"

.SS "#define USB_FRMNUML_FRM(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_FRMNUML_FRM_SHIFT\fP)) & \fBUSB_FRMNUML_FRM_MASK\fP)"

.SS "#define USB_FRMNUML_FRM_MASK   (0xFFU)"

.SS "#define USB_FRMNUML_FRM_SHIFT   (0U)"

.SS "#define USB_IDCOMP_NID(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_IDCOMP_NID_SHIFT\fP)) & \fBUSB_IDCOMP_NID_MASK\fP)"

.SS "#define USB_IDCOMP_NID_MASK   (0x3FU)"

.SS "#define USB_IDCOMP_NID_SHIFT   (0U)"

.SS "#define USB_INTEN_ATTACHEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_INTEN_ATTACHEN_SHIFT\fP)) & \fBUSB_INTEN_ATTACHEN_MASK\fP)"

.SS "#define USB_INTEN_ATTACHEN_MASK   (0x40U)"

.SS "#define USB_INTEN_ATTACHEN_SHIFT   (6U)"

.SS "#define USB_INTEN_ERROREN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_INTEN_ERROREN_SHIFT\fP)) & \fBUSB_INTEN_ERROREN_MASK\fP)"

.SS "#define USB_INTEN_ERROREN_MASK   (0x2U)"

.SS "#define USB_INTEN_ERROREN_SHIFT   (1U)"

.SS "#define USB_INTEN_RESUMEEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_INTEN_RESUMEEN_SHIFT\fP)) & \fBUSB_INTEN_RESUMEEN_MASK\fP)"

.SS "#define USB_INTEN_RESUMEEN_MASK   (0x20U)"

.SS "#define USB_INTEN_RESUMEEN_SHIFT   (5U)"

.SS "#define USB_INTEN_SLEEPEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_INTEN_SLEEPEN_SHIFT\fP)) & \fBUSB_INTEN_SLEEPEN_MASK\fP)"

.SS "#define USB_INTEN_SLEEPEN_MASK   (0x10U)"

.SS "#define USB_INTEN_SLEEPEN_SHIFT   (4U)"

.SS "#define USB_INTEN_SOFTOKEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_INTEN_SOFTOKEN_SHIFT\fP)) & \fBUSB_INTEN_SOFTOKEN_MASK\fP)"

.SS "#define USB_INTEN_SOFTOKEN_MASK   (0x4U)"

.SS "#define USB_INTEN_SOFTOKEN_SHIFT   (2U)"

.SS "#define USB_INTEN_STALLEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_INTEN_STALLEN_SHIFT\fP)) & \fBUSB_INTEN_STALLEN_MASK\fP)"

.SS "#define USB_INTEN_STALLEN_MASK   (0x80U)"

.SS "#define USB_INTEN_STALLEN_SHIFT   (7U)"

.SS "#define USB_INTEN_TOKDNEEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_INTEN_TOKDNEEN_SHIFT\fP)) & \fBUSB_INTEN_TOKDNEEN_MASK\fP)"

.SS "#define USB_INTEN_TOKDNEEN_MASK   (0x8U)"

.SS "#define USB_INTEN_TOKDNEEN_SHIFT   (3U)"

.SS "#define USB_INTEN_USBRSTEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_INTEN_USBRSTEN_SHIFT\fP)) & \fBUSB_INTEN_USBRSTEN_MASK\fP)"

.SS "#define USB_INTEN_USBRSTEN_MASK   (0x1U)"

.SS "#define USB_INTEN_USBRSTEN_SHIFT   (0U)"

.SS "#define USB_IRQS   { \fBUSB0_IRQn\fP }"
Interrupt vectors for the USB peripheral type 
.SS "#define USB_ISTAT_ATTACH(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ISTAT_ATTACH_SHIFT\fP)) & \fBUSB_ISTAT_ATTACH_MASK\fP)"

.SS "#define USB_ISTAT_ATTACH_MASK   (0x40U)"

.SS "#define USB_ISTAT_ATTACH_SHIFT   (6U)"

.SS "#define USB_ISTAT_ERROR(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ISTAT_ERROR_SHIFT\fP)) & \fBUSB_ISTAT_ERROR_MASK\fP)"

.SS "#define USB_ISTAT_ERROR_MASK   (0x2U)"

.SS "#define USB_ISTAT_ERROR_SHIFT   (1U)"

.SS "#define USB_ISTAT_RESUME(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ISTAT_RESUME_SHIFT\fP)) & \fBUSB_ISTAT_RESUME_MASK\fP)"

.SS "#define USB_ISTAT_RESUME_MASK   (0x20U)"

.SS "#define USB_ISTAT_RESUME_SHIFT   (5U)"

.SS "#define USB_ISTAT_SLEEP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ISTAT_SLEEP_SHIFT\fP)) & \fBUSB_ISTAT_SLEEP_MASK\fP)"

.SS "#define USB_ISTAT_SLEEP_MASK   (0x10U)"

.SS "#define USB_ISTAT_SLEEP_SHIFT   (4U)"

.SS "#define USB_ISTAT_SOFTOK(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ISTAT_SOFTOK_SHIFT\fP)) & \fBUSB_ISTAT_SOFTOK_MASK\fP)"

.SS "#define USB_ISTAT_SOFTOK_MASK   (0x4U)"

.SS "#define USB_ISTAT_SOFTOK_SHIFT   (2U)"

.SS "#define USB_ISTAT_STALL(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ISTAT_STALL_SHIFT\fP)) & \fBUSB_ISTAT_STALL_MASK\fP)"

.SS "#define USB_ISTAT_STALL_MASK   (0x80U)"

.SS "#define USB_ISTAT_STALL_SHIFT   (7U)"

.SS "#define USB_ISTAT_TOKDNE(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ISTAT_TOKDNE_SHIFT\fP)) & \fBUSB_ISTAT_TOKDNE_MASK\fP)"

.SS "#define USB_ISTAT_TOKDNE_MASK   (0x8U)"

.SS "#define USB_ISTAT_TOKDNE_SHIFT   (3U)"

.SS "#define USB_ISTAT_USBRST(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_ISTAT_USBRST_SHIFT\fP)) & \fBUSB_ISTAT_USBRST_MASK\fP)"

.SS "#define USB_ISTAT_USBRST_MASK   (0x1U)"

.SS "#define USB_ISTAT_USBRST_SHIFT   (0U)"

.SS "#define USB_OBSERVE_DMPD(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OBSERVE_DMPD_SHIFT\fP)) & \fBUSB_OBSERVE_DMPD_MASK\fP)"

.SS "#define USB_OBSERVE_DMPD_MASK   (0x10U)"

.SS "#define USB_OBSERVE_DMPD_SHIFT   (4U)"

.SS "#define USB_OBSERVE_DPPD(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OBSERVE_DPPD_SHIFT\fP)) & \fBUSB_OBSERVE_DPPD_MASK\fP)"

.SS "#define USB_OBSERVE_DPPD_MASK   (0x40U)"

.SS "#define USB_OBSERVE_DPPD_SHIFT   (6U)"

.SS "#define USB_OBSERVE_DPPU(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OBSERVE_DPPU_SHIFT\fP)) & \fBUSB_OBSERVE_DPPU_MASK\fP)"

.SS "#define USB_OBSERVE_DPPU_MASK   (0x80U)"

.SS "#define USB_OBSERVE_DPPU_SHIFT   (7U)"

.SS "#define USB_OTGCTL_DMLOW(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGCTL_DMLOW_SHIFT\fP)) & \fBUSB_OTGCTL_DMLOW_MASK\fP)"

.SS "#define USB_OTGCTL_DMLOW_MASK   (0x10U)"

.SS "#define USB_OTGCTL_DMLOW_SHIFT   (4U)"

.SS "#define USB_OTGCTL_DPHIGH(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGCTL_DPHIGH_SHIFT\fP)) & \fBUSB_OTGCTL_DPHIGH_MASK\fP)"

.SS "#define USB_OTGCTL_DPHIGH_MASK   (0x80U)"

.SS "#define USB_OTGCTL_DPHIGH_SHIFT   (7U)"

.SS "#define USB_OTGCTL_DPLOW(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGCTL_DPLOW_SHIFT\fP)) & \fBUSB_OTGCTL_DPLOW_MASK\fP)"

.SS "#define USB_OTGCTL_DPLOW_MASK   (0x20U)"

.SS "#define USB_OTGCTL_DPLOW_SHIFT   (5U)"

.SS "#define USB_OTGCTL_OTGEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGCTL_OTGEN_SHIFT\fP)) & \fBUSB_OTGCTL_OTGEN_MASK\fP)"

.SS "#define USB_OTGCTL_OTGEN_MASK   (0x4U)"

.SS "#define USB_OTGCTL_OTGEN_SHIFT   (2U)"

.SS "#define USB_OTGICR_AVBUSEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGICR_AVBUSEN_SHIFT\fP)) & \fBUSB_OTGICR_AVBUSEN_MASK\fP)"

.SS "#define USB_OTGICR_AVBUSEN_MASK   (0x1U)"

.SS "#define USB_OTGICR_AVBUSEN_SHIFT   (0U)"

.SS "#define USB_OTGICR_BSESSEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGICR_BSESSEN_SHIFT\fP)) & \fBUSB_OTGICR_BSESSEN_MASK\fP)"

.SS "#define USB_OTGICR_BSESSEN_MASK   (0x4U)"

.SS "#define USB_OTGICR_BSESSEN_SHIFT   (2U)"

.SS "#define USB_OTGICR_IDEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGICR_IDEN_SHIFT\fP)) & \fBUSB_OTGICR_IDEN_MASK\fP)"

.SS "#define USB_OTGICR_IDEN_MASK   (0x80U)"

.SS "#define USB_OTGICR_IDEN_SHIFT   (7U)"

.SS "#define USB_OTGICR_LINESTATEEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGICR_LINESTATEEN_SHIFT\fP)) & \fBUSB_OTGICR_LINESTATEEN_MASK\fP)"

.SS "#define USB_OTGICR_LINESTATEEN_MASK   (0x20U)"

.SS "#define USB_OTGICR_LINESTATEEN_SHIFT   (5U)"

.SS "#define USB_OTGICR_ONEMSECEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGICR_ONEMSECEN_SHIFT\fP)) & \fBUSB_OTGICR_ONEMSECEN_MASK\fP)"

.SS "#define USB_OTGICR_ONEMSECEN_MASK   (0x40U)"

.SS "#define USB_OTGICR_ONEMSECEN_SHIFT   (6U)"

.SS "#define USB_OTGICR_SESSVLDEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGICR_SESSVLDEN_SHIFT\fP)) & \fBUSB_OTGICR_SESSVLDEN_MASK\fP)"

.SS "#define USB_OTGICR_SESSVLDEN_MASK   (0x8U)"

.SS "#define USB_OTGICR_SESSVLDEN_SHIFT   (3U)"

.SS "#define USB_OTGISTAT_AVBUSCHG(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGISTAT_AVBUSCHG_SHIFT\fP)) & \fBUSB_OTGISTAT_AVBUSCHG_MASK\fP)"

.SS "#define USB_OTGISTAT_AVBUSCHG_MASK   (0x1U)"

.SS "#define USB_OTGISTAT_AVBUSCHG_SHIFT   (0U)"

.SS "#define USB_OTGISTAT_B_SESS_CHG(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGISTAT_B_SESS_CHG_SHIFT\fP)) & \fBUSB_OTGISTAT_B_SESS_CHG_MASK\fP)"

.SS "#define USB_OTGISTAT_B_SESS_CHG_MASK   (0x4U)"

.SS "#define USB_OTGISTAT_B_SESS_CHG_SHIFT   (2U)"

.SS "#define USB_OTGISTAT_IDCHG(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGISTAT_IDCHG_SHIFT\fP)) & \fBUSB_OTGISTAT_IDCHG_MASK\fP)"

.SS "#define USB_OTGISTAT_IDCHG_MASK   (0x80U)"

.SS "#define USB_OTGISTAT_IDCHG_SHIFT   (7U)"

.SS "#define USB_OTGISTAT_LINE_STATE_CHG(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGISTAT_LINE_STATE_CHG_SHIFT\fP)) & \fBUSB_OTGISTAT_LINE_STATE_CHG_MASK\fP)"

.SS "#define USB_OTGISTAT_LINE_STATE_CHG_MASK   (0x20U)"

.SS "#define USB_OTGISTAT_LINE_STATE_CHG_SHIFT   (5U)"

.SS "#define USB_OTGISTAT_ONEMSEC(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGISTAT_ONEMSEC_SHIFT\fP)) & \fBUSB_OTGISTAT_ONEMSEC_MASK\fP)"

.SS "#define USB_OTGISTAT_ONEMSEC_MASK   (0x40U)"

.SS "#define USB_OTGISTAT_ONEMSEC_SHIFT   (6U)"

.SS "#define USB_OTGISTAT_SESSVLDCHG(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGISTAT_SESSVLDCHG_SHIFT\fP)) & \fBUSB_OTGISTAT_SESSVLDCHG_MASK\fP)"

.SS "#define USB_OTGISTAT_SESSVLDCHG_MASK   (0x8U)"

.SS "#define USB_OTGISTAT_SESSVLDCHG_SHIFT   (3U)"

.SS "#define USB_OTGSTAT_AVBUSVLD(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGSTAT_AVBUSVLD_SHIFT\fP)) & \fBUSB_OTGSTAT_AVBUSVLD_MASK\fP)"

.SS "#define USB_OTGSTAT_AVBUSVLD_MASK   (0x1U)"

.SS "#define USB_OTGSTAT_AVBUSVLD_SHIFT   (0U)"

.SS "#define USB_OTGSTAT_BSESSEND(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGSTAT_BSESSEND_SHIFT\fP)) & \fBUSB_OTGSTAT_BSESSEND_MASK\fP)"

.SS "#define USB_OTGSTAT_BSESSEND_MASK   (0x4U)"

.SS "#define USB_OTGSTAT_BSESSEND_SHIFT   (2U)"

.SS "#define USB_OTGSTAT_ID(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGSTAT_ID_SHIFT\fP)) & \fBUSB_OTGSTAT_ID_MASK\fP)"

.SS "#define USB_OTGSTAT_ID_MASK   (0x80U)"

.SS "#define USB_OTGSTAT_ID_SHIFT   (7U)"

.SS "#define USB_OTGSTAT_LINESTATESTABLE(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGSTAT_LINESTATESTABLE_SHIFT\fP)) & \fBUSB_OTGSTAT_LINESTATESTABLE_MASK\fP)"

.SS "#define USB_OTGSTAT_LINESTATESTABLE_MASK   (0x20U)"

.SS "#define USB_OTGSTAT_LINESTATESTABLE_SHIFT   (5U)"

.SS "#define USB_OTGSTAT_ONEMSECEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGSTAT_ONEMSECEN_SHIFT\fP)) & \fBUSB_OTGSTAT_ONEMSECEN_MASK\fP)"

.SS "#define USB_OTGSTAT_ONEMSECEN_MASK   (0x40U)"

.SS "#define USB_OTGSTAT_ONEMSECEN_SHIFT   (6U)"

.SS "#define USB_OTGSTAT_SESS_VLD(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_OTGSTAT_SESS_VLD_SHIFT\fP)) & \fBUSB_OTGSTAT_SESS_VLD_MASK\fP)"

.SS "#define USB_OTGSTAT_SESS_VLD_MASK   (0x8U)"

.SS "#define USB_OTGSTAT_SESS_VLD_SHIFT   (3U)"

.SS "#define USB_PERID_ID(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_PERID_ID_SHIFT\fP)) & \fBUSB_PERID_ID_MASK\fP)"

.SS "#define USB_PERID_ID_MASK   (0x3FU)"

.SS "#define USB_PERID_ID_SHIFT   (0U)"

.SS "#define USB_REV_REV(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_REV_REV_SHIFT\fP)) & \fBUSB_REV_REV_MASK\fP)"

.SS "#define USB_REV_REV_MASK   (0xFFU)"

.SS "#define USB_REV_REV_SHIFT   (0U)"

.SS "#define USB_SOFTHLD_CNT(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_SOFTHLD_CNT_SHIFT\fP)) & \fBUSB_SOFTHLD_CNT_MASK\fP)"

.SS "#define USB_SOFTHLD_CNT_MASK   (0xFFU)"

.SS "#define USB_SOFTHLD_CNT_SHIFT   (0U)"

.SS "#define USB_STAT_ENDP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_STAT_ENDP_SHIFT\fP)) & \fBUSB_STAT_ENDP_MASK\fP)"

.SS "#define USB_STAT_ENDP_MASK   (0xF0U)"

.SS "#define USB_STAT_ENDP_SHIFT   (4U)"

.SS "#define USB_STAT_ODD(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_STAT_ODD_SHIFT\fP)) & \fBUSB_STAT_ODD_MASK\fP)"

.SS "#define USB_STAT_ODD_MASK   (0x4U)"

.SS "#define USB_STAT_ODD_SHIFT   (2U)"

.SS "#define USB_STAT_TX(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_STAT_TX_SHIFT\fP)) & \fBUSB_STAT_TX_MASK\fP)"

.SS "#define USB_STAT_TX_MASK   (0x8U)"

.SS "#define USB_STAT_TX_SHIFT   (3U)"

.SS "#define USB_TOKEN_TOKENENDPT(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_TOKEN_TOKENENDPT_SHIFT\fP)) & \fBUSB_TOKEN_TOKENENDPT_MASK\fP)"

.SS "#define USB_TOKEN_TOKENENDPT_MASK   (0xFU)"

.SS "#define USB_TOKEN_TOKENENDPT_SHIFT   (0U)"

.SS "#define USB_TOKEN_TOKENPID(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_TOKEN_TOKENPID_SHIFT\fP)) & \fBUSB_TOKEN_TOKENPID_MASK\fP)"

.SS "#define USB_TOKEN_TOKENPID_MASK   (0xF0U)"

.SS "#define USB_TOKEN_TOKENPID_SHIFT   (4U)"

.SS "#define USB_USBCTRL_PDE(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_USBCTRL_PDE_SHIFT\fP)) & \fBUSB_USBCTRL_PDE_MASK\fP)"

.SS "#define USB_USBCTRL_PDE_MASK   (0x40U)"

.SS "#define USB_USBCTRL_PDE_SHIFT   (6U)"

.SS "#define USB_USBCTRL_SUSP(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_USBCTRL_SUSP_SHIFT\fP)) & \fBUSB_USBCTRL_SUSP_MASK\fP)"

.SS "#define USB_USBCTRL_SUSP_MASK   (0x80U)"

.SS "#define USB_USBCTRL_SUSP_SHIFT   (7U)"

.SS "#define USB_USBFRMADJUST_ADJ(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_USBFRMADJUST_ADJ_SHIFT\fP)) & \fBUSB_USBFRMADJUST_ADJ_MASK\fP)"

.SS "#define USB_USBFRMADJUST_ADJ_MASK   (0xFFU)"

.SS "#define USB_USBFRMADJUST_ADJ_SHIFT   (0U)"

.SS "#define USB_USBTRC0_SYNC_DET(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_USBTRC0_SYNC_DET_SHIFT\fP)) & \fBUSB_USBTRC0_SYNC_DET_MASK\fP)"

.SS "#define USB_USBTRC0_SYNC_DET_MASK   (0x2U)"

.SS "#define USB_USBTRC0_SYNC_DET_SHIFT   (1U)"

.SS "#define USB_USBTRC0_USB_CLK_RECOVERY_INT(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_USBTRC0_USB_CLK_RECOVERY_INT_SHIFT\fP)) & \fBUSB_USBTRC0_USB_CLK_RECOVERY_INT_MASK\fP)"

.SS "#define USB_USBTRC0_USB_CLK_RECOVERY_INT_MASK   (0x4U)"

.SS "#define USB_USBTRC0_USB_CLK_RECOVERY_INT_SHIFT   (2U)"

.SS "#define USB_USBTRC0_USB_RESUME_INT(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_USBTRC0_USB_RESUME_INT_SHIFT\fP)) & \fBUSB_USBTRC0_USB_RESUME_INT_MASK\fP)"

.SS "#define USB_USBTRC0_USB_RESUME_INT_MASK   (0x1U)"

.SS "#define USB_USBTRC0_USB_RESUME_INT_SHIFT   (0U)"

.SS "#define USB_USBTRC0_USBRESET(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_USBTRC0_USBRESET_SHIFT\fP)) & \fBUSB_USBTRC0_USBRESET_MASK\fP)"

.SS "#define USB_USBTRC0_USBRESET_MASK   (0x80U)"

.SS "#define USB_USBTRC0_USBRESET_SHIFT   (7U)"

.SS "#define USB_USBTRC0_USBRESMEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBUSB_USBTRC0_USBRESMEN_SHIFT\fP)) & \fBUSB_USBTRC0_USBRESMEN_MASK\fP)"

.SS "#define USB_USBTRC0_USBRESMEN_MASK   (0x20U)"

.SS "#define USB_USBTRC0_USBRESMEN_SHIFT   (5U)"

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
