.TH "CAU_Register_Masks" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CAU_Register_Masks
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBCAU_BASE\fP   (0xE0081000u)"
.br
.ti -1c
.RI "#define \fBCAU\fP   ((\fBCAU_Type\fP *)\fBCAU_BASE\fP)"
.br
.ti -1c
.RI "#define \fBCAU_BASE_ADDRS\fP   { \fBCAU_BASE\fP }"
.br
.ti -1c
.RI "#define \fBCAU_BASE_PTRS\fP   { \fBCAU\fP }"
.br
.in -1c
.SS "DIRECT - Direct access register 0\&.\&.Direct access register 15"

.in +1c
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT0_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT0_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT1_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT1_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT1_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT2_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT2_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT2_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT3_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT3_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT3_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT4_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT4_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT4_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT4_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT5_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT5_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT5\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT5_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT5_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT6_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT6_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT6\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT6_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT6_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT7_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT7_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT7\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT7_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT7_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT8_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT8_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT8\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT8_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT8_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT9_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT9_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT9\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT9_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT9_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT10_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT10_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT10\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT10_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT10_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT11_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT11_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT11\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT11_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT11_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT12_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT12_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT12\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT12_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT12_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT13_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT13_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT13\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT13_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT13_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT14_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT14_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT14\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT14_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT14_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT15_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT15_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_CAU_DIRECT15\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT15_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT15_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_DIRECT_COUNT\fP   (16U)"
.br
.in -1c
.SS "LDR_CASR - Status register - Load Register command"

.in +1c
.ti -1c
.RI "#define \fBCAU_LDR_CASR_IC_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CASR_IC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CASR_IC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CASR_IC_SHIFT\fP)) & \fBCAU_LDR_CASR_IC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CASR_DPE_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CASR_DPE_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CASR_DPE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CASR_DPE_SHIFT\fP)) & \fBCAU_LDR_CASR_DPE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CASR_VER_MASK\fP   (0xF0000000U)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CASR_VER_SHIFT\fP   (28U)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CASR_VER\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CASR_VER_SHIFT\fP)) & \fBCAU_LDR_CASR_VER_MASK\fP)"
.br
.in -1c
.SS "LDR_CAA - Accumulator register - Load Register command"

.in +1c
.ti -1c
.RI "#define \fBCAU_LDR_CAA_ACC_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CAA_ACC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CAA_ACC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CAA_ACC_SHIFT\fP)) & \fBCAU_LDR_CAA_ACC_MASK\fP)"
.br
.in -1c
.SS "LDR_CA - General Purpose Register 0 - Load Register command\&.\&.General Purpose Register 8 - Load Register command"

.in +1c
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA0_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA0_SHIFT\fP)) & \fBCAU_LDR_CA_CA0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA1_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA1_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA1_SHIFT\fP)) & \fBCAU_LDR_CA_CA1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA2_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA2_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA2_SHIFT\fP)) & \fBCAU_LDR_CA_CA2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA3_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA3_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA3_SHIFT\fP)) & \fBCAU_LDR_CA_CA3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA4_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA4_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA4_SHIFT\fP)) & \fBCAU_LDR_CA_CA4_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA5_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA5_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA5\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA5_SHIFT\fP)) & \fBCAU_LDR_CA_CA5_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA6_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA6_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA6\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA6_SHIFT\fP)) & \fBCAU_LDR_CA_CA6_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA7_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA7_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA7\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA7_SHIFT\fP)) & \fBCAU_LDR_CA_CA7_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA8_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA8_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_CA8\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA8_SHIFT\fP)) & \fBCAU_LDR_CA_CA8_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_LDR_CA_COUNT\fP   (9U)"
.br
.in -1c
.SS "STR_CASR - Status register - Store Register command"

.in +1c
.ti -1c
.RI "#define \fBCAU_STR_CASR_IC_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CASR_IC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CASR_IC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CASR_IC_SHIFT\fP)) & \fBCAU_STR_CASR_IC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CASR_DPE_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CASR_DPE_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CASR_DPE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CASR_DPE_SHIFT\fP)) & \fBCAU_STR_CASR_DPE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CASR_VER_MASK\fP   (0xF0000000U)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CASR_VER_SHIFT\fP   (28U)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CASR_VER\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CASR_VER_SHIFT\fP)) & \fBCAU_STR_CASR_VER_MASK\fP)"
.br
.in -1c
.SS "STR_CAA - Accumulator register - Store Register command"

.in +1c
.ti -1c
.RI "#define \fBCAU_STR_CAA_ACC_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CAA_ACC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CAA_ACC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CAA_ACC_SHIFT\fP)) & \fBCAU_STR_CAA_ACC_MASK\fP)"
.br
.in -1c
.SS "STR_CA - General Purpose Register 0 - Store Register command\&.\&.General Purpose Register 8 - Store Register command"

.in +1c
.ti -1c
.RI "#define \fBCAU_STR_CA_CA0_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA0_SHIFT\fP)) & \fBCAU_STR_CA_CA0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA1_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA1_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA1_SHIFT\fP)) & \fBCAU_STR_CA_CA1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA2_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA2_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA2_SHIFT\fP)) & \fBCAU_STR_CA_CA2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA3_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA3_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA3_SHIFT\fP)) & \fBCAU_STR_CA_CA3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA4_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA4_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA4_SHIFT\fP)) & \fBCAU_STR_CA_CA4_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA5_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA5_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA5\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA5_SHIFT\fP)) & \fBCAU_STR_CA_CA5_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA6_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA6_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA6\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA6_SHIFT\fP)) & \fBCAU_STR_CA_CA6_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA7_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA7_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA7\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA7_SHIFT\fP)) & \fBCAU_STR_CA_CA7_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA8_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA8_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_CA8\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA8_SHIFT\fP)) & \fBCAU_STR_CA_CA8_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_STR_CA_COUNT\fP   (9U)"
.br
.in -1c
.SS "ADR_CASR - Status register - Add Register command"

.in +1c
.ti -1c
.RI "#define \fBCAU_ADR_CASR_IC_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CASR_IC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CASR_IC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CASR_IC_SHIFT\fP)) & \fBCAU_ADR_CASR_IC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CASR_DPE_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CASR_DPE_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CASR_DPE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CASR_DPE_SHIFT\fP)) & \fBCAU_ADR_CASR_DPE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CASR_VER_MASK\fP   (0xF0000000U)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CASR_VER_SHIFT\fP   (28U)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CASR_VER\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CASR_VER_SHIFT\fP)) & \fBCAU_ADR_CASR_VER_MASK\fP)"
.br
.in -1c
.SS "ADR_CAA - Accumulator register - Add to register command"

.in +1c
.ti -1c
.RI "#define \fBCAU_ADR_CAA_ACC_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CAA_ACC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CAA_ACC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CAA_ACC_SHIFT\fP)) & \fBCAU_ADR_CAA_ACC_MASK\fP)"
.br
.in -1c
.SS "ADR_CA - General Purpose Register 0 - Add to register command\&.\&.General Purpose Register 8 - Add to register command"

.in +1c
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA0_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA0_SHIFT\fP)) & \fBCAU_ADR_CA_CA0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA1_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA1_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA1_SHIFT\fP)) & \fBCAU_ADR_CA_CA1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA2_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA2_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA2_SHIFT\fP)) & \fBCAU_ADR_CA_CA2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA3_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA3_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA3_SHIFT\fP)) & \fBCAU_ADR_CA_CA3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA4_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA4_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA4_SHIFT\fP)) & \fBCAU_ADR_CA_CA4_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA5_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA5_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA5\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA5_SHIFT\fP)) & \fBCAU_ADR_CA_CA5_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA6_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA6_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA6\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA6_SHIFT\fP)) & \fBCAU_ADR_CA_CA6_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA7_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA7_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA7\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA7_SHIFT\fP)) & \fBCAU_ADR_CA_CA7_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA8_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA8_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_CA8\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA8_SHIFT\fP)) & \fBCAU_ADR_CA_CA8_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ADR_CA_COUNT\fP   (9U)"
.br
.in -1c
.SS "RADR_CASR - Status register - Reverse and Add to Register command"

.in +1c
.ti -1c
.RI "#define \fBCAU_RADR_CASR_IC_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CASR_IC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CASR_IC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CASR_IC_SHIFT\fP)) & \fBCAU_RADR_CASR_IC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CASR_DPE_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CASR_DPE_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CASR_DPE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CASR_DPE_SHIFT\fP)) & \fBCAU_RADR_CASR_DPE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CASR_VER_MASK\fP   (0xF0000000U)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CASR_VER_SHIFT\fP   (28U)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CASR_VER\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CASR_VER_SHIFT\fP)) & \fBCAU_RADR_CASR_VER_MASK\fP)"
.br
.in -1c
.SS "RADR_CAA - Accumulator register - Reverse and Add to Register command"

.in +1c
.ti -1c
.RI "#define \fBCAU_RADR_CAA_ACC_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CAA_ACC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CAA_ACC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CAA_ACC_SHIFT\fP)) & \fBCAU_RADR_CAA_ACC_MASK\fP)"
.br
.in -1c
.SS "RADR_CA - General Purpose Register 0 - Reverse and Add to Register command\&.\&.General Purpose Register 8 - Reverse and Add to Register command"

.in +1c
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA0_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA0_SHIFT\fP)) & \fBCAU_RADR_CA_CA0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA1_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA1_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA1_SHIFT\fP)) & \fBCAU_RADR_CA_CA1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA2_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA2_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA2_SHIFT\fP)) & \fBCAU_RADR_CA_CA2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA3_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA3_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA3_SHIFT\fP)) & \fBCAU_RADR_CA_CA3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA4_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA4_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA4_SHIFT\fP)) & \fBCAU_RADR_CA_CA4_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA5_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA5_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA5\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA5_SHIFT\fP)) & \fBCAU_RADR_CA_CA5_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA6_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA6_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA6\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA6_SHIFT\fP)) & \fBCAU_RADR_CA_CA6_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA7_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA7_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA7\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA7_SHIFT\fP)) & \fBCAU_RADR_CA_CA7_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA8_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA8_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_CA8\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA8_SHIFT\fP)) & \fBCAU_RADR_CA_CA8_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_RADR_CA_COUNT\fP   (9U)"
.br
.in -1c
.SS "XOR_CASR - Status register - Exclusive Or command"

.in +1c
.ti -1c
.RI "#define \fBCAU_XOR_CASR_IC_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CASR_IC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CASR_IC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CASR_IC_SHIFT\fP)) & \fBCAU_XOR_CASR_IC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CASR_DPE_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CASR_DPE_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CASR_DPE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CASR_DPE_SHIFT\fP)) & \fBCAU_XOR_CASR_DPE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CASR_VER_MASK\fP   (0xF0000000U)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CASR_VER_SHIFT\fP   (28U)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CASR_VER\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CASR_VER_SHIFT\fP)) & \fBCAU_XOR_CASR_VER_MASK\fP)"
.br
.in -1c
.SS "XOR_CAA - Accumulator register - Exclusive Or command"

.in +1c
.ti -1c
.RI "#define \fBCAU_XOR_CAA_ACC_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CAA_ACC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CAA_ACC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CAA_ACC_SHIFT\fP)) & \fBCAU_XOR_CAA_ACC_MASK\fP)"
.br
.in -1c
.SS "XOR_CA - General Purpose Register 0 - Exclusive Or command\&.\&.General Purpose Register 8 - Exclusive Or command"

.in +1c
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA0_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA0_SHIFT\fP)) & \fBCAU_XOR_CA_CA0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA1_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA1_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA1_SHIFT\fP)) & \fBCAU_XOR_CA_CA1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA2_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA2_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA2_SHIFT\fP)) & \fBCAU_XOR_CA_CA2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA3_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA3_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA3_SHIFT\fP)) & \fBCAU_XOR_CA_CA3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA4_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA4_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA4_SHIFT\fP)) & \fBCAU_XOR_CA_CA4_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA5_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA5_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA5\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA5_SHIFT\fP)) & \fBCAU_XOR_CA_CA5_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA6_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA6_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA6\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA6_SHIFT\fP)) & \fBCAU_XOR_CA_CA6_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA7_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA7_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA7\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA7_SHIFT\fP)) & \fBCAU_XOR_CA_CA7_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA8_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA8_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_CA8\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA8_SHIFT\fP)) & \fBCAU_XOR_CA_CA8_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_XOR_CA_COUNT\fP   (9U)"
.br
.in -1c
.SS "ROTL_CASR - Status register - Rotate Left command"

.in +1c
.ti -1c
.RI "#define \fBCAU_ROTL_CASR_IC_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CASR_IC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CASR_IC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CASR_IC_SHIFT\fP)) & \fBCAU_ROTL_CASR_IC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CASR_DPE_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CASR_DPE_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CASR_DPE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CASR_DPE_SHIFT\fP)) & \fBCAU_ROTL_CASR_DPE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CASR_VER_MASK\fP   (0xF0000000U)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CASR_VER_SHIFT\fP   (28U)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CASR_VER\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CASR_VER_SHIFT\fP)) & \fBCAU_ROTL_CASR_VER_MASK\fP)"
.br
.in -1c
.SS "ROTL_CAA - Accumulator register - Rotate Left command"

.in +1c
.ti -1c
.RI "#define \fBCAU_ROTL_CAA_ACC_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CAA_ACC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CAA_ACC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CAA_ACC_SHIFT\fP)) & \fBCAU_ROTL_CAA_ACC_MASK\fP)"
.br
.in -1c
.SS "ROTL_CA - General Purpose Register 0 - Rotate Left command\&.\&.General Purpose Register 8 - Rotate Left command"

.in +1c
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA0_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA0_SHIFT\fP)) & \fBCAU_ROTL_CA_CA0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA1_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA1_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA1_SHIFT\fP)) & \fBCAU_ROTL_CA_CA1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA2_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA2_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA2_SHIFT\fP)) & \fBCAU_ROTL_CA_CA2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA3_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA3_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA3_SHIFT\fP)) & \fBCAU_ROTL_CA_CA3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA4_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA4_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA4_SHIFT\fP)) & \fBCAU_ROTL_CA_CA4_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA5_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA5_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA5\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA5_SHIFT\fP)) & \fBCAU_ROTL_CA_CA5_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA6_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA6_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA6\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA6_SHIFT\fP)) & \fBCAU_ROTL_CA_CA6_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA7_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA7_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA7\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA7_SHIFT\fP)) & \fBCAU_ROTL_CA_CA7_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA8_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA8_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_CA8\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA8_SHIFT\fP)) & \fBCAU_ROTL_CA_CA8_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_ROTL_CA_COUNT\fP   (9U)"
.br
.in -1c
.SS "AESC_CASR - Status register - AES Column Operation command"

.in +1c
.ti -1c
.RI "#define \fBCAU_AESC_CASR_IC_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CASR_IC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CASR_IC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CASR_IC_SHIFT\fP)) & \fBCAU_AESC_CASR_IC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CASR_DPE_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CASR_DPE_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CASR_DPE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CASR_DPE_SHIFT\fP)) & \fBCAU_AESC_CASR_DPE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CASR_VER_MASK\fP   (0xF0000000U)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CASR_VER_SHIFT\fP   (28U)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CASR_VER\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CASR_VER_SHIFT\fP)) & \fBCAU_AESC_CASR_VER_MASK\fP)"
.br
.in -1c
.SS "AESC_CAA - Accumulator register - AES Column Operation command"

.in +1c
.ti -1c
.RI "#define \fBCAU_AESC_CAA_ACC_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CAA_ACC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CAA_ACC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CAA_ACC_SHIFT\fP)) & \fBCAU_AESC_CAA_ACC_MASK\fP)"
.br
.in -1c
.SS "AESC_CA - General Purpose Register 0 - AES Column Operation command\&.\&.General Purpose Register 8 - AES Column Operation command"

.in +1c
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA0_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA0_SHIFT\fP)) & \fBCAU_AESC_CA_CA0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA1_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA1_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA1_SHIFT\fP)) & \fBCAU_AESC_CA_CA1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA2_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA2_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA2_SHIFT\fP)) & \fBCAU_AESC_CA_CA2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA3_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA3_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA3_SHIFT\fP)) & \fBCAU_AESC_CA_CA3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA4_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA4_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA4_SHIFT\fP)) & \fBCAU_AESC_CA_CA4_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA5_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA5_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA5\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA5_SHIFT\fP)) & \fBCAU_AESC_CA_CA5_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA6_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA6_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA6\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA6_SHIFT\fP)) & \fBCAU_AESC_CA_CA6_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA7_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA7_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA7\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA7_SHIFT\fP)) & \fBCAU_AESC_CA_CA7_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA8_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA8_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_CA8\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA8_SHIFT\fP)) & \fBCAU_AESC_CA_CA8_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESC_CA_COUNT\fP   (9U)"
.br
.in -1c
.SS "AESIC_CASR - Status register - AES Inverse Column Operation command"

.in +1c
.ti -1c
.RI "#define \fBCAU_AESIC_CASR_IC_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CASR_IC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CASR_IC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CASR_IC_SHIFT\fP)) & \fBCAU_AESIC_CASR_IC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CASR_DPE_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CASR_DPE_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CASR_DPE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CASR_DPE_SHIFT\fP)) & \fBCAU_AESIC_CASR_DPE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CASR_VER_MASK\fP   (0xF0000000U)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CASR_VER_SHIFT\fP   (28U)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CASR_VER\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CASR_VER_SHIFT\fP)) & \fBCAU_AESIC_CASR_VER_MASK\fP)"
.br
.in -1c
.SS "AESIC_CAA - Accumulator register - AES Inverse Column Operation command"

.in +1c
.ti -1c
.RI "#define \fBCAU_AESIC_CAA_ACC_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CAA_ACC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CAA_ACC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CAA_ACC_SHIFT\fP)) & \fBCAU_AESIC_CAA_ACC_MASK\fP)"
.br
.in -1c
.SS "AESIC_CA - General Purpose Register 0 - AES Inverse Column Operation command\&.\&.General Purpose Register 8 - AES Inverse Column Operation command"

.in +1c
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA0_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA0_SHIFT\fP)) & \fBCAU_AESIC_CA_CA0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA1_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA1_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA1_SHIFT\fP)) & \fBCAU_AESIC_CA_CA1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA2_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA2_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA2_SHIFT\fP)) & \fBCAU_AESIC_CA_CA2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA3_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA3_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA3_SHIFT\fP)) & \fBCAU_AESIC_CA_CA3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA4_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA4_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA4_SHIFT\fP)) & \fBCAU_AESIC_CA_CA4_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA5_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA5_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA5\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA5_SHIFT\fP)) & \fBCAU_AESIC_CA_CA5_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA6_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA6_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA6\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA6_SHIFT\fP)) & \fBCAU_AESIC_CA_CA6_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA7_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA7_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA7\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA7_SHIFT\fP)) & \fBCAU_AESIC_CA_CA7_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA8_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA8_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_CA8\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA8_SHIFT\fP)) & \fBCAU_AESIC_CA_CA8_MASK\fP)"
.br
.ti -1c
.RI "#define \fBCAU_AESIC_CA_COUNT\fP   (9U)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define CAU   ((\fBCAU_Type\fP *)\fBCAU_BASE\fP)"
Peripheral CAU base pointer 
.SS "#define CAU_ADR_CA_CA0(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA0_SHIFT\fP)) & \fBCAU_ADR_CA_CA0_MASK\fP)"

.SS "#define CAU_ADR_CA_CA0_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ADR_CA_CA0_SHIFT   (0U)"

.SS "#define CAU_ADR_CA_CA1(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA1_SHIFT\fP)) & \fBCAU_ADR_CA_CA1_MASK\fP)"

.SS "#define CAU_ADR_CA_CA1_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ADR_CA_CA1_SHIFT   (0U)"

.SS "#define CAU_ADR_CA_CA2(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA2_SHIFT\fP)) & \fBCAU_ADR_CA_CA2_MASK\fP)"

.SS "#define CAU_ADR_CA_CA2_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ADR_CA_CA2_SHIFT   (0U)"

.SS "#define CAU_ADR_CA_CA3(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA3_SHIFT\fP)) & \fBCAU_ADR_CA_CA3_MASK\fP)"

.SS "#define CAU_ADR_CA_CA3_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ADR_CA_CA3_SHIFT   (0U)"

.SS "#define CAU_ADR_CA_CA4(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA4_SHIFT\fP)) & \fBCAU_ADR_CA_CA4_MASK\fP)"

.SS "#define CAU_ADR_CA_CA4_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ADR_CA_CA4_SHIFT   (0U)"

.SS "#define CAU_ADR_CA_CA5(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA5_SHIFT\fP)) & \fBCAU_ADR_CA_CA5_MASK\fP)"

.SS "#define CAU_ADR_CA_CA5_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ADR_CA_CA5_SHIFT   (0U)"

.SS "#define CAU_ADR_CA_CA6(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA6_SHIFT\fP)) & \fBCAU_ADR_CA_CA6_MASK\fP)"

.SS "#define CAU_ADR_CA_CA6_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ADR_CA_CA6_SHIFT   (0U)"

.SS "#define CAU_ADR_CA_CA7(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA7_SHIFT\fP)) & \fBCAU_ADR_CA_CA7_MASK\fP)"

.SS "#define CAU_ADR_CA_CA7_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ADR_CA_CA7_SHIFT   (0U)"

.SS "#define CAU_ADR_CA_CA8(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CA_CA8_SHIFT\fP)) & \fBCAU_ADR_CA_CA8_MASK\fP)"

.SS "#define CAU_ADR_CA_CA8_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ADR_CA_CA8_SHIFT   (0U)"

.SS "#define CAU_ADR_CA_COUNT   (9U)"

.SS "#define CAU_ADR_CAA_ACC(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CAA_ACC_SHIFT\fP)) & \fBCAU_ADR_CAA_ACC_MASK\fP)"

.SS "#define CAU_ADR_CAA_ACC_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ADR_CAA_ACC_SHIFT   (0U)"

.SS "#define CAU_ADR_CASR_DPE(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CASR_DPE_SHIFT\fP)) & \fBCAU_ADR_CASR_DPE_MASK\fP)"

.SS "#define CAU_ADR_CASR_DPE_MASK   (0x2U)"

.SS "#define CAU_ADR_CASR_DPE_SHIFT   (1U)"

.SS "#define CAU_ADR_CASR_IC(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CASR_IC_SHIFT\fP)) & \fBCAU_ADR_CASR_IC_MASK\fP)"

.SS "#define CAU_ADR_CASR_IC_MASK   (0x1U)"

.SS "#define CAU_ADR_CASR_IC_SHIFT   (0U)"

.SS "#define CAU_ADR_CASR_VER(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ADR_CASR_VER_SHIFT\fP)) & \fBCAU_ADR_CASR_VER_MASK\fP)"

.SS "#define CAU_ADR_CASR_VER_MASK   (0xF0000000U)"

.SS "#define CAU_ADR_CASR_VER_SHIFT   (28U)"

.SS "#define CAU_AESC_CA_CA0(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA0_SHIFT\fP)) & \fBCAU_AESC_CA_CA0_MASK\fP)"

.SS "#define CAU_AESC_CA_CA0_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESC_CA_CA0_SHIFT   (0U)"

.SS "#define CAU_AESC_CA_CA1(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA1_SHIFT\fP)) & \fBCAU_AESC_CA_CA1_MASK\fP)"

.SS "#define CAU_AESC_CA_CA1_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESC_CA_CA1_SHIFT   (0U)"

.SS "#define CAU_AESC_CA_CA2(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA2_SHIFT\fP)) & \fBCAU_AESC_CA_CA2_MASK\fP)"

.SS "#define CAU_AESC_CA_CA2_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESC_CA_CA2_SHIFT   (0U)"

.SS "#define CAU_AESC_CA_CA3(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA3_SHIFT\fP)) & \fBCAU_AESC_CA_CA3_MASK\fP)"

.SS "#define CAU_AESC_CA_CA3_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESC_CA_CA3_SHIFT   (0U)"

.SS "#define CAU_AESC_CA_CA4(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA4_SHIFT\fP)) & \fBCAU_AESC_CA_CA4_MASK\fP)"

.SS "#define CAU_AESC_CA_CA4_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESC_CA_CA4_SHIFT   (0U)"

.SS "#define CAU_AESC_CA_CA5(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA5_SHIFT\fP)) & \fBCAU_AESC_CA_CA5_MASK\fP)"

.SS "#define CAU_AESC_CA_CA5_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESC_CA_CA5_SHIFT   (0U)"

.SS "#define CAU_AESC_CA_CA6(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA6_SHIFT\fP)) & \fBCAU_AESC_CA_CA6_MASK\fP)"

.SS "#define CAU_AESC_CA_CA6_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESC_CA_CA6_SHIFT   (0U)"

.SS "#define CAU_AESC_CA_CA7(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA7_SHIFT\fP)) & \fBCAU_AESC_CA_CA7_MASK\fP)"

.SS "#define CAU_AESC_CA_CA7_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESC_CA_CA7_SHIFT   (0U)"

.SS "#define CAU_AESC_CA_CA8(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CA_CA8_SHIFT\fP)) & \fBCAU_AESC_CA_CA8_MASK\fP)"

.SS "#define CAU_AESC_CA_CA8_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESC_CA_CA8_SHIFT   (0U)"

.SS "#define CAU_AESC_CA_COUNT   (9U)"

.SS "#define CAU_AESC_CAA_ACC(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CAA_ACC_SHIFT\fP)) & \fBCAU_AESC_CAA_ACC_MASK\fP)"

.SS "#define CAU_AESC_CAA_ACC_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESC_CAA_ACC_SHIFT   (0U)"

.SS "#define CAU_AESC_CASR_DPE(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CASR_DPE_SHIFT\fP)) & \fBCAU_AESC_CASR_DPE_MASK\fP)"

.SS "#define CAU_AESC_CASR_DPE_MASK   (0x2U)"

.SS "#define CAU_AESC_CASR_DPE_SHIFT   (1U)"

.SS "#define CAU_AESC_CASR_IC(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CASR_IC_SHIFT\fP)) & \fBCAU_AESC_CASR_IC_MASK\fP)"

.SS "#define CAU_AESC_CASR_IC_MASK   (0x1U)"

.SS "#define CAU_AESC_CASR_IC_SHIFT   (0U)"

.SS "#define CAU_AESC_CASR_VER(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESC_CASR_VER_SHIFT\fP)) & \fBCAU_AESC_CASR_VER_MASK\fP)"

.SS "#define CAU_AESC_CASR_VER_MASK   (0xF0000000U)"

.SS "#define CAU_AESC_CASR_VER_SHIFT   (28U)"

.SS "#define CAU_AESIC_CA_CA0(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA0_SHIFT\fP)) & \fBCAU_AESIC_CA_CA0_MASK\fP)"

.SS "#define CAU_AESIC_CA_CA0_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESIC_CA_CA0_SHIFT   (0U)"

.SS "#define CAU_AESIC_CA_CA1(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA1_SHIFT\fP)) & \fBCAU_AESIC_CA_CA1_MASK\fP)"

.SS "#define CAU_AESIC_CA_CA1_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESIC_CA_CA1_SHIFT   (0U)"

.SS "#define CAU_AESIC_CA_CA2(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA2_SHIFT\fP)) & \fBCAU_AESIC_CA_CA2_MASK\fP)"

.SS "#define CAU_AESIC_CA_CA2_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESIC_CA_CA2_SHIFT   (0U)"

.SS "#define CAU_AESIC_CA_CA3(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA3_SHIFT\fP)) & \fBCAU_AESIC_CA_CA3_MASK\fP)"

.SS "#define CAU_AESIC_CA_CA3_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESIC_CA_CA3_SHIFT   (0U)"

.SS "#define CAU_AESIC_CA_CA4(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA4_SHIFT\fP)) & \fBCAU_AESIC_CA_CA4_MASK\fP)"

.SS "#define CAU_AESIC_CA_CA4_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESIC_CA_CA4_SHIFT   (0U)"

.SS "#define CAU_AESIC_CA_CA5(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA5_SHIFT\fP)) & \fBCAU_AESIC_CA_CA5_MASK\fP)"

.SS "#define CAU_AESIC_CA_CA5_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESIC_CA_CA5_SHIFT   (0U)"

.SS "#define CAU_AESIC_CA_CA6(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA6_SHIFT\fP)) & \fBCAU_AESIC_CA_CA6_MASK\fP)"

.SS "#define CAU_AESIC_CA_CA6_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESIC_CA_CA6_SHIFT   (0U)"

.SS "#define CAU_AESIC_CA_CA7(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA7_SHIFT\fP)) & \fBCAU_AESIC_CA_CA7_MASK\fP)"

.SS "#define CAU_AESIC_CA_CA7_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESIC_CA_CA7_SHIFT   (0U)"

.SS "#define CAU_AESIC_CA_CA8(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CA_CA8_SHIFT\fP)) & \fBCAU_AESIC_CA_CA8_MASK\fP)"

.SS "#define CAU_AESIC_CA_CA8_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESIC_CA_CA8_SHIFT   (0U)"

.SS "#define CAU_AESIC_CA_COUNT   (9U)"

.SS "#define CAU_AESIC_CAA_ACC(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CAA_ACC_SHIFT\fP)) & \fBCAU_AESIC_CAA_ACC_MASK\fP)"

.SS "#define CAU_AESIC_CAA_ACC_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_AESIC_CAA_ACC_SHIFT   (0U)"

.SS "#define CAU_AESIC_CASR_DPE(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CASR_DPE_SHIFT\fP)) & \fBCAU_AESIC_CASR_DPE_MASK\fP)"

.SS "#define CAU_AESIC_CASR_DPE_MASK   (0x2U)"

.SS "#define CAU_AESIC_CASR_DPE_SHIFT   (1U)"

.SS "#define CAU_AESIC_CASR_IC(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CASR_IC_SHIFT\fP)) & \fBCAU_AESIC_CASR_IC_MASK\fP)"

.SS "#define CAU_AESIC_CASR_IC_MASK   (0x1U)"

.SS "#define CAU_AESIC_CASR_IC_SHIFT   (0U)"

.SS "#define CAU_AESIC_CASR_VER(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_AESIC_CASR_VER_SHIFT\fP)) & \fBCAU_AESIC_CASR_VER_MASK\fP)"

.SS "#define CAU_AESIC_CASR_VER_MASK   (0xF0000000U)"

.SS "#define CAU_AESIC_CASR_VER_SHIFT   (28U)"

.SS "#define CAU_BASE   (0xE0081000u)"
Peripheral CAU base address 
.SS "#define CAU_BASE_ADDRS   { \fBCAU_BASE\fP }"
Array initializer of CAU peripheral base addresses 
.SS "#define CAU_BASE_PTRS   { \fBCAU\fP }"
Array initializer of CAU peripheral base pointers 
.SS "#define CAU_DIRECT_CAU_DIRECT0(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT0_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT0_MASK\fP)"

.SS "#define CAU_DIRECT_CAU_DIRECT0_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_DIRECT_CAU_DIRECT0_SHIFT   (0U)"

.SS "#define CAU_DIRECT_CAU_DIRECT1(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT1_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT1_MASK\fP)"

.SS "#define CAU_DIRECT_CAU_DIRECT10(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT10_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT10_MASK\fP)"

.SS "#define CAU_DIRECT_CAU_DIRECT10_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_DIRECT_CAU_DIRECT10_SHIFT   (0U)"

.SS "#define CAU_DIRECT_CAU_DIRECT11(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT11_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT11_MASK\fP)"

.SS "#define CAU_DIRECT_CAU_DIRECT11_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_DIRECT_CAU_DIRECT11_SHIFT   (0U)"

.SS "#define CAU_DIRECT_CAU_DIRECT12(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT12_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT12_MASK\fP)"

.SS "#define CAU_DIRECT_CAU_DIRECT12_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_DIRECT_CAU_DIRECT12_SHIFT   (0U)"

.SS "#define CAU_DIRECT_CAU_DIRECT13(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT13_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT13_MASK\fP)"

.SS "#define CAU_DIRECT_CAU_DIRECT13_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_DIRECT_CAU_DIRECT13_SHIFT   (0U)"

.SS "#define CAU_DIRECT_CAU_DIRECT14(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT14_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT14_MASK\fP)"

.SS "#define CAU_DIRECT_CAU_DIRECT14_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_DIRECT_CAU_DIRECT14_SHIFT   (0U)"

.SS "#define CAU_DIRECT_CAU_DIRECT15(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT15_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT15_MASK\fP)"

.SS "#define CAU_DIRECT_CAU_DIRECT15_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_DIRECT_CAU_DIRECT15_SHIFT   (0U)"

.SS "#define CAU_DIRECT_CAU_DIRECT1_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_DIRECT_CAU_DIRECT1_SHIFT   (0U)"

.SS "#define CAU_DIRECT_CAU_DIRECT2(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT2_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT2_MASK\fP)"

.SS "#define CAU_DIRECT_CAU_DIRECT2_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_DIRECT_CAU_DIRECT2_SHIFT   (0U)"

.SS "#define CAU_DIRECT_CAU_DIRECT3(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT3_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT3_MASK\fP)"

.SS "#define CAU_DIRECT_CAU_DIRECT3_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_DIRECT_CAU_DIRECT3_SHIFT   (0U)"

.SS "#define CAU_DIRECT_CAU_DIRECT4(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT4_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT4_MASK\fP)"

.SS "#define CAU_DIRECT_CAU_DIRECT4_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_DIRECT_CAU_DIRECT4_SHIFT   (0U)"

.SS "#define CAU_DIRECT_CAU_DIRECT5(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT5_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT5_MASK\fP)"

.SS "#define CAU_DIRECT_CAU_DIRECT5_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_DIRECT_CAU_DIRECT5_SHIFT   (0U)"

.SS "#define CAU_DIRECT_CAU_DIRECT6(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT6_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT6_MASK\fP)"

.SS "#define CAU_DIRECT_CAU_DIRECT6_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_DIRECT_CAU_DIRECT6_SHIFT   (0U)"

.SS "#define CAU_DIRECT_CAU_DIRECT7(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT7_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT7_MASK\fP)"

.SS "#define CAU_DIRECT_CAU_DIRECT7_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_DIRECT_CAU_DIRECT7_SHIFT   (0U)"

.SS "#define CAU_DIRECT_CAU_DIRECT8(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT8_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT8_MASK\fP)"

.SS "#define CAU_DIRECT_CAU_DIRECT8_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_DIRECT_CAU_DIRECT8_SHIFT   (0U)"

.SS "#define CAU_DIRECT_CAU_DIRECT9(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_DIRECT_CAU_DIRECT9_SHIFT\fP)) & \fBCAU_DIRECT_CAU_DIRECT9_MASK\fP)"

.SS "#define CAU_DIRECT_CAU_DIRECT9_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_DIRECT_CAU_DIRECT9_SHIFT   (0U)"

.SS "#define CAU_DIRECT_COUNT   (16U)"

.SS "#define CAU_LDR_CA_CA0(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA0_SHIFT\fP)) & \fBCAU_LDR_CA_CA0_MASK\fP)"

.SS "#define CAU_LDR_CA_CA0_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_LDR_CA_CA0_SHIFT   (0U)"

.SS "#define CAU_LDR_CA_CA1(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA1_SHIFT\fP)) & \fBCAU_LDR_CA_CA1_MASK\fP)"

.SS "#define CAU_LDR_CA_CA1_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_LDR_CA_CA1_SHIFT   (0U)"

.SS "#define CAU_LDR_CA_CA2(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA2_SHIFT\fP)) & \fBCAU_LDR_CA_CA2_MASK\fP)"

.SS "#define CAU_LDR_CA_CA2_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_LDR_CA_CA2_SHIFT   (0U)"

.SS "#define CAU_LDR_CA_CA3(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA3_SHIFT\fP)) & \fBCAU_LDR_CA_CA3_MASK\fP)"

.SS "#define CAU_LDR_CA_CA3_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_LDR_CA_CA3_SHIFT   (0U)"

.SS "#define CAU_LDR_CA_CA4(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA4_SHIFT\fP)) & \fBCAU_LDR_CA_CA4_MASK\fP)"

.SS "#define CAU_LDR_CA_CA4_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_LDR_CA_CA4_SHIFT   (0U)"

.SS "#define CAU_LDR_CA_CA5(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA5_SHIFT\fP)) & \fBCAU_LDR_CA_CA5_MASK\fP)"

.SS "#define CAU_LDR_CA_CA5_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_LDR_CA_CA5_SHIFT   (0U)"

.SS "#define CAU_LDR_CA_CA6(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA6_SHIFT\fP)) & \fBCAU_LDR_CA_CA6_MASK\fP)"

.SS "#define CAU_LDR_CA_CA6_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_LDR_CA_CA6_SHIFT   (0U)"

.SS "#define CAU_LDR_CA_CA7(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA7_SHIFT\fP)) & \fBCAU_LDR_CA_CA7_MASK\fP)"

.SS "#define CAU_LDR_CA_CA7_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_LDR_CA_CA7_SHIFT   (0U)"

.SS "#define CAU_LDR_CA_CA8(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CA_CA8_SHIFT\fP)) & \fBCAU_LDR_CA_CA8_MASK\fP)"

.SS "#define CAU_LDR_CA_CA8_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_LDR_CA_CA8_SHIFT   (0U)"

.SS "#define CAU_LDR_CA_COUNT   (9U)"

.SS "#define CAU_LDR_CAA_ACC(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CAA_ACC_SHIFT\fP)) & \fBCAU_LDR_CAA_ACC_MASK\fP)"

.SS "#define CAU_LDR_CAA_ACC_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_LDR_CAA_ACC_SHIFT   (0U)"

.SS "#define CAU_LDR_CASR_DPE(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CASR_DPE_SHIFT\fP)) & \fBCAU_LDR_CASR_DPE_MASK\fP)"

.SS "#define CAU_LDR_CASR_DPE_MASK   (0x2U)"

.SS "#define CAU_LDR_CASR_DPE_SHIFT   (1U)"

.SS "#define CAU_LDR_CASR_IC(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CASR_IC_SHIFT\fP)) & \fBCAU_LDR_CASR_IC_MASK\fP)"

.SS "#define CAU_LDR_CASR_IC_MASK   (0x1U)"

.SS "#define CAU_LDR_CASR_IC_SHIFT   (0U)"

.SS "#define CAU_LDR_CASR_VER(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_LDR_CASR_VER_SHIFT\fP)) & \fBCAU_LDR_CASR_VER_MASK\fP)"

.SS "#define CAU_LDR_CASR_VER_MASK   (0xF0000000U)"

.SS "#define CAU_LDR_CASR_VER_SHIFT   (28U)"

.SS "#define CAU_RADR_CA_CA0(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA0_SHIFT\fP)) & \fBCAU_RADR_CA_CA0_MASK\fP)"

.SS "#define CAU_RADR_CA_CA0_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_RADR_CA_CA0_SHIFT   (0U)"

.SS "#define CAU_RADR_CA_CA1(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA1_SHIFT\fP)) & \fBCAU_RADR_CA_CA1_MASK\fP)"

.SS "#define CAU_RADR_CA_CA1_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_RADR_CA_CA1_SHIFT   (0U)"

.SS "#define CAU_RADR_CA_CA2(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA2_SHIFT\fP)) & \fBCAU_RADR_CA_CA2_MASK\fP)"

.SS "#define CAU_RADR_CA_CA2_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_RADR_CA_CA2_SHIFT   (0U)"

.SS "#define CAU_RADR_CA_CA3(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA3_SHIFT\fP)) & \fBCAU_RADR_CA_CA3_MASK\fP)"

.SS "#define CAU_RADR_CA_CA3_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_RADR_CA_CA3_SHIFT   (0U)"

.SS "#define CAU_RADR_CA_CA4(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA4_SHIFT\fP)) & \fBCAU_RADR_CA_CA4_MASK\fP)"

.SS "#define CAU_RADR_CA_CA4_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_RADR_CA_CA4_SHIFT   (0U)"

.SS "#define CAU_RADR_CA_CA5(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA5_SHIFT\fP)) & \fBCAU_RADR_CA_CA5_MASK\fP)"

.SS "#define CAU_RADR_CA_CA5_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_RADR_CA_CA5_SHIFT   (0U)"

.SS "#define CAU_RADR_CA_CA6(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA6_SHIFT\fP)) & \fBCAU_RADR_CA_CA6_MASK\fP)"

.SS "#define CAU_RADR_CA_CA6_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_RADR_CA_CA6_SHIFT   (0U)"

.SS "#define CAU_RADR_CA_CA7(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA7_SHIFT\fP)) & \fBCAU_RADR_CA_CA7_MASK\fP)"

.SS "#define CAU_RADR_CA_CA7_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_RADR_CA_CA7_SHIFT   (0U)"

.SS "#define CAU_RADR_CA_CA8(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CA_CA8_SHIFT\fP)) & \fBCAU_RADR_CA_CA8_MASK\fP)"

.SS "#define CAU_RADR_CA_CA8_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_RADR_CA_CA8_SHIFT   (0U)"

.SS "#define CAU_RADR_CA_COUNT   (9U)"

.SS "#define CAU_RADR_CAA_ACC(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CAA_ACC_SHIFT\fP)) & \fBCAU_RADR_CAA_ACC_MASK\fP)"

.SS "#define CAU_RADR_CAA_ACC_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_RADR_CAA_ACC_SHIFT   (0U)"

.SS "#define CAU_RADR_CASR_DPE(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CASR_DPE_SHIFT\fP)) & \fBCAU_RADR_CASR_DPE_MASK\fP)"

.SS "#define CAU_RADR_CASR_DPE_MASK   (0x2U)"

.SS "#define CAU_RADR_CASR_DPE_SHIFT   (1U)"

.SS "#define CAU_RADR_CASR_IC(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CASR_IC_SHIFT\fP)) & \fBCAU_RADR_CASR_IC_MASK\fP)"

.SS "#define CAU_RADR_CASR_IC_MASK   (0x1U)"

.SS "#define CAU_RADR_CASR_IC_SHIFT   (0U)"

.SS "#define CAU_RADR_CASR_VER(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_RADR_CASR_VER_SHIFT\fP)) & \fBCAU_RADR_CASR_VER_MASK\fP)"

.SS "#define CAU_RADR_CASR_VER_MASK   (0xF0000000U)"

.SS "#define CAU_RADR_CASR_VER_SHIFT   (28U)"

.SS "#define CAU_ROTL_CA_CA0(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA0_SHIFT\fP)) & \fBCAU_ROTL_CA_CA0_MASK\fP)"

.SS "#define CAU_ROTL_CA_CA0_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ROTL_CA_CA0_SHIFT   (0U)"

.SS "#define CAU_ROTL_CA_CA1(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA1_SHIFT\fP)) & \fBCAU_ROTL_CA_CA1_MASK\fP)"

.SS "#define CAU_ROTL_CA_CA1_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ROTL_CA_CA1_SHIFT   (0U)"

.SS "#define CAU_ROTL_CA_CA2(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA2_SHIFT\fP)) & \fBCAU_ROTL_CA_CA2_MASK\fP)"

.SS "#define CAU_ROTL_CA_CA2_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ROTL_CA_CA2_SHIFT   (0U)"

.SS "#define CAU_ROTL_CA_CA3(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA3_SHIFT\fP)) & \fBCAU_ROTL_CA_CA3_MASK\fP)"

.SS "#define CAU_ROTL_CA_CA3_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ROTL_CA_CA3_SHIFT   (0U)"

.SS "#define CAU_ROTL_CA_CA4(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA4_SHIFT\fP)) & \fBCAU_ROTL_CA_CA4_MASK\fP)"

.SS "#define CAU_ROTL_CA_CA4_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ROTL_CA_CA4_SHIFT   (0U)"

.SS "#define CAU_ROTL_CA_CA5(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA5_SHIFT\fP)) & \fBCAU_ROTL_CA_CA5_MASK\fP)"

.SS "#define CAU_ROTL_CA_CA5_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ROTL_CA_CA5_SHIFT   (0U)"

.SS "#define CAU_ROTL_CA_CA6(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA6_SHIFT\fP)) & \fBCAU_ROTL_CA_CA6_MASK\fP)"

.SS "#define CAU_ROTL_CA_CA6_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ROTL_CA_CA6_SHIFT   (0U)"

.SS "#define CAU_ROTL_CA_CA7(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA7_SHIFT\fP)) & \fBCAU_ROTL_CA_CA7_MASK\fP)"

.SS "#define CAU_ROTL_CA_CA7_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ROTL_CA_CA7_SHIFT   (0U)"

.SS "#define CAU_ROTL_CA_CA8(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CA_CA8_SHIFT\fP)) & \fBCAU_ROTL_CA_CA8_MASK\fP)"

.SS "#define CAU_ROTL_CA_CA8_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ROTL_CA_CA8_SHIFT   (0U)"

.SS "#define CAU_ROTL_CA_COUNT   (9U)"

.SS "#define CAU_ROTL_CAA_ACC(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CAA_ACC_SHIFT\fP)) & \fBCAU_ROTL_CAA_ACC_MASK\fP)"

.SS "#define CAU_ROTL_CAA_ACC_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_ROTL_CAA_ACC_SHIFT   (0U)"

.SS "#define CAU_ROTL_CASR_DPE(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CASR_DPE_SHIFT\fP)) & \fBCAU_ROTL_CASR_DPE_MASK\fP)"

.SS "#define CAU_ROTL_CASR_DPE_MASK   (0x2U)"

.SS "#define CAU_ROTL_CASR_DPE_SHIFT   (1U)"

.SS "#define CAU_ROTL_CASR_IC(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CASR_IC_SHIFT\fP)) & \fBCAU_ROTL_CASR_IC_MASK\fP)"

.SS "#define CAU_ROTL_CASR_IC_MASK   (0x1U)"

.SS "#define CAU_ROTL_CASR_IC_SHIFT   (0U)"

.SS "#define CAU_ROTL_CASR_VER(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_ROTL_CASR_VER_SHIFT\fP)) & \fBCAU_ROTL_CASR_VER_MASK\fP)"

.SS "#define CAU_ROTL_CASR_VER_MASK   (0xF0000000U)"

.SS "#define CAU_ROTL_CASR_VER_SHIFT   (28U)"

.SS "#define CAU_STR_CA_CA0(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA0_SHIFT\fP)) & \fBCAU_STR_CA_CA0_MASK\fP)"

.SS "#define CAU_STR_CA_CA0_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_STR_CA_CA0_SHIFT   (0U)"

.SS "#define CAU_STR_CA_CA1(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA1_SHIFT\fP)) & \fBCAU_STR_CA_CA1_MASK\fP)"

.SS "#define CAU_STR_CA_CA1_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_STR_CA_CA1_SHIFT   (0U)"

.SS "#define CAU_STR_CA_CA2(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA2_SHIFT\fP)) & \fBCAU_STR_CA_CA2_MASK\fP)"

.SS "#define CAU_STR_CA_CA2_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_STR_CA_CA2_SHIFT   (0U)"

.SS "#define CAU_STR_CA_CA3(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA3_SHIFT\fP)) & \fBCAU_STR_CA_CA3_MASK\fP)"

.SS "#define CAU_STR_CA_CA3_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_STR_CA_CA3_SHIFT   (0U)"

.SS "#define CAU_STR_CA_CA4(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA4_SHIFT\fP)) & \fBCAU_STR_CA_CA4_MASK\fP)"

.SS "#define CAU_STR_CA_CA4_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_STR_CA_CA4_SHIFT   (0U)"

.SS "#define CAU_STR_CA_CA5(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA5_SHIFT\fP)) & \fBCAU_STR_CA_CA5_MASK\fP)"

.SS "#define CAU_STR_CA_CA5_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_STR_CA_CA5_SHIFT   (0U)"

.SS "#define CAU_STR_CA_CA6(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA6_SHIFT\fP)) & \fBCAU_STR_CA_CA6_MASK\fP)"

.SS "#define CAU_STR_CA_CA6_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_STR_CA_CA6_SHIFT   (0U)"

.SS "#define CAU_STR_CA_CA7(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA7_SHIFT\fP)) & \fBCAU_STR_CA_CA7_MASK\fP)"

.SS "#define CAU_STR_CA_CA7_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_STR_CA_CA7_SHIFT   (0U)"

.SS "#define CAU_STR_CA_CA8(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CA_CA8_SHIFT\fP)) & \fBCAU_STR_CA_CA8_MASK\fP)"

.SS "#define CAU_STR_CA_CA8_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_STR_CA_CA8_SHIFT   (0U)"

.SS "#define CAU_STR_CA_COUNT   (9U)"

.SS "#define CAU_STR_CAA_ACC(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CAA_ACC_SHIFT\fP)) & \fBCAU_STR_CAA_ACC_MASK\fP)"

.SS "#define CAU_STR_CAA_ACC_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_STR_CAA_ACC_SHIFT   (0U)"

.SS "#define CAU_STR_CASR_DPE(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CASR_DPE_SHIFT\fP)) & \fBCAU_STR_CASR_DPE_MASK\fP)"

.SS "#define CAU_STR_CASR_DPE_MASK   (0x2U)"

.SS "#define CAU_STR_CASR_DPE_SHIFT   (1U)"

.SS "#define CAU_STR_CASR_IC(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CASR_IC_SHIFT\fP)) & \fBCAU_STR_CASR_IC_MASK\fP)"

.SS "#define CAU_STR_CASR_IC_MASK   (0x1U)"

.SS "#define CAU_STR_CASR_IC_SHIFT   (0U)"

.SS "#define CAU_STR_CASR_VER(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_STR_CASR_VER_SHIFT\fP)) & \fBCAU_STR_CASR_VER_MASK\fP)"

.SS "#define CAU_STR_CASR_VER_MASK   (0xF0000000U)"

.SS "#define CAU_STR_CASR_VER_SHIFT   (28U)"

.SS "#define CAU_XOR_CA_CA0(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA0_SHIFT\fP)) & \fBCAU_XOR_CA_CA0_MASK\fP)"

.SS "#define CAU_XOR_CA_CA0_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_XOR_CA_CA0_SHIFT   (0U)"

.SS "#define CAU_XOR_CA_CA1(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA1_SHIFT\fP)) & \fBCAU_XOR_CA_CA1_MASK\fP)"

.SS "#define CAU_XOR_CA_CA1_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_XOR_CA_CA1_SHIFT   (0U)"

.SS "#define CAU_XOR_CA_CA2(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA2_SHIFT\fP)) & \fBCAU_XOR_CA_CA2_MASK\fP)"

.SS "#define CAU_XOR_CA_CA2_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_XOR_CA_CA2_SHIFT   (0U)"

.SS "#define CAU_XOR_CA_CA3(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA3_SHIFT\fP)) & \fBCAU_XOR_CA_CA3_MASK\fP)"

.SS "#define CAU_XOR_CA_CA3_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_XOR_CA_CA3_SHIFT   (0U)"

.SS "#define CAU_XOR_CA_CA4(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA4_SHIFT\fP)) & \fBCAU_XOR_CA_CA4_MASK\fP)"

.SS "#define CAU_XOR_CA_CA4_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_XOR_CA_CA4_SHIFT   (0U)"

.SS "#define CAU_XOR_CA_CA5(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA5_SHIFT\fP)) & \fBCAU_XOR_CA_CA5_MASK\fP)"

.SS "#define CAU_XOR_CA_CA5_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_XOR_CA_CA5_SHIFT   (0U)"

.SS "#define CAU_XOR_CA_CA6(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA6_SHIFT\fP)) & \fBCAU_XOR_CA_CA6_MASK\fP)"

.SS "#define CAU_XOR_CA_CA6_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_XOR_CA_CA6_SHIFT   (0U)"

.SS "#define CAU_XOR_CA_CA7(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA7_SHIFT\fP)) & \fBCAU_XOR_CA_CA7_MASK\fP)"

.SS "#define CAU_XOR_CA_CA7_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_XOR_CA_CA7_SHIFT   (0U)"

.SS "#define CAU_XOR_CA_CA8(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CA_CA8_SHIFT\fP)) & \fBCAU_XOR_CA_CA8_MASK\fP)"

.SS "#define CAU_XOR_CA_CA8_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_XOR_CA_CA8_SHIFT   (0U)"

.SS "#define CAU_XOR_CA_COUNT   (9U)"

.SS "#define CAU_XOR_CAA_ACC(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CAA_ACC_SHIFT\fP)) & \fBCAU_XOR_CAA_ACC_MASK\fP)"

.SS "#define CAU_XOR_CAA_ACC_MASK   (0xFFFFFFFFU)"

.SS "#define CAU_XOR_CAA_ACC_SHIFT   (0U)"

.SS "#define CAU_XOR_CASR_DPE(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CASR_DPE_SHIFT\fP)) & \fBCAU_XOR_CASR_DPE_MASK\fP)"

.SS "#define CAU_XOR_CASR_DPE_MASK   (0x2U)"

.SS "#define CAU_XOR_CASR_DPE_SHIFT   (1U)"

.SS "#define CAU_XOR_CASR_IC(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CASR_IC_SHIFT\fP)) & \fBCAU_XOR_CASR_IC_MASK\fP)"

.SS "#define CAU_XOR_CASR_IC_MASK   (0x1U)"

.SS "#define CAU_XOR_CASR_IC_SHIFT   (0U)"

.SS "#define CAU_XOR_CASR_VER(x)   (((uint32_t)(((uint32_t)(x)) << \fBCAU_XOR_CASR_VER_SHIFT\fP)) & \fBCAU_XOR_CASR_VER_MASK\fP)"

.SS "#define CAU_XOR_CASR_VER_MASK   (0xF0000000U)"

.SS "#define CAU_XOR_CASR_VER_SHIFT   (28U)"

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
