.TH "AXBS_Register_Masks" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AXBS_Register_Masks
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBAXBS_BASE\fP   (0x40004000u)"
.br
.ti -1c
.RI "#define \fBAXBS\fP   ((\fBAXBS_Type\fP *)\fBAXBS_BASE\fP)"
.br
.ti -1c
.RI "#define \fBAXBS_BASE_ADDRS\fP   { \fBAXBS_BASE\fP }"
.br
.ti -1c
.RI "#define \fBAXBS_BASE_PTRS\fP   { \fBAXBS\fP }"
.br
.in -1c
.SS "PRS - Priority Registers Slave"

.in +1c
.ti -1c
.RI "#define \fBAXBS_PRS_M0_MASK\fP   (0x7U)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_PRS_M0_SHIFT\fP)) & \fBAXBS_PRS_M0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M1_MASK\fP   (0x70U)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M1_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_PRS_M1_SHIFT\fP)) & \fBAXBS_PRS_M1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M2_MASK\fP   (0x700U)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M2_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_PRS_M2_SHIFT\fP)) & \fBAXBS_PRS_M2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M3_MASK\fP   (0x7000U)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M3_SHIFT\fP   (12U)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_PRS_M3_SHIFT\fP)) & \fBAXBS_PRS_M3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M4_MASK\fP   (0x70000U)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M4_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_PRS_M4_SHIFT\fP)) & \fBAXBS_PRS_M4_MASK\fP)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M5_MASK\fP   (0x700000U)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M5_SHIFT\fP   (20U)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_M5\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_PRS_M5_SHIFT\fP)) & \fBAXBS_PRS_M5_MASK\fP)"
.br
.ti -1c
.RI "#define \fBAXBS_PRS_COUNT\fP   (5U)"
.br
.in -1c
.SS "CRS - Control Register"

.in +1c
.ti -1c
.RI "#define \fBAXBS_CRS_PARK_MASK\fP   (0x7U)"
.br
.ti -1c
.RI "#define \fBAXBS_CRS_PARK_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBAXBS_CRS_PARK\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_CRS_PARK_SHIFT\fP)) & \fBAXBS_CRS_PARK_MASK\fP)"
.br
.ti -1c
.RI "#define \fBAXBS_CRS_PCTL_MASK\fP   (0x30U)"
.br
.ti -1c
.RI "#define \fBAXBS_CRS_PCTL_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBAXBS_CRS_PCTL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_CRS_PCTL_SHIFT\fP)) & \fBAXBS_CRS_PCTL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBAXBS_CRS_ARB_MASK\fP   (0x300U)"
.br
.ti -1c
.RI "#define \fBAXBS_CRS_ARB_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBAXBS_CRS_ARB\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_CRS_ARB_SHIFT\fP)) & \fBAXBS_CRS_ARB_MASK\fP)"
.br
.ti -1c
.RI "#define \fBAXBS_CRS_HLP_MASK\fP   (0x40000000U)"
.br
.ti -1c
.RI "#define \fBAXBS_CRS_HLP_SHIFT\fP   (30U)"
.br
.ti -1c
.RI "#define \fBAXBS_CRS_HLP\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_CRS_HLP_SHIFT\fP)) & \fBAXBS_CRS_HLP_MASK\fP)"
.br
.ti -1c
.RI "#define \fBAXBS_CRS_RO_MASK\fP   (0x80000000U)"
.br
.ti -1c
.RI "#define \fBAXBS_CRS_RO_SHIFT\fP   (31U)"
.br
.ti -1c
.RI "#define \fBAXBS_CRS_RO\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_CRS_RO_SHIFT\fP)) & \fBAXBS_CRS_RO_MASK\fP)"
.br
.ti -1c
.RI "#define \fBAXBS_CRS_COUNT\fP   (5U)"
.br
.in -1c
.SS "MGPCR0 - Master General Purpose Control Register"

.in +1c
.ti -1c
.RI "#define \fBAXBS_MGPCR0_AULB_MASK\fP   (0x7U)"
.br
.ti -1c
.RI "#define \fBAXBS_MGPCR0_AULB_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBAXBS_MGPCR0_AULB\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_MGPCR0_AULB_SHIFT\fP)) & \fBAXBS_MGPCR0_AULB_MASK\fP)"
.br
.in -1c
.SS "MGPCR1 - Master General Purpose Control Register"

.in +1c
.ti -1c
.RI "#define \fBAXBS_MGPCR1_AULB_MASK\fP   (0x7U)"
.br
.ti -1c
.RI "#define \fBAXBS_MGPCR1_AULB_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBAXBS_MGPCR1_AULB\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_MGPCR1_AULB_SHIFT\fP)) & \fBAXBS_MGPCR1_AULB_MASK\fP)"
.br
.in -1c
.SS "MGPCR2 - Master General Purpose Control Register"

.in +1c
.ti -1c
.RI "#define \fBAXBS_MGPCR2_AULB_MASK\fP   (0x7U)"
.br
.ti -1c
.RI "#define \fBAXBS_MGPCR2_AULB_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBAXBS_MGPCR2_AULB\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_MGPCR2_AULB_SHIFT\fP)) & \fBAXBS_MGPCR2_AULB_MASK\fP)"
.br
.in -1c
.SS "MGPCR3 - Master General Purpose Control Register"

.in +1c
.ti -1c
.RI "#define \fBAXBS_MGPCR3_AULB_MASK\fP   (0x7U)"
.br
.ti -1c
.RI "#define \fBAXBS_MGPCR3_AULB_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBAXBS_MGPCR3_AULB\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_MGPCR3_AULB_SHIFT\fP)) & \fBAXBS_MGPCR3_AULB_MASK\fP)"
.br
.in -1c
.SS "MGPCR4 - Master General Purpose Control Register"

.in +1c
.ti -1c
.RI "#define \fBAXBS_MGPCR4_AULB_MASK\fP   (0x7U)"
.br
.ti -1c
.RI "#define \fBAXBS_MGPCR4_AULB_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBAXBS_MGPCR4_AULB\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_MGPCR4_AULB_SHIFT\fP)) & \fBAXBS_MGPCR4_AULB_MASK\fP)"
.br
.in -1c
.SS "MGPCR5 - Master General Purpose Control Register"

.in +1c
.ti -1c
.RI "#define \fBAXBS_MGPCR5_AULB_MASK\fP   (0x7U)"
.br
.ti -1c
.RI "#define \fBAXBS_MGPCR5_AULB_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBAXBS_MGPCR5_AULB\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_MGPCR5_AULB_SHIFT\fP)) & \fBAXBS_MGPCR5_AULB_MASK\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define AXBS   ((\fBAXBS_Type\fP *)\fBAXBS_BASE\fP)"
Peripheral AXBS base pointer 
.SS "#define AXBS_BASE   (0x40004000u)"
Peripheral AXBS base address 
.SS "#define AXBS_BASE_ADDRS   { \fBAXBS_BASE\fP }"
Array initializer of AXBS peripheral base addresses 
.SS "#define AXBS_BASE_PTRS   { \fBAXBS\fP }"
Array initializer of AXBS peripheral base pointers 
.SS "#define AXBS_CRS_ARB(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_CRS_ARB_SHIFT\fP)) & \fBAXBS_CRS_ARB_MASK\fP)"

.SS "#define AXBS_CRS_ARB_MASK   (0x300U)"

.SS "#define AXBS_CRS_ARB_SHIFT   (8U)"

.SS "#define AXBS_CRS_COUNT   (5U)"

.SS "#define AXBS_CRS_HLP(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_CRS_HLP_SHIFT\fP)) & \fBAXBS_CRS_HLP_MASK\fP)"

.SS "#define AXBS_CRS_HLP_MASK   (0x40000000U)"

.SS "#define AXBS_CRS_HLP_SHIFT   (30U)"

.SS "#define AXBS_CRS_PARK(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_CRS_PARK_SHIFT\fP)) & \fBAXBS_CRS_PARK_MASK\fP)"

.SS "#define AXBS_CRS_PARK_MASK   (0x7U)"

.SS "#define AXBS_CRS_PARK_SHIFT   (0U)"

.SS "#define AXBS_CRS_PCTL(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_CRS_PCTL_SHIFT\fP)) & \fBAXBS_CRS_PCTL_MASK\fP)"

.SS "#define AXBS_CRS_PCTL_MASK   (0x30U)"

.SS "#define AXBS_CRS_PCTL_SHIFT   (4U)"

.SS "#define AXBS_CRS_RO(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_CRS_RO_SHIFT\fP)) & \fBAXBS_CRS_RO_MASK\fP)"

.SS "#define AXBS_CRS_RO_MASK   (0x80000000U)"

.SS "#define AXBS_CRS_RO_SHIFT   (31U)"

.SS "#define AXBS_MGPCR0_AULB(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_MGPCR0_AULB_SHIFT\fP)) & \fBAXBS_MGPCR0_AULB_MASK\fP)"

.SS "#define AXBS_MGPCR0_AULB_MASK   (0x7U)"

.SS "#define AXBS_MGPCR0_AULB_SHIFT   (0U)"

.SS "#define AXBS_MGPCR1_AULB(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_MGPCR1_AULB_SHIFT\fP)) & \fBAXBS_MGPCR1_AULB_MASK\fP)"

.SS "#define AXBS_MGPCR1_AULB_MASK   (0x7U)"

.SS "#define AXBS_MGPCR1_AULB_SHIFT   (0U)"

.SS "#define AXBS_MGPCR2_AULB(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_MGPCR2_AULB_SHIFT\fP)) & \fBAXBS_MGPCR2_AULB_MASK\fP)"

.SS "#define AXBS_MGPCR2_AULB_MASK   (0x7U)"

.SS "#define AXBS_MGPCR2_AULB_SHIFT   (0U)"

.SS "#define AXBS_MGPCR3_AULB(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_MGPCR3_AULB_SHIFT\fP)) & \fBAXBS_MGPCR3_AULB_MASK\fP)"

.SS "#define AXBS_MGPCR3_AULB_MASK   (0x7U)"

.SS "#define AXBS_MGPCR3_AULB_SHIFT   (0U)"

.SS "#define AXBS_MGPCR4_AULB(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_MGPCR4_AULB_SHIFT\fP)) & \fBAXBS_MGPCR4_AULB_MASK\fP)"

.SS "#define AXBS_MGPCR4_AULB_MASK   (0x7U)"

.SS "#define AXBS_MGPCR4_AULB_SHIFT   (0U)"

.SS "#define AXBS_MGPCR5_AULB(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_MGPCR5_AULB_SHIFT\fP)) & \fBAXBS_MGPCR5_AULB_MASK\fP)"

.SS "#define AXBS_MGPCR5_AULB_MASK   (0x7U)"

.SS "#define AXBS_MGPCR5_AULB_SHIFT   (0U)"

.SS "#define AXBS_PRS_COUNT   (5U)"

.SS "#define AXBS_PRS_M0(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_PRS_M0_SHIFT\fP)) & \fBAXBS_PRS_M0_MASK\fP)"

.SS "#define AXBS_PRS_M0_MASK   (0x7U)"

.SS "#define AXBS_PRS_M0_SHIFT   (0U)"

.SS "#define AXBS_PRS_M1(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_PRS_M1_SHIFT\fP)) & \fBAXBS_PRS_M1_MASK\fP)"

.SS "#define AXBS_PRS_M1_MASK   (0x70U)"

.SS "#define AXBS_PRS_M1_SHIFT   (4U)"

.SS "#define AXBS_PRS_M2(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_PRS_M2_SHIFT\fP)) & \fBAXBS_PRS_M2_MASK\fP)"

.SS "#define AXBS_PRS_M2_MASK   (0x700U)"

.SS "#define AXBS_PRS_M2_SHIFT   (8U)"

.SS "#define AXBS_PRS_M3(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_PRS_M3_SHIFT\fP)) & \fBAXBS_PRS_M3_MASK\fP)"

.SS "#define AXBS_PRS_M3_MASK   (0x7000U)"

.SS "#define AXBS_PRS_M3_SHIFT   (12U)"

.SS "#define AXBS_PRS_M4(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_PRS_M4_SHIFT\fP)) & \fBAXBS_PRS_M4_MASK\fP)"

.SS "#define AXBS_PRS_M4_MASK   (0x70000U)"

.SS "#define AXBS_PRS_M4_SHIFT   (16U)"

.SS "#define AXBS_PRS_M5(x)   (((uint32_t)(((uint32_t)(x)) << \fBAXBS_PRS_M5_SHIFT\fP)) & \fBAXBS_PRS_M5_MASK\fP)"

.SS "#define AXBS_PRS_M5_MASK   (0x700000U)"

.SS "#define AXBS_PRS_M5_SHIFT   (20U)"

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
