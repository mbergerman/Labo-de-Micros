.TH "USBDCD_Register_Masks" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
USBDCD_Register_Masks
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBUSBDCD_BASE\fP   (0x40035000u)"
.br
.ti -1c
.RI "#define \fBUSBDCD\fP   ((\fBUSBDCD_Type\fP *)\fBUSBDCD_BASE\fP)"
.br
.ti -1c
.RI "#define \fBUSBDCD_BASE_ADDRS\fP   { \fBUSBDCD_BASE\fP }"
.br
.ti -1c
.RI "#define \fBUSBDCD_BASE_PTRS\fP   { \fBUSBDCD\fP }"
.br
.ti -1c
.RI "#define \fBUSBDCD_IRQS\fP   { \fBUSBDCD_IRQn\fP }"
.br
.in -1c
.SS "CONTROL - Control register"

.in +1c
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_IACK_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_IACK_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_IACK\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_CONTROL_IACK_SHIFT\fP)) & \fBUSBDCD_CONTROL_IACK_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_IF_MASK\fP   (0x100U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_IF_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_IF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_CONTROL_IF_SHIFT\fP)) & \fBUSBDCD_CONTROL_IF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_IE_MASK\fP   (0x10000U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_IE_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_IE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_CONTROL_IE_SHIFT\fP)) & \fBUSBDCD_CONTROL_IE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_BC12_MASK\fP   (0x20000U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_BC12_SHIFT\fP   (17U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_BC12\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_CONTROL_BC12_SHIFT\fP)) & \fBUSBDCD_CONTROL_BC12_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_START_MASK\fP   (0x1000000U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_START_SHIFT\fP   (24U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_START\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_CONTROL_START_SHIFT\fP)) & \fBUSBDCD_CONTROL_START_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_SR_MASK\fP   (0x2000000U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_SR_SHIFT\fP   (25U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CONTROL_SR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_CONTROL_SR_SHIFT\fP)) & \fBUSBDCD_CONTROL_SR_MASK\fP)"
.br
.in -1c
.SS "CLOCK - Clock register"

.in +1c
.ti -1c
.RI "#define \fBUSBDCD_CLOCK_CLOCK_UNIT_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CLOCK_CLOCK_UNIT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CLOCK_CLOCK_UNIT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_CLOCK_CLOCK_UNIT_SHIFT\fP)) & \fBUSBDCD_CLOCK_CLOCK_UNIT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CLOCK_CLOCK_SPEED_MASK\fP   (0xFFCU)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CLOCK_CLOCK_SPEED_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_CLOCK_CLOCK_SPEED\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_CLOCK_CLOCK_SPEED_SHIFT\fP)) & \fBUSBDCD_CLOCK_CLOCK_SPEED_MASK\fP)"
.br
.in -1c
.SS "STATUS - Status register"

.in +1c
.ti -1c
.RI "#define \fBUSBDCD_STATUS_SEQ_RES_MASK\fP   (0x30000U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_STATUS_SEQ_RES_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_STATUS_SEQ_RES\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_STATUS_SEQ_RES_SHIFT\fP)) & \fBUSBDCD_STATUS_SEQ_RES_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSBDCD_STATUS_SEQ_STAT_MASK\fP   (0xC0000U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_STATUS_SEQ_STAT_SHIFT\fP   (18U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_STATUS_SEQ_STAT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_STATUS_SEQ_STAT_SHIFT\fP)) & \fBUSBDCD_STATUS_SEQ_STAT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSBDCD_STATUS_ERR_MASK\fP   (0x100000U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_STATUS_ERR_SHIFT\fP   (20U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_STATUS_ERR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_STATUS_ERR_SHIFT\fP)) & \fBUSBDCD_STATUS_ERR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSBDCD_STATUS_TO_MASK\fP   (0x200000U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_STATUS_TO_SHIFT\fP   (21U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_STATUS_TO\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_STATUS_TO_SHIFT\fP)) & \fBUSBDCD_STATUS_TO_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSBDCD_STATUS_ACTIVE_MASK\fP   (0x400000U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_STATUS_ACTIVE_SHIFT\fP   (22U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_STATUS_ACTIVE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_STATUS_ACTIVE_SHIFT\fP)) & \fBUSBDCD_STATUS_ACTIVE_MASK\fP)"
.br
.in -1c
.SS "TIMER0 - TIMER0 register"

.in +1c
.ti -1c
.RI "#define \fBUSBDCD_TIMER0_TUNITCON_MASK\fP   (0xFFFU)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER0_TUNITCON_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER0_TUNITCON\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_TIMER0_TUNITCON_SHIFT\fP)) & \fBUSBDCD_TIMER0_TUNITCON_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER0_TSEQ_INIT_MASK\fP   (0x3FF0000U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER0_TSEQ_INIT_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER0_TSEQ_INIT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_TIMER0_TSEQ_INIT_SHIFT\fP)) & \fBUSBDCD_TIMER0_TSEQ_INIT_MASK\fP)"
.br
.in -1c
.SS "TIMER1 - TIMER1 register"

.in +1c
.ti -1c
.RI "#define \fBUSBDCD_TIMER1_TVDPSRC_ON_MASK\fP   (0x3FFU)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER1_TVDPSRC_ON_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER1_TVDPSRC_ON\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_TIMER1_TVDPSRC_ON_SHIFT\fP)) & \fBUSBDCD_TIMER1_TVDPSRC_ON_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER1_TDCD_DBNC_MASK\fP   (0x3FF0000U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER1_TDCD_DBNC_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER1_TDCD_DBNC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_TIMER1_TDCD_DBNC_SHIFT\fP)) & \fBUSBDCD_TIMER1_TDCD_DBNC_MASK\fP)"
.br
.in -1c
.SS "TIMER2_BC11 - TIMER2_BC11 register"

.in +1c
.ti -1c
.RI "#define \fBUSBDCD_TIMER2_BC11_CHECK_DM_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER2_BC11_CHECK_DM_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER2_BC11_CHECK_DM\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_TIMER2_BC11_CHECK_DM_SHIFT\fP)) & \fBUSBDCD_TIMER2_BC11_CHECK_DM_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER2_BC11_TVDPSRC_CON_MASK\fP   (0x3FF0000U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER2_BC11_TVDPSRC_CON_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER2_BC11_TVDPSRC_CON\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_TIMER2_BC11_TVDPSRC_CON_SHIFT\fP)) & \fBUSBDCD_TIMER2_BC11_TVDPSRC_CON_MASK\fP)"
.br
.in -1c
.SS "TIMER2_BC12 - TIMER2_BC12 register"

.in +1c
.ti -1c
.RI "#define \fBUSBDCD_TIMER2_BC12_TVDMSRC_ON_MASK\fP   (0x3FFU)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER2_BC12_TVDMSRC_ON_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER2_BC12_TVDMSRC_ON\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_TIMER2_BC12_TVDMSRC_ON_SHIFT\fP)) & \fBUSBDCD_TIMER2_BC12_TVDMSRC_ON_MASK\fP)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER2_BC12_TWAIT_AFTER_PRD_MASK\fP   (0x3FF0000U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER2_BC12_TWAIT_AFTER_PRD_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBUSBDCD_TIMER2_BC12_TWAIT_AFTER_PRD\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_TIMER2_BC12_TWAIT_AFTER_PRD_SHIFT\fP)) & \fBUSBDCD_TIMER2_BC12_TWAIT_AFTER_PRD_MASK\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define USBDCD   ((\fBUSBDCD_Type\fP *)\fBUSBDCD_BASE\fP)"
Peripheral USBDCD base pointer 
.SS "#define USBDCD_BASE   (0x40035000u)"
Peripheral USBDCD base address 
.SS "#define USBDCD_BASE_ADDRS   { \fBUSBDCD_BASE\fP }"
Array initializer of USBDCD peripheral base addresses 
.SS "#define USBDCD_BASE_PTRS   { \fBUSBDCD\fP }"
Array initializer of USBDCD peripheral base pointers 
.SS "#define USBDCD_CLOCK_CLOCK_SPEED(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_CLOCK_CLOCK_SPEED_SHIFT\fP)) & \fBUSBDCD_CLOCK_CLOCK_SPEED_MASK\fP)"

.SS "#define USBDCD_CLOCK_CLOCK_SPEED_MASK   (0xFFCU)"

.SS "#define USBDCD_CLOCK_CLOCK_SPEED_SHIFT   (2U)"

.SS "#define USBDCD_CLOCK_CLOCK_UNIT(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_CLOCK_CLOCK_UNIT_SHIFT\fP)) & \fBUSBDCD_CLOCK_CLOCK_UNIT_MASK\fP)"

.SS "#define USBDCD_CLOCK_CLOCK_UNIT_MASK   (0x1U)"

.SS "#define USBDCD_CLOCK_CLOCK_UNIT_SHIFT   (0U)"

.SS "#define USBDCD_CONTROL_BC12(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_CONTROL_BC12_SHIFT\fP)) & \fBUSBDCD_CONTROL_BC12_MASK\fP)"

.SS "#define USBDCD_CONTROL_BC12_MASK   (0x20000U)"

.SS "#define USBDCD_CONTROL_BC12_SHIFT   (17U)"

.SS "#define USBDCD_CONTROL_IACK(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_CONTROL_IACK_SHIFT\fP)) & \fBUSBDCD_CONTROL_IACK_MASK\fP)"

.SS "#define USBDCD_CONTROL_IACK_MASK   (0x1U)"

.SS "#define USBDCD_CONTROL_IACK_SHIFT   (0U)"

.SS "#define USBDCD_CONTROL_IE(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_CONTROL_IE_SHIFT\fP)) & \fBUSBDCD_CONTROL_IE_MASK\fP)"

.SS "#define USBDCD_CONTROL_IE_MASK   (0x10000U)"

.SS "#define USBDCD_CONTROL_IE_SHIFT   (16U)"

.SS "#define USBDCD_CONTROL_IF(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_CONTROL_IF_SHIFT\fP)) & \fBUSBDCD_CONTROL_IF_MASK\fP)"

.SS "#define USBDCD_CONTROL_IF_MASK   (0x100U)"

.SS "#define USBDCD_CONTROL_IF_SHIFT   (8U)"

.SS "#define USBDCD_CONTROL_SR(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_CONTROL_SR_SHIFT\fP)) & \fBUSBDCD_CONTROL_SR_MASK\fP)"

.SS "#define USBDCD_CONTROL_SR_MASK   (0x2000000U)"

.SS "#define USBDCD_CONTROL_SR_SHIFT   (25U)"

.SS "#define USBDCD_CONTROL_START(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_CONTROL_START_SHIFT\fP)) & \fBUSBDCD_CONTROL_START_MASK\fP)"

.SS "#define USBDCD_CONTROL_START_MASK   (0x1000000U)"

.SS "#define USBDCD_CONTROL_START_SHIFT   (24U)"

.SS "#define USBDCD_IRQS   { \fBUSBDCD_IRQn\fP }"
Interrupt vectors for the USBDCD peripheral type 
.SS "#define USBDCD_STATUS_ACTIVE(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_STATUS_ACTIVE_SHIFT\fP)) & \fBUSBDCD_STATUS_ACTIVE_MASK\fP)"

.SS "#define USBDCD_STATUS_ACTIVE_MASK   (0x400000U)"

.SS "#define USBDCD_STATUS_ACTIVE_SHIFT   (22U)"

.SS "#define USBDCD_STATUS_ERR(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_STATUS_ERR_SHIFT\fP)) & \fBUSBDCD_STATUS_ERR_MASK\fP)"

.SS "#define USBDCD_STATUS_ERR_MASK   (0x100000U)"

.SS "#define USBDCD_STATUS_ERR_SHIFT   (20U)"

.SS "#define USBDCD_STATUS_SEQ_RES(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_STATUS_SEQ_RES_SHIFT\fP)) & \fBUSBDCD_STATUS_SEQ_RES_MASK\fP)"

.SS "#define USBDCD_STATUS_SEQ_RES_MASK   (0x30000U)"

.SS "#define USBDCD_STATUS_SEQ_RES_SHIFT   (16U)"

.SS "#define USBDCD_STATUS_SEQ_STAT(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_STATUS_SEQ_STAT_SHIFT\fP)) & \fBUSBDCD_STATUS_SEQ_STAT_MASK\fP)"

.SS "#define USBDCD_STATUS_SEQ_STAT_MASK   (0xC0000U)"

.SS "#define USBDCD_STATUS_SEQ_STAT_SHIFT   (18U)"

.SS "#define USBDCD_STATUS_TO(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_STATUS_TO_SHIFT\fP)) & \fBUSBDCD_STATUS_TO_MASK\fP)"

.SS "#define USBDCD_STATUS_TO_MASK   (0x200000U)"

.SS "#define USBDCD_STATUS_TO_SHIFT   (21U)"

.SS "#define USBDCD_TIMER0_TSEQ_INIT(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_TIMER0_TSEQ_INIT_SHIFT\fP)) & \fBUSBDCD_TIMER0_TSEQ_INIT_MASK\fP)"

.SS "#define USBDCD_TIMER0_TSEQ_INIT_MASK   (0x3FF0000U)"

.SS "#define USBDCD_TIMER0_TSEQ_INIT_SHIFT   (16U)"

.SS "#define USBDCD_TIMER0_TUNITCON(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_TIMER0_TUNITCON_SHIFT\fP)) & \fBUSBDCD_TIMER0_TUNITCON_MASK\fP)"

.SS "#define USBDCD_TIMER0_TUNITCON_MASK   (0xFFFU)"

.SS "#define USBDCD_TIMER0_TUNITCON_SHIFT   (0U)"

.SS "#define USBDCD_TIMER1_TDCD_DBNC(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_TIMER1_TDCD_DBNC_SHIFT\fP)) & \fBUSBDCD_TIMER1_TDCD_DBNC_MASK\fP)"

.SS "#define USBDCD_TIMER1_TDCD_DBNC_MASK   (0x3FF0000U)"

.SS "#define USBDCD_TIMER1_TDCD_DBNC_SHIFT   (16U)"

.SS "#define USBDCD_TIMER1_TVDPSRC_ON(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_TIMER1_TVDPSRC_ON_SHIFT\fP)) & \fBUSBDCD_TIMER1_TVDPSRC_ON_MASK\fP)"

.SS "#define USBDCD_TIMER1_TVDPSRC_ON_MASK   (0x3FFU)"

.SS "#define USBDCD_TIMER1_TVDPSRC_ON_SHIFT   (0U)"

.SS "#define USBDCD_TIMER2_BC11_CHECK_DM(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_TIMER2_BC11_CHECK_DM_SHIFT\fP)) & \fBUSBDCD_TIMER2_BC11_CHECK_DM_MASK\fP)"

.SS "#define USBDCD_TIMER2_BC11_CHECK_DM_MASK   (0xFU)"

.SS "#define USBDCD_TIMER2_BC11_CHECK_DM_SHIFT   (0U)"

.SS "#define USBDCD_TIMER2_BC11_TVDPSRC_CON(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_TIMER2_BC11_TVDPSRC_CON_SHIFT\fP)) & \fBUSBDCD_TIMER2_BC11_TVDPSRC_CON_MASK\fP)"

.SS "#define USBDCD_TIMER2_BC11_TVDPSRC_CON_MASK   (0x3FF0000U)"

.SS "#define USBDCD_TIMER2_BC11_TVDPSRC_CON_SHIFT   (16U)"

.SS "#define USBDCD_TIMER2_BC12_TVDMSRC_ON(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_TIMER2_BC12_TVDMSRC_ON_SHIFT\fP)) & \fBUSBDCD_TIMER2_BC12_TVDMSRC_ON_MASK\fP)"

.SS "#define USBDCD_TIMER2_BC12_TVDMSRC_ON_MASK   (0x3FFU)"

.SS "#define USBDCD_TIMER2_BC12_TVDMSRC_ON_SHIFT   (0U)"

.SS "#define USBDCD_TIMER2_BC12_TWAIT_AFTER_PRD(x)   (((uint32_t)(((uint32_t)(x)) << \fBUSBDCD_TIMER2_BC12_TWAIT_AFTER_PRD_SHIFT\fP)) & \fBUSBDCD_TIMER2_BC12_TWAIT_AFTER_PRD_MASK\fP)"

.SS "#define USBDCD_TIMER2_BC12_TWAIT_AFTER_PRD_MASK   (0x3FF0000U)"

.SS "#define USBDCD_TIMER2_BC12_TWAIT_AFTER_PRD_SHIFT   (16U)"

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
