.TH "DMA_Register_Masks" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DMA_Register_Masks
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBDMA_BASE\fP   (0x40008000u)"
.br
.ti -1c
.RI "#define \fBDMA0\fP   ((\fBDMA_Type\fP *)\fBDMA_BASE\fP)"
.br
.ti -1c
.RI "#define \fBDMA_BASE_ADDRS\fP   { \fBDMA_BASE\fP }"
.br
.ti -1c
.RI "#define \fBDMA_BASE_PTRS\fP   { \fBDMA0\fP }"
.br
.ti -1c
.RI "#define \fBDMA_CHN_IRQS\fP   { { \fBDMA0_IRQn\fP, \fBDMA1_IRQn\fP, \fBDMA2_IRQn\fP, \fBDMA3_IRQn\fP, \fBDMA4_IRQn\fP, \fBDMA5_IRQn\fP, \fBDMA6_IRQn\fP, \fBDMA7_IRQn\fP, \fBDMA8_IRQn\fP, \fBDMA9_IRQn\fP, \fBDMA10_IRQn\fP, \fBDMA11_IRQn\fP, \fBDMA12_IRQn\fP, \fBDMA13_IRQn\fP, \fBDMA14_IRQn\fP, \fBDMA15_IRQn\fP } }"
.br
.ti -1c
.RI "#define \fBDMA_ERROR_IRQS\fP   { \fBDMA_Error_IRQn\fP }"
.br
.in -1c
.SS "CR - Control Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_CR_EDBG_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBDMA_CR_EDBG_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBDMA_CR_EDBG\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_CR_EDBG_SHIFT\fP)) & \fBDMA_CR_EDBG_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CR_ERCA_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBDMA_CR_ERCA_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBDMA_CR_ERCA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_CR_ERCA_SHIFT\fP)) & \fBDMA_CR_ERCA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CR_HOE_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBDMA_CR_HOE_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBDMA_CR_HOE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_CR_HOE_SHIFT\fP)) & \fBDMA_CR_HOE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CR_HALT_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBDMA_CR_HALT_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBDMA_CR_HALT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_CR_HALT_SHIFT\fP)) & \fBDMA_CR_HALT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CR_CLM_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_CR_CLM_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_CR_CLM\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_CR_CLM_SHIFT\fP)) & \fBDMA_CR_CLM_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CR_EMLM_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_CR_EMLM_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_CR_EMLM\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_CR_EMLM_SHIFT\fP)) & \fBDMA_CR_EMLM_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CR_ECX_MASK\fP   (0x10000U)"
.br
.ti -1c
.RI "#define \fBDMA_CR_ECX_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBDMA_CR_ECX\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_CR_ECX_SHIFT\fP)) & \fBDMA_CR_ECX_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CR_CX_MASK\fP   (0x20000U)"
.br
.ti -1c
.RI "#define \fBDMA_CR_CX_SHIFT\fP   (17U)"
.br
.ti -1c
.RI "#define \fBDMA_CR_CX\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_CR_CX_SHIFT\fP)) & \fBDMA_CR_CX_MASK\fP)"
.br
.ti -1c
.RI "#define \fBMCM_CR_SRAMUAP_MASK\fP   (0x3000000U)"
.br
.ti -1c
.RI "#define \fBMCM_CR_SRAMUAP_SHIFT\fP   (24U)"
.br
.ti -1c
.RI "#define \fBMCM_CR_SRAMUAP\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBMCM_CR_SRAMUAP_SHIFT\fP)) & \fBMCM_CR_SRAMUAP_MASK\fP)"
.br
.ti -1c
.RI "#define \fBMCM_CR_SRAMUWP_MASK\fP   (0x4000000U)"
.br
.ti -1c
.RI "#define \fBMCM_CR_SRAMUWP_SHIFT\fP   (26U)"
.br
.ti -1c
.RI "#define \fBMCM_CR_SRAMUWP\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBMCM_CR_SRAMUWP_SHIFT\fP)) & \fBMCM_CR_SRAMUWP_MASK\fP)"
.br
.ti -1c
.RI "#define \fBMCM_CR_SRAMLAP_MASK\fP   (0x30000000U)"
.br
.ti -1c
.RI "#define \fBMCM_CR_SRAMLAP_SHIFT\fP   (28U)"
.br
.ti -1c
.RI "#define \fBMCM_CR_SRAMLAP\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBMCM_CR_SRAMLAP_SHIFT\fP)) & \fBMCM_CR_SRAMLAP_MASK\fP)"
.br
.ti -1c
.RI "#define \fBMCM_CR_SRAMLWP_MASK\fP   (0x40000000U)"
.br
.ti -1c
.RI "#define \fBMCM_CR_SRAMLWP_SHIFT\fP   (30U)"
.br
.ti -1c
.RI "#define \fBMCM_CR_SRAMLWP\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBMCM_CR_SRAMLWP_SHIFT\fP)) & \fBMCM_CR_SRAMLWP_MASK\fP)"
.br
.in -1c
.SS "ES - Error Status Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_ES_DBE_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_DBE_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_DBE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_DBE_SHIFT\fP)) & \fBDMA_ES_DBE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ES_SBE_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_SBE_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_SBE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_SBE_SHIFT\fP)) & \fBDMA_ES_SBE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ES_SGE_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_SGE_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_SGE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_SGE_SHIFT\fP)) & \fBDMA_ES_SGE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ES_NCE_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_NCE_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_NCE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_NCE_SHIFT\fP)) & \fBDMA_ES_NCE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ES_DOE_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_DOE_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_DOE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_DOE_SHIFT\fP)) & \fBDMA_ES_DOE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ES_DAE_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_DAE_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_DAE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_DAE_SHIFT\fP)) & \fBDMA_ES_DAE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ES_SOE_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_SOE_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_SOE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_SOE_SHIFT\fP)) & \fBDMA_ES_SOE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ES_SAE_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_SAE_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_SAE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_SAE_SHIFT\fP)) & \fBDMA_ES_SAE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ES_ERRCHN_MASK\fP   (0xF00U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_ERRCHN_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_ERRCHN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_ERRCHN_SHIFT\fP)) & \fBDMA_ES_ERRCHN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ES_CPE_MASK\fP   (0x4000U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_CPE_SHIFT\fP   (14U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_CPE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_CPE_SHIFT\fP)) & \fBDMA_ES_CPE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ES_ECX_MASK\fP   (0x10000U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_ECX_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_ECX\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_ECX_SHIFT\fP)) & \fBDMA_ES_ECX_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ES_VLD_MASK\fP   (0x80000000U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_VLD_SHIFT\fP   (31U)"
.br
.ti -1c
.RI "#define \fBDMA_ES_VLD\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_VLD_SHIFT\fP)) & \fBDMA_ES_VLD_MASK\fP)"
.br
.in -1c
.SS "ERQ - Enable Request Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ0_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ0_SHIFT\fP)) & \fBDMA_ERQ_ERQ0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ1_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ1_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ1_SHIFT\fP)) & \fBDMA_ERQ_ERQ1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ2_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ2_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ2_SHIFT\fP)) & \fBDMA_ERQ_ERQ2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ3_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ3_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ3_SHIFT\fP)) & \fBDMA_ERQ_ERQ3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ4_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ4_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ4_SHIFT\fP)) & \fBDMA_ERQ_ERQ4_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ5_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ5_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ5\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ5_SHIFT\fP)) & \fBDMA_ERQ_ERQ5_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ6_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ6_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ6\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ6_SHIFT\fP)) & \fBDMA_ERQ_ERQ6_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ7_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ7_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ7\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ7_SHIFT\fP)) & \fBDMA_ERQ_ERQ7_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ8_MASK\fP   (0x100U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ8_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ8\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ8_SHIFT\fP)) & \fBDMA_ERQ_ERQ8_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ9_MASK\fP   (0x200U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ9_SHIFT\fP   (9U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ9\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ9_SHIFT\fP)) & \fBDMA_ERQ_ERQ9_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ10_MASK\fP   (0x400U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ10_SHIFT\fP   (10U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ10\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ10_SHIFT\fP)) & \fBDMA_ERQ_ERQ10_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ11_MASK\fP   (0x800U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ11_SHIFT\fP   (11U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ11\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ11_SHIFT\fP)) & \fBDMA_ERQ_ERQ11_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ12_MASK\fP   (0x1000U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ12_SHIFT\fP   (12U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ12\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ12_SHIFT\fP)) & \fBDMA_ERQ_ERQ12_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ13_MASK\fP   (0x2000U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ13_SHIFT\fP   (13U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ13\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ13_SHIFT\fP)) & \fBDMA_ERQ_ERQ13_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ14_MASK\fP   (0x4000U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ14_SHIFT\fP   (14U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ14\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ14_SHIFT\fP)) & \fBDMA_ERQ_ERQ14_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ15_MASK\fP   (0x8000U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ15_SHIFT\fP   (15U)"
.br
.ti -1c
.RI "#define \fBDMA_ERQ_ERQ15\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ15_SHIFT\fP)) & \fBDMA_ERQ_ERQ15_MASK\fP)"
.br
.in -1c
.SS "EEI - Enable Error Interrupt Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_EEI_EEI0_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI0_SHIFT\fP)) & \fBDMA_EEI_EEI0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI1_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI1_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI1_SHIFT\fP)) & \fBDMA_EEI_EEI1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI2_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI2_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI2_SHIFT\fP)) & \fBDMA_EEI_EEI2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI3_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI3_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI3_SHIFT\fP)) & \fBDMA_EEI_EEI3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI4_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI4_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI4_SHIFT\fP)) & \fBDMA_EEI_EEI4_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI5_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI5_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI5\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI5_SHIFT\fP)) & \fBDMA_EEI_EEI5_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI6_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI6_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI6\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI6_SHIFT\fP)) & \fBDMA_EEI_EEI6_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI7_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI7_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI7\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI7_SHIFT\fP)) & \fBDMA_EEI_EEI7_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI8_MASK\fP   (0x100U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI8_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI8\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI8_SHIFT\fP)) & \fBDMA_EEI_EEI8_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI9_MASK\fP   (0x200U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI9_SHIFT\fP   (9U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI9\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI9_SHIFT\fP)) & \fBDMA_EEI_EEI9_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI10_MASK\fP   (0x400U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI10_SHIFT\fP   (10U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI10\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI10_SHIFT\fP)) & \fBDMA_EEI_EEI10_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI11_MASK\fP   (0x800U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI11_SHIFT\fP   (11U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI11\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI11_SHIFT\fP)) & \fBDMA_EEI_EEI11_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI12_MASK\fP   (0x1000U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI12_SHIFT\fP   (12U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI12\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI12_SHIFT\fP)) & \fBDMA_EEI_EEI12_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI13_MASK\fP   (0x2000U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI13_SHIFT\fP   (13U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI13\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI13_SHIFT\fP)) & \fBDMA_EEI_EEI13_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI14_MASK\fP   (0x4000U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI14_SHIFT\fP   (14U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI14\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI14_SHIFT\fP)) & \fBDMA_EEI_EEI14_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI15_MASK\fP   (0x8000U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI15_SHIFT\fP   (15U)"
.br
.ti -1c
.RI "#define \fBDMA_EEI_EEI15\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI15_SHIFT\fP)) & \fBDMA_EEI_EEI15_MASK\fP)"
.br
.in -1c
.SS "CEEI - Clear Enable Error Interrupt Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_CEEI_CEEI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_CEEI_CEEI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_CEEI_CEEI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CEEI_CEEI_SHIFT\fP)) & \fBDMA_CEEI_CEEI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CEEI_CAEE_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_CEEI_CAEE_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_CEEI_CAEE\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CEEI_CAEE_SHIFT\fP)) & \fBDMA_CEEI_CAEE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CEEI_NOP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_CEEI_NOP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_CEEI_NOP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CEEI_NOP_SHIFT\fP)) & \fBDMA_CEEI_NOP_MASK\fP)"
.br
.in -1c
.SS "SEEI - Set Enable Error Interrupt Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_SEEI_SEEI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_SEEI_SEEI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_SEEI_SEEI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SEEI_SEEI_SHIFT\fP)) & \fBDMA_SEEI_SEEI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_SEEI_SAEE_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_SEEI_SAEE_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_SEEI_SAEE\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SEEI_SAEE_SHIFT\fP)) & \fBDMA_SEEI_SAEE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_SEEI_NOP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_SEEI_NOP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_SEEI_NOP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SEEI_NOP_SHIFT\fP)) & \fBDMA_SEEI_NOP_MASK\fP)"
.br
.in -1c
.SS "CERQ - Clear Enable Request Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_CERQ_CERQ_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_CERQ_CERQ_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_CERQ_CERQ\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CERQ_CERQ_SHIFT\fP)) & \fBDMA_CERQ_CERQ_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CERQ_CAER_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_CERQ_CAER_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_CERQ_CAER\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CERQ_CAER_SHIFT\fP)) & \fBDMA_CERQ_CAER_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CERQ_NOP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_CERQ_NOP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_CERQ_NOP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CERQ_NOP_SHIFT\fP)) & \fBDMA_CERQ_NOP_MASK\fP)"
.br
.in -1c
.SS "SERQ - Set Enable Request Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_SERQ_SERQ_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_SERQ_SERQ_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_SERQ_SERQ\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SERQ_SERQ_SHIFT\fP)) & \fBDMA_SERQ_SERQ_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_SERQ_SAER_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_SERQ_SAER_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_SERQ_SAER\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SERQ_SAER_SHIFT\fP)) & \fBDMA_SERQ_SAER_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_SERQ_NOP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_SERQ_NOP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_SERQ_NOP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SERQ_NOP_SHIFT\fP)) & \fBDMA_SERQ_NOP_MASK\fP)"
.br
.in -1c
.SS "CDNE - Clear DONE Status Bit Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_CDNE_CDNE_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_CDNE_CDNE_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_CDNE_CDNE\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CDNE_CDNE_SHIFT\fP)) & \fBDMA_CDNE_CDNE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CDNE_CADN_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_CDNE_CADN_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_CDNE_CADN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CDNE_CADN_SHIFT\fP)) & \fBDMA_CDNE_CADN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CDNE_NOP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_CDNE_NOP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_CDNE_NOP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CDNE_NOP_SHIFT\fP)) & \fBDMA_CDNE_NOP_MASK\fP)"
.br
.in -1c
.SS "SSRT - Set START Bit Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_SSRT_SSRT_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_SSRT_SSRT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_SSRT_SSRT\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SSRT_SSRT_SHIFT\fP)) & \fBDMA_SSRT_SSRT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_SSRT_SAST_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_SSRT_SAST_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_SSRT_SAST\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SSRT_SAST_SHIFT\fP)) & \fBDMA_SSRT_SAST_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_SSRT_NOP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_SSRT_NOP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_SSRT_NOP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SSRT_NOP_SHIFT\fP)) & \fBDMA_SSRT_NOP_MASK\fP)"
.br
.in -1c
.SS "CERR - Clear Error Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_CERR_CERR_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_CERR_CERR_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_CERR_CERR\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CERR_CERR_SHIFT\fP)) & \fBDMA_CERR_CERR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CERR_CAEI_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_CERR_CAEI_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_CERR_CAEI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CERR_CAEI_SHIFT\fP)) & \fBDMA_CERR_CAEI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CERR_NOP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_CERR_NOP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_CERR_NOP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CERR_NOP_SHIFT\fP)) & \fBDMA_CERR_NOP_MASK\fP)"
.br
.in -1c
.SS "CINT - Clear Interrupt Request Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_CINT_CINT_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_CINT_CINT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_CINT_CINT\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CINT_CINT_SHIFT\fP)) & \fBDMA_CINT_CINT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CINT_CAIR_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_CINT_CAIR_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_CINT_CAIR\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CINT_CAIR_SHIFT\fP)) & \fBDMA_CINT_CAIR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CINT_NOP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_CINT_NOP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_CINT_NOP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CINT_NOP_SHIFT\fP)) & \fBDMA_CINT_NOP_MASK\fP)"
.br
.in -1c
.SS "INT - Interrupt Request Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_INT_INT0_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT0_SHIFT\fP)) & \fBDMA_INT_INT0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT1_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT1_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT1_SHIFT\fP)) & \fBDMA_INT_INT1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT2_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT2_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT2_SHIFT\fP)) & \fBDMA_INT_INT2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT3_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT3_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT3_SHIFT\fP)) & \fBDMA_INT_INT3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT4_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT4_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT4_SHIFT\fP)) & \fBDMA_INT_INT4_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT5_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT5_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT5\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT5_SHIFT\fP)) & \fBDMA_INT_INT5_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT6_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT6_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT6\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT6_SHIFT\fP)) & \fBDMA_INT_INT6_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT7_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT7_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT7\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT7_SHIFT\fP)) & \fBDMA_INT_INT7_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT8_MASK\fP   (0x100U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT8_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT8\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT8_SHIFT\fP)) & \fBDMA_INT_INT8_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT9_MASK\fP   (0x200U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT9_SHIFT\fP   (9U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT9\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT9_SHIFT\fP)) & \fBDMA_INT_INT9_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT10_MASK\fP   (0x400U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT10_SHIFT\fP   (10U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT10\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT10_SHIFT\fP)) & \fBDMA_INT_INT10_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT11_MASK\fP   (0x800U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT11_SHIFT\fP   (11U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT11\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT11_SHIFT\fP)) & \fBDMA_INT_INT11_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT12_MASK\fP   (0x1000U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT12_SHIFT\fP   (12U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT12\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT12_SHIFT\fP)) & \fBDMA_INT_INT12_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT13_MASK\fP   (0x2000U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT13_SHIFT\fP   (13U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT13\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT13_SHIFT\fP)) & \fBDMA_INT_INT13_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT14_MASK\fP   (0x4000U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT14_SHIFT\fP   (14U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT14\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT14_SHIFT\fP)) & \fBDMA_INT_INT14_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT15_MASK\fP   (0x8000U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT15_SHIFT\fP   (15U)"
.br
.ti -1c
.RI "#define \fBDMA_INT_INT15\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT15_SHIFT\fP)) & \fBDMA_INT_INT15_MASK\fP)"
.br
.in -1c
.SS "ERR - Error Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_ERR_ERR0_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR0_SHIFT\fP)) & \fBDMA_ERR_ERR0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR1_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR1_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR1_SHIFT\fP)) & \fBDMA_ERR_ERR1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR2_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR2_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR2_SHIFT\fP)) & \fBDMA_ERR_ERR2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR3_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR3_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR3_SHIFT\fP)) & \fBDMA_ERR_ERR3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR4_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR4_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR4_SHIFT\fP)) & \fBDMA_ERR_ERR4_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR5_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR5_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR5\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR5_SHIFT\fP)) & \fBDMA_ERR_ERR5_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR6_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR6_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR6\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR6_SHIFT\fP)) & \fBDMA_ERR_ERR6_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR7_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR7_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR7\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR7_SHIFT\fP)) & \fBDMA_ERR_ERR7_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR8_MASK\fP   (0x100U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR8_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR8\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR8_SHIFT\fP)) & \fBDMA_ERR_ERR8_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR9_MASK\fP   (0x200U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR9_SHIFT\fP   (9U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR9\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR9_SHIFT\fP)) & \fBDMA_ERR_ERR9_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR10_MASK\fP   (0x400U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR10_SHIFT\fP   (10U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR10\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR10_SHIFT\fP)) & \fBDMA_ERR_ERR10_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR11_MASK\fP   (0x800U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR11_SHIFT\fP   (11U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR11\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR11_SHIFT\fP)) & \fBDMA_ERR_ERR11_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR12_MASK\fP   (0x1000U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR12_SHIFT\fP   (12U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR12\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR12_SHIFT\fP)) & \fBDMA_ERR_ERR12_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR13_MASK\fP   (0x2000U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR13_SHIFT\fP   (13U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR13\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR13_SHIFT\fP)) & \fBDMA_ERR_ERR13_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR14_MASK\fP   (0x4000U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR14_SHIFT\fP   (14U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR14\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR14_SHIFT\fP)) & \fBDMA_ERR_ERR14_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR15_MASK\fP   (0x8000U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR15_SHIFT\fP   (15U)"
.br
.ti -1c
.RI "#define \fBDMA_ERR_ERR15\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR15_SHIFT\fP)) & \fBDMA_ERR_ERR15_MASK\fP)"
.br
.in -1c
.SS "HRS - Hardware Request Status Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_HRS_HRS0_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS0_SHIFT\fP)) & \fBDMA_HRS_HRS0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS1_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS1_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS1_SHIFT\fP)) & \fBDMA_HRS_HRS1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS2_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS2_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS2_SHIFT\fP)) & \fBDMA_HRS_HRS2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS3_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS3_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS3_SHIFT\fP)) & \fBDMA_HRS_HRS3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS4_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS4_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS4_SHIFT\fP)) & \fBDMA_HRS_HRS4_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS5_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS5_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS5\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS5_SHIFT\fP)) & \fBDMA_HRS_HRS5_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS6_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS6_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS6\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS6_SHIFT\fP)) & \fBDMA_HRS_HRS6_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS7_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS7_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS7\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS7_SHIFT\fP)) & \fBDMA_HRS_HRS7_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS8_MASK\fP   (0x100U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS8_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS8\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS8_SHIFT\fP)) & \fBDMA_HRS_HRS8_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS9_MASK\fP   (0x200U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS9_SHIFT\fP   (9U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS9\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS9_SHIFT\fP)) & \fBDMA_HRS_HRS9_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS10_MASK\fP   (0x400U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS10_SHIFT\fP   (10U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS10\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS10_SHIFT\fP)) & \fBDMA_HRS_HRS10_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS11_MASK\fP   (0x800U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS11_SHIFT\fP   (11U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS11\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS11_SHIFT\fP)) & \fBDMA_HRS_HRS11_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS12_MASK\fP   (0x1000U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS12_SHIFT\fP   (12U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS12\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS12_SHIFT\fP)) & \fBDMA_HRS_HRS12_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS13_MASK\fP   (0x2000U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS13_SHIFT\fP   (13U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS13\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS13_SHIFT\fP)) & \fBDMA_HRS_HRS13_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS14_MASK\fP   (0x4000U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS14_SHIFT\fP   (14U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS14\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS14_SHIFT\fP)) & \fBDMA_HRS_HRS14_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS15_MASK\fP   (0x8000U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS15_SHIFT\fP   (15U)"
.br
.ti -1c
.RI "#define \fBDMA_HRS_HRS15\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS15_SHIFT\fP)) & \fBDMA_HRS_HRS15_MASK\fP)"
.br
.in -1c
.SS "DCHPRI3 - Channel n Priority Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_DCHPRI3_CHPRI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI3_CHPRI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI3_CHPRI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI3_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI3_CHPRI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI3_DPA_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI3_DPA_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI3_DPA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI3_DPA_SHIFT\fP)) & \fBDMA_DCHPRI3_DPA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI3_ECP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI3_ECP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI3_ECP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI3_ECP_SHIFT\fP)) & \fBDMA_DCHPRI3_ECP_MASK\fP)"
.br
.in -1c
.SS "DCHPRI2 - Channel n Priority Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_DCHPRI2_CHPRI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI2_CHPRI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI2_CHPRI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI2_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI2_CHPRI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI2_DPA_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI2_DPA_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI2_DPA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI2_DPA_SHIFT\fP)) & \fBDMA_DCHPRI2_DPA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI2_ECP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI2_ECP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI2_ECP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI2_ECP_SHIFT\fP)) & \fBDMA_DCHPRI2_ECP_MASK\fP)"
.br
.in -1c
.SS "DCHPRI1 - Channel n Priority Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_DCHPRI1_CHPRI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI1_CHPRI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI1_CHPRI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI1_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI1_CHPRI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI1_DPA_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI1_DPA_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI1_DPA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI1_DPA_SHIFT\fP)) & \fBDMA_DCHPRI1_DPA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI1_ECP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI1_ECP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI1_ECP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI1_ECP_SHIFT\fP)) & \fBDMA_DCHPRI1_ECP_MASK\fP)"
.br
.in -1c
.SS "DCHPRI0 - Channel n Priority Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_DCHPRI0_CHPRI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI0_CHPRI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI0_CHPRI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI0_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI0_CHPRI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI0_DPA_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI0_DPA_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI0_DPA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI0_DPA_SHIFT\fP)) & \fBDMA_DCHPRI0_DPA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI0_ECP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI0_ECP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI0_ECP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI0_ECP_SHIFT\fP)) & \fBDMA_DCHPRI0_ECP_MASK\fP)"
.br
.in -1c
.SS "DCHPRI7 - Channel n Priority Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_DCHPRI7_CHPRI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI7_CHPRI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI7_CHPRI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI7_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI7_CHPRI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI7_DPA_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI7_DPA_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI7_DPA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI7_DPA_SHIFT\fP)) & \fBDMA_DCHPRI7_DPA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI7_ECP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI7_ECP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI7_ECP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI7_ECP_SHIFT\fP)) & \fBDMA_DCHPRI7_ECP_MASK\fP)"
.br
.in -1c
.SS "DCHPRI6 - Channel n Priority Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_DCHPRI6_CHPRI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI6_CHPRI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI6_CHPRI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI6_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI6_CHPRI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI6_DPA_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI6_DPA_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI6_DPA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI6_DPA_SHIFT\fP)) & \fBDMA_DCHPRI6_DPA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI6_ECP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI6_ECP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI6_ECP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI6_ECP_SHIFT\fP)) & \fBDMA_DCHPRI6_ECP_MASK\fP)"
.br
.in -1c
.SS "DCHPRI5 - Channel n Priority Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_DCHPRI5_CHPRI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI5_CHPRI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI5_CHPRI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI5_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI5_CHPRI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI5_DPA_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI5_DPA_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI5_DPA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI5_DPA_SHIFT\fP)) & \fBDMA_DCHPRI5_DPA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI5_ECP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI5_ECP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI5_ECP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI5_ECP_SHIFT\fP)) & \fBDMA_DCHPRI5_ECP_MASK\fP)"
.br
.in -1c
.SS "DCHPRI4 - Channel n Priority Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_DCHPRI4_CHPRI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI4_CHPRI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI4_CHPRI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI4_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI4_CHPRI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI4_DPA_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI4_DPA_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI4_DPA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI4_DPA_SHIFT\fP)) & \fBDMA_DCHPRI4_DPA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI4_ECP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI4_ECP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI4_ECP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI4_ECP_SHIFT\fP)) & \fBDMA_DCHPRI4_ECP_MASK\fP)"
.br
.in -1c
.SS "DCHPRI11 - Channel n Priority Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_DCHPRI11_CHPRI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI11_CHPRI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI11_CHPRI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI11_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI11_CHPRI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI11_DPA_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI11_DPA_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI11_DPA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI11_DPA_SHIFT\fP)) & \fBDMA_DCHPRI11_DPA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI11_ECP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI11_ECP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI11_ECP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI11_ECP_SHIFT\fP)) & \fBDMA_DCHPRI11_ECP_MASK\fP)"
.br
.in -1c
.SS "DCHPRI10 - Channel n Priority Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_DCHPRI10_CHPRI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI10_CHPRI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI10_CHPRI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI10_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI10_CHPRI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI10_DPA_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI10_DPA_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI10_DPA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI10_DPA_SHIFT\fP)) & \fBDMA_DCHPRI10_DPA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI10_ECP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI10_ECP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI10_ECP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI10_ECP_SHIFT\fP)) & \fBDMA_DCHPRI10_ECP_MASK\fP)"
.br
.in -1c
.SS "DCHPRI9 - Channel n Priority Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_DCHPRI9_CHPRI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI9_CHPRI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI9_CHPRI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI9_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI9_CHPRI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI9_DPA_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI9_DPA_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI9_DPA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI9_DPA_SHIFT\fP)) & \fBDMA_DCHPRI9_DPA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI9_ECP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI9_ECP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI9_ECP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI9_ECP_SHIFT\fP)) & \fBDMA_DCHPRI9_ECP_MASK\fP)"
.br
.in -1c
.SS "DCHPRI8 - Channel n Priority Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_DCHPRI8_CHPRI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI8_CHPRI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI8_CHPRI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI8_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI8_CHPRI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI8_DPA_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI8_DPA_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI8_DPA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI8_DPA_SHIFT\fP)) & \fBDMA_DCHPRI8_DPA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI8_ECP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI8_ECP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI8_ECP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI8_ECP_SHIFT\fP)) & \fBDMA_DCHPRI8_ECP_MASK\fP)"
.br
.in -1c
.SS "DCHPRI15 - Channel n Priority Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_DCHPRI15_CHPRI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI15_CHPRI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI15_CHPRI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI15_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI15_CHPRI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI15_DPA_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI15_DPA_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI15_DPA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI15_DPA_SHIFT\fP)) & \fBDMA_DCHPRI15_DPA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI15_ECP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI15_ECP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI15_ECP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI15_ECP_SHIFT\fP)) & \fBDMA_DCHPRI15_ECP_MASK\fP)"
.br
.in -1c
.SS "DCHPRI14 - Channel n Priority Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_DCHPRI14_CHPRI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI14_CHPRI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI14_CHPRI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI14_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI14_CHPRI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI14_DPA_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI14_DPA_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI14_DPA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI14_DPA_SHIFT\fP)) & \fBDMA_DCHPRI14_DPA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI14_ECP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI14_ECP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI14_ECP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI14_ECP_SHIFT\fP)) & \fBDMA_DCHPRI14_ECP_MASK\fP)"
.br
.in -1c
.SS "DCHPRI13 - Channel n Priority Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_DCHPRI13_CHPRI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI13_CHPRI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI13_CHPRI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI13_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI13_CHPRI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI13_DPA_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI13_DPA_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI13_DPA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI13_DPA_SHIFT\fP)) & \fBDMA_DCHPRI13_DPA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI13_ECP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI13_ECP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI13_ECP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI13_ECP_SHIFT\fP)) & \fBDMA_DCHPRI13_ECP_MASK\fP)"
.br
.in -1c
.SS "DCHPRI12 - Channel n Priority Register"

.in +1c
.ti -1c
.RI "#define \fBDMA_DCHPRI12_CHPRI_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI12_CHPRI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI12_CHPRI\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI12_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI12_CHPRI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI12_DPA_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI12_DPA_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI12_DPA\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI12_DPA_SHIFT\fP)) & \fBDMA_DCHPRI12_DPA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI12_ECP_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI12_ECP_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_DCHPRI12_ECP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI12_ECP_SHIFT\fP)) & \fBDMA_DCHPRI12_ECP_MASK\fP)"
.br
.in -1c
.SS "SADDR - TCD Source Address"

.in +1c
.ti -1c
.RI "#define \fBDMA_SADDR_SADDR_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBDMA_SADDR_SADDR_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_SADDR_SADDR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_SADDR_SADDR_SHIFT\fP)) & \fBDMA_SADDR_SADDR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_SADDR_COUNT\fP   (16U)"
.br
.in -1c
.SS "SOFF - TCD Signed Source Address Offset"

.in +1c
.ti -1c
.RI "#define \fBDMA_SOFF_SOFF_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBDMA_SOFF_SOFF_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_SOFF_SOFF\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_SOFF_SOFF_SHIFT\fP)) & \fBDMA_SOFF_SOFF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_SOFF_COUNT\fP   (16U)"
.br
.in -1c
.SS "ATTR - TCD Transfer Attributes"

.in +1c
.ti -1c
.RI "#define \fBDMA_ATTR_DSIZE_MASK\fP   (0x7U)"
.br
.ti -1c
.RI "#define \fBDMA_ATTR_DSIZE_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_ATTR_DSIZE\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_ATTR_DSIZE_SHIFT\fP)) & \fBDMA_ATTR_DSIZE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ATTR_DMOD_MASK\fP   (0xF8U)"
.br
.ti -1c
.RI "#define \fBDMA_ATTR_DMOD_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBDMA_ATTR_DMOD\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_ATTR_DMOD_SHIFT\fP)) & \fBDMA_ATTR_DMOD_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ATTR_SSIZE_MASK\fP   (0x700U)"
.br
.ti -1c
.RI "#define \fBDMA_ATTR_SSIZE_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBDMA_ATTR_SSIZE\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_ATTR_SSIZE_SHIFT\fP)) & \fBDMA_ATTR_SSIZE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ATTR_SMOD_MASK\fP   (0xF800U)"
.br
.ti -1c
.RI "#define \fBDMA_ATTR_SMOD_SHIFT\fP   (11U)"
.br
.ti -1c
.RI "#define \fBDMA_ATTR_SMOD\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_ATTR_SMOD_SHIFT\fP)) & \fBDMA_ATTR_SMOD_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_ATTR_COUNT\fP   (16U)"
.br
.in -1c
.SS "NBYTES_MLNO - TCD Minor Byte Count (Minor Loop Disabled)"

.in +1c
.ti -1c
.RI "#define \fBDMA_NBYTES_MLNO_NBYTES_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLNO_NBYTES_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLNO_NBYTES\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_NBYTES_MLNO_NBYTES_SHIFT\fP)) & \fBDMA_NBYTES_MLNO_NBYTES_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLNO_COUNT\fP   (16U)"
.br
.in -1c
.SS "NBYTES_MLOFFNO - TCD Signed Minor Loop Offset (Minor Loop Enabled and Offset Disabled)"

.in +1c
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFNO_NBYTES_MASK\fP   (0x3FFFFFFFU)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFNO_NBYTES_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFNO_NBYTES\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_NBYTES_MLOFFNO_NBYTES_SHIFT\fP)) & \fBDMA_NBYTES_MLOFFNO_NBYTES_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFNO_DMLOE_MASK\fP   (0x40000000U)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFNO_DMLOE_SHIFT\fP   (30U)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFNO_DMLOE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_NBYTES_MLOFFNO_DMLOE_SHIFT\fP)) & \fBDMA_NBYTES_MLOFFNO_DMLOE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFNO_SMLOE_MASK\fP   (0x80000000U)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFNO_SMLOE_SHIFT\fP   (31U)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFNO_SMLOE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_NBYTES_MLOFFNO_SMLOE_SHIFT\fP)) & \fBDMA_NBYTES_MLOFFNO_SMLOE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFNO_COUNT\fP   (16U)"
.br
.in -1c
.SS "NBYTES_MLOFFYES - TCD Signed Minor Loop Offset (Minor Loop and Offset Enabled)"

.in +1c
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFYES_NBYTES_MASK\fP   (0x3FFU)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFYES_NBYTES_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFYES_NBYTES\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_NBYTES_MLOFFYES_NBYTES_SHIFT\fP)) & \fBDMA_NBYTES_MLOFFYES_NBYTES_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFYES_MLOFF_MASK\fP   (0x3FFFFC00U)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFYES_MLOFF_SHIFT\fP   (10U)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFYES_MLOFF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_NBYTES_MLOFFYES_MLOFF_SHIFT\fP)) & \fBDMA_NBYTES_MLOFFYES_MLOFF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFYES_DMLOE_MASK\fP   (0x40000000U)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFYES_DMLOE_SHIFT\fP   (30U)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFYES_DMLOE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_NBYTES_MLOFFYES_DMLOE_SHIFT\fP)) & \fBDMA_NBYTES_MLOFFYES_DMLOE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFYES_SMLOE_MASK\fP   (0x80000000U)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFYES_SMLOE_SHIFT\fP   (31U)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFYES_SMLOE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_NBYTES_MLOFFYES_SMLOE_SHIFT\fP)) & \fBDMA_NBYTES_MLOFFYES_SMLOE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_NBYTES_MLOFFYES_COUNT\fP   (16U)"
.br
.in -1c
.SS "SLAST - TCD Last Source Address Adjustment"

.in +1c
.ti -1c
.RI "#define \fBDMA_SLAST_SLAST_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBDMA_SLAST_SLAST_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_SLAST_SLAST\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_SLAST_SLAST_SHIFT\fP)) & \fBDMA_SLAST_SLAST_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_SLAST_COUNT\fP   (16U)"
.br
.in -1c
.SS "DADDR - TCD Destination Address"

.in +1c
.ti -1c
.RI "#define \fBDMA_DADDR_DADDR_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBDMA_DADDR_DADDR_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DADDR_DADDR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_DADDR_DADDR_SHIFT\fP)) & \fBDMA_DADDR_DADDR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DADDR_COUNT\fP   (16U)"
.br
.in -1c
.SS "DOFF - TCD Signed Destination Address Offset"

.in +1c
.ti -1c
.RI "#define \fBDMA_DOFF_DOFF_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBDMA_DOFF_DOFF_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DOFF_DOFF\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_DOFF_DOFF_SHIFT\fP)) & \fBDMA_DOFF_DOFF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DOFF_COUNT\fP   (16U)"
.br
.in -1c
.SS "CITER_ELINKNO - TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled)"

.in +1c
.ti -1c
.RI "#define \fBDMA_CITER_ELINKNO_CITER_MASK\fP   (0x7FFFU)"
.br
.ti -1c
.RI "#define \fBDMA_CITER_ELINKNO_CITER_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_CITER_ELINKNO_CITER\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CITER_ELINKNO_CITER_SHIFT\fP)) & \fBDMA_CITER_ELINKNO_CITER_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CITER_ELINKNO_ELINK_MASK\fP   (0x8000U)"
.br
.ti -1c
.RI "#define \fBDMA_CITER_ELINKNO_ELINK_SHIFT\fP   (15U)"
.br
.ti -1c
.RI "#define \fBDMA_CITER_ELINKNO_ELINK\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CITER_ELINKNO_ELINK_SHIFT\fP)) & \fBDMA_CITER_ELINKNO_ELINK_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CITER_ELINKNO_COUNT\fP   (16U)"
.br
.in -1c
.SS "CITER_ELINKYES - TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled)"

.in +1c
.ti -1c
.RI "#define \fBDMA_CITER_ELINKYES_CITER_MASK\fP   (0x1FFU)"
.br
.ti -1c
.RI "#define \fBDMA_CITER_ELINKYES_CITER_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_CITER_ELINKYES_CITER\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CITER_ELINKYES_CITER_SHIFT\fP)) & \fBDMA_CITER_ELINKYES_CITER_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CITER_ELINKYES_LINKCH_MASK\fP   (0x1E00U)"
.br
.ti -1c
.RI "#define \fBDMA_CITER_ELINKYES_LINKCH_SHIFT\fP   (9U)"
.br
.ti -1c
.RI "#define \fBDMA_CITER_ELINKYES_LINKCH\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CITER_ELINKYES_LINKCH_SHIFT\fP)) & \fBDMA_CITER_ELINKYES_LINKCH_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CITER_ELINKYES_ELINK_MASK\fP   (0x8000U)"
.br
.ti -1c
.RI "#define \fBDMA_CITER_ELINKYES_ELINK_SHIFT\fP   (15U)"
.br
.ti -1c
.RI "#define \fBDMA_CITER_ELINKYES_ELINK\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CITER_ELINKYES_ELINK_SHIFT\fP)) & \fBDMA_CITER_ELINKYES_ELINK_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CITER_ELINKYES_COUNT\fP   (16U)"
.br
.in -1c
.SS "DLAST_SGA - TCD Last Destination Address Adjustment/Scatter Gather Address"

.in +1c
.ti -1c
.RI "#define \fBDMA_DLAST_SGA_DLASTSGA_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBDMA_DLAST_SGA_DLASTSGA_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_DLAST_SGA_DLASTSGA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_DLAST_SGA_DLASTSGA_SHIFT\fP)) & \fBDMA_DLAST_SGA_DLASTSGA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_DLAST_SGA_COUNT\fP   (16U)"
.br
.in -1c
.SS "CSR - TCD Control and Status"

.in +1c
.ti -1c
.RI "#define \fBDMA_CSR_START_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_START_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_START\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_START_SHIFT\fP)) & \fBDMA_CSR_START_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_INTMAJOR_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_INTMAJOR_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_INTMAJOR\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_INTMAJOR_SHIFT\fP)) & \fBDMA_CSR_INTMAJOR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_INTHALF_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_INTHALF_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_INTHALF\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_INTHALF_SHIFT\fP)) & \fBDMA_CSR_INTHALF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_DREQ_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_DREQ_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_DREQ\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_DREQ_SHIFT\fP)) & \fBDMA_CSR_DREQ_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_ESG_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_ESG_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_ESG\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_ESG_SHIFT\fP)) & \fBDMA_CSR_ESG_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_MAJORELINK_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_MAJORELINK_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_MAJORELINK\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_MAJORELINK_SHIFT\fP)) & \fBDMA_CSR_MAJORELINK_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_ACTIVE_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_ACTIVE_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_ACTIVE\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_ACTIVE_SHIFT\fP)) & \fBDMA_CSR_ACTIVE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_DONE_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_DONE_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_DONE\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_DONE_SHIFT\fP)) & \fBDMA_CSR_DONE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_MAJORLINKCH_MASK\fP   (0xF00U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_MAJORLINKCH_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_MAJORLINKCH\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_MAJORLINKCH_SHIFT\fP)) & \fBDMA_CSR_MAJORLINKCH_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_BWC_MASK\fP   (0xC000U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_BWC_SHIFT\fP   (14U)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_BWC\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_BWC_SHIFT\fP)) & \fBDMA_CSR_BWC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_CSR_COUNT\fP   (16U)"
.br
.in -1c
.SS "BITER_ELINKNO - TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled)"

.in +1c
.ti -1c
.RI "#define \fBDMA_BITER_ELINKNO_BITER_MASK\fP   (0x7FFFU)"
.br
.ti -1c
.RI "#define \fBDMA_BITER_ELINKNO_BITER_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_BITER_ELINKNO_BITER\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_BITER_ELINKNO_BITER_SHIFT\fP)) & \fBDMA_BITER_ELINKNO_BITER_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_BITER_ELINKNO_ELINK_MASK\fP   (0x8000U)"
.br
.ti -1c
.RI "#define \fBDMA_BITER_ELINKNO_ELINK_SHIFT\fP   (15U)"
.br
.ti -1c
.RI "#define \fBDMA_BITER_ELINKNO_ELINK\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_BITER_ELINKNO_ELINK_SHIFT\fP)) & \fBDMA_BITER_ELINKNO_ELINK_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_BITER_ELINKNO_COUNT\fP   (16U)"
.br
.in -1c
.SS "BITER_ELINKYES - TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled)"

.in +1c
.ti -1c
.RI "#define \fBDMA_BITER_ELINKYES_BITER_MASK\fP   (0x1FFU)"
.br
.ti -1c
.RI "#define \fBDMA_BITER_ELINKYES_BITER_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDMA_BITER_ELINKYES_BITER\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_BITER_ELINKYES_BITER_SHIFT\fP)) & \fBDMA_BITER_ELINKYES_BITER_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_BITER_ELINKYES_LINKCH_MASK\fP   (0x1E00U)"
.br
.ti -1c
.RI "#define \fBDMA_BITER_ELINKYES_LINKCH_SHIFT\fP   (9U)"
.br
.ti -1c
.RI "#define \fBDMA_BITER_ELINKYES_LINKCH\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_BITER_ELINKYES_LINKCH_SHIFT\fP)) & \fBDMA_BITER_ELINKYES_LINKCH_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_BITER_ELINKYES_ELINK_MASK\fP   (0x8000U)"
.br
.ti -1c
.RI "#define \fBDMA_BITER_ELINKYES_ELINK_SHIFT\fP   (15U)"
.br
.ti -1c
.RI "#define \fBDMA_BITER_ELINKYES_ELINK\fP(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_BITER_ELINKYES_ELINK_SHIFT\fP)) & \fBDMA_BITER_ELINKYES_ELINK_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDMA_BITER_ELINKYES_COUNT\fP   (16U)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define DMA0   ((\fBDMA_Type\fP *)\fBDMA_BASE\fP)"
Peripheral DMA base pointer 
.SS "#define DMA_ATTR_COUNT   (16U)"

.SS "#define DMA_ATTR_DMOD(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_ATTR_DMOD_SHIFT\fP)) & \fBDMA_ATTR_DMOD_MASK\fP)"

.SS "#define DMA_ATTR_DMOD_MASK   (0xF8U)"

.SS "#define DMA_ATTR_DMOD_SHIFT   (3U)"

.SS "#define DMA_ATTR_DSIZE(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_ATTR_DSIZE_SHIFT\fP)) & \fBDMA_ATTR_DSIZE_MASK\fP)"

.SS "#define DMA_ATTR_DSIZE_MASK   (0x7U)"

.SS "#define DMA_ATTR_DSIZE_SHIFT   (0U)"

.SS "#define DMA_ATTR_SMOD(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_ATTR_SMOD_SHIFT\fP)) & \fBDMA_ATTR_SMOD_MASK\fP)"

.SS "#define DMA_ATTR_SMOD_MASK   (0xF800U)"

.SS "#define DMA_ATTR_SMOD_SHIFT   (11U)"

.SS "#define DMA_ATTR_SSIZE(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_ATTR_SSIZE_SHIFT\fP)) & \fBDMA_ATTR_SSIZE_MASK\fP)"

.SS "#define DMA_ATTR_SSIZE_MASK   (0x700U)"

.SS "#define DMA_ATTR_SSIZE_SHIFT   (8U)"

.SS "#define DMA_BASE   (0x40008000u)"
Peripheral DMA base address 
.SS "#define DMA_BASE_ADDRS   { \fBDMA_BASE\fP }"
Array initializer of DMA peripheral base addresses 
.SS "#define DMA_BASE_PTRS   { \fBDMA0\fP }"
Array initializer of DMA peripheral base pointers 
.SS "#define DMA_BITER_ELINKNO_BITER(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_BITER_ELINKNO_BITER_SHIFT\fP)) & \fBDMA_BITER_ELINKNO_BITER_MASK\fP)"

.SS "#define DMA_BITER_ELINKNO_BITER_MASK   (0x7FFFU)"

.SS "#define DMA_BITER_ELINKNO_BITER_SHIFT   (0U)"

.SS "#define DMA_BITER_ELINKNO_COUNT   (16U)"

.SS "#define DMA_BITER_ELINKNO_ELINK(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_BITER_ELINKNO_ELINK_SHIFT\fP)) & \fBDMA_BITER_ELINKNO_ELINK_MASK\fP)"

.SS "#define DMA_BITER_ELINKNO_ELINK_MASK   (0x8000U)"

.SS "#define DMA_BITER_ELINKNO_ELINK_SHIFT   (15U)"

.SS "#define DMA_BITER_ELINKYES_BITER(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_BITER_ELINKYES_BITER_SHIFT\fP)) & \fBDMA_BITER_ELINKYES_BITER_MASK\fP)"

.SS "#define DMA_BITER_ELINKYES_BITER_MASK   (0x1FFU)"

.SS "#define DMA_BITER_ELINKYES_BITER_SHIFT   (0U)"

.SS "#define DMA_BITER_ELINKYES_COUNT   (16U)"

.SS "#define DMA_BITER_ELINKYES_ELINK(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_BITER_ELINKYES_ELINK_SHIFT\fP)) & \fBDMA_BITER_ELINKYES_ELINK_MASK\fP)"

.SS "#define DMA_BITER_ELINKYES_ELINK_MASK   (0x8000U)"

.SS "#define DMA_BITER_ELINKYES_ELINK_SHIFT   (15U)"

.SS "#define DMA_BITER_ELINKYES_LINKCH(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_BITER_ELINKYES_LINKCH_SHIFT\fP)) & \fBDMA_BITER_ELINKYES_LINKCH_MASK\fP)"

.SS "#define DMA_BITER_ELINKYES_LINKCH_MASK   (0x1E00U)"

.SS "#define DMA_BITER_ELINKYES_LINKCH_SHIFT   (9U)"

.SS "#define DMA_CDNE_CADN(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CDNE_CADN_SHIFT\fP)) & \fBDMA_CDNE_CADN_MASK\fP)"

.SS "#define DMA_CDNE_CADN_MASK   (0x40U)"

.SS "#define DMA_CDNE_CADN_SHIFT   (6U)"

.SS "#define DMA_CDNE_CDNE(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CDNE_CDNE_SHIFT\fP)) & \fBDMA_CDNE_CDNE_MASK\fP)"

.SS "#define DMA_CDNE_CDNE_MASK   (0xFU)"

.SS "#define DMA_CDNE_CDNE_SHIFT   (0U)"

.SS "#define DMA_CDNE_NOP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CDNE_NOP_SHIFT\fP)) & \fBDMA_CDNE_NOP_MASK\fP)"

.SS "#define DMA_CDNE_NOP_MASK   (0x80U)"

.SS "#define DMA_CDNE_NOP_SHIFT   (7U)"

.SS "#define DMA_CEEI_CAEE(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CEEI_CAEE_SHIFT\fP)) & \fBDMA_CEEI_CAEE_MASK\fP)"

.SS "#define DMA_CEEI_CAEE_MASK   (0x40U)"

.SS "#define DMA_CEEI_CAEE_SHIFT   (6U)"

.SS "#define DMA_CEEI_CEEI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CEEI_CEEI_SHIFT\fP)) & \fBDMA_CEEI_CEEI_MASK\fP)"

.SS "#define DMA_CEEI_CEEI_MASK   (0xFU)"

.SS "#define DMA_CEEI_CEEI_SHIFT   (0U)"

.SS "#define DMA_CEEI_NOP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CEEI_NOP_SHIFT\fP)) & \fBDMA_CEEI_NOP_MASK\fP)"

.SS "#define DMA_CEEI_NOP_MASK   (0x80U)"

.SS "#define DMA_CEEI_NOP_SHIFT   (7U)"

.SS "#define DMA_CERQ_CAER(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CERQ_CAER_SHIFT\fP)) & \fBDMA_CERQ_CAER_MASK\fP)"

.SS "#define DMA_CERQ_CAER_MASK   (0x40U)"

.SS "#define DMA_CERQ_CAER_SHIFT   (6U)"

.SS "#define DMA_CERQ_CERQ(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CERQ_CERQ_SHIFT\fP)) & \fBDMA_CERQ_CERQ_MASK\fP)"

.SS "#define DMA_CERQ_CERQ_MASK   (0xFU)"

.SS "#define DMA_CERQ_CERQ_SHIFT   (0U)"

.SS "#define DMA_CERQ_NOP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CERQ_NOP_SHIFT\fP)) & \fBDMA_CERQ_NOP_MASK\fP)"

.SS "#define DMA_CERQ_NOP_MASK   (0x80U)"

.SS "#define DMA_CERQ_NOP_SHIFT   (7U)"

.SS "#define DMA_CERR_CAEI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CERR_CAEI_SHIFT\fP)) & \fBDMA_CERR_CAEI_MASK\fP)"

.SS "#define DMA_CERR_CAEI_MASK   (0x40U)"

.SS "#define DMA_CERR_CAEI_SHIFT   (6U)"

.SS "#define DMA_CERR_CERR(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CERR_CERR_SHIFT\fP)) & \fBDMA_CERR_CERR_MASK\fP)"

.SS "#define DMA_CERR_CERR_MASK   (0xFU)"

.SS "#define DMA_CERR_CERR_SHIFT   (0U)"

.SS "#define DMA_CERR_NOP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CERR_NOP_SHIFT\fP)) & \fBDMA_CERR_NOP_MASK\fP)"

.SS "#define DMA_CERR_NOP_MASK   (0x80U)"

.SS "#define DMA_CERR_NOP_SHIFT   (7U)"

.SS "#define DMA_CHN_IRQS   { { \fBDMA0_IRQn\fP, \fBDMA1_IRQn\fP, \fBDMA2_IRQn\fP, \fBDMA3_IRQn\fP, \fBDMA4_IRQn\fP, \fBDMA5_IRQn\fP, \fBDMA6_IRQn\fP, \fBDMA7_IRQn\fP, \fBDMA8_IRQn\fP, \fBDMA9_IRQn\fP, \fBDMA10_IRQn\fP, \fBDMA11_IRQn\fP, \fBDMA12_IRQn\fP, \fBDMA13_IRQn\fP, \fBDMA14_IRQn\fP, \fBDMA15_IRQn\fP } }"
Interrupt vectors for the DMA peripheral type 
.SS "#define DMA_CINT_CAIR(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CINT_CAIR_SHIFT\fP)) & \fBDMA_CINT_CAIR_MASK\fP)"

.SS "#define DMA_CINT_CAIR_MASK   (0x40U)"

.SS "#define DMA_CINT_CAIR_SHIFT   (6U)"

.SS "#define DMA_CINT_CINT(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CINT_CINT_SHIFT\fP)) & \fBDMA_CINT_CINT_MASK\fP)"

.SS "#define DMA_CINT_CINT_MASK   (0xFU)"

.SS "#define DMA_CINT_CINT_SHIFT   (0U)"

.SS "#define DMA_CINT_NOP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_CINT_NOP_SHIFT\fP)) & \fBDMA_CINT_NOP_MASK\fP)"

.SS "#define DMA_CINT_NOP_MASK   (0x80U)"

.SS "#define DMA_CINT_NOP_SHIFT   (7U)"

.SS "#define DMA_CITER_ELINKNO_CITER(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CITER_ELINKNO_CITER_SHIFT\fP)) & \fBDMA_CITER_ELINKNO_CITER_MASK\fP)"

.SS "#define DMA_CITER_ELINKNO_CITER_MASK   (0x7FFFU)"

.SS "#define DMA_CITER_ELINKNO_CITER_SHIFT   (0U)"

.SS "#define DMA_CITER_ELINKNO_COUNT   (16U)"

.SS "#define DMA_CITER_ELINKNO_ELINK(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CITER_ELINKNO_ELINK_SHIFT\fP)) & \fBDMA_CITER_ELINKNO_ELINK_MASK\fP)"

.SS "#define DMA_CITER_ELINKNO_ELINK_MASK   (0x8000U)"

.SS "#define DMA_CITER_ELINKNO_ELINK_SHIFT   (15U)"

.SS "#define DMA_CITER_ELINKYES_CITER(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CITER_ELINKYES_CITER_SHIFT\fP)) & \fBDMA_CITER_ELINKYES_CITER_MASK\fP)"

.SS "#define DMA_CITER_ELINKYES_CITER_MASK   (0x1FFU)"

.SS "#define DMA_CITER_ELINKYES_CITER_SHIFT   (0U)"

.SS "#define DMA_CITER_ELINKYES_COUNT   (16U)"

.SS "#define DMA_CITER_ELINKYES_ELINK(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CITER_ELINKYES_ELINK_SHIFT\fP)) & \fBDMA_CITER_ELINKYES_ELINK_MASK\fP)"

.SS "#define DMA_CITER_ELINKYES_ELINK_MASK   (0x8000U)"

.SS "#define DMA_CITER_ELINKYES_ELINK_SHIFT   (15U)"

.SS "#define DMA_CITER_ELINKYES_LINKCH(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CITER_ELINKYES_LINKCH_SHIFT\fP)) & \fBDMA_CITER_ELINKYES_LINKCH_MASK\fP)"

.SS "#define DMA_CITER_ELINKYES_LINKCH_MASK   (0x1E00U)"

.SS "#define DMA_CITER_ELINKYES_LINKCH_SHIFT   (9U)"

.SS "#define DMA_CR_CLM(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_CR_CLM_SHIFT\fP)) & \fBDMA_CR_CLM_MASK\fP)"

.SS "#define DMA_CR_CLM_MASK   (0x40U)"

.SS "#define DMA_CR_CLM_SHIFT   (6U)"

.SS "#define DMA_CR_CX(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_CR_CX_SHIFT\fP)) & \fBDMA_CR_CX_MASK\fP)"

.SS "#define DMA_CR_CX_MASK   (0x20000U)"

.SS "#define DMA_CR_CX_SHIFT   (17U)"

.SS "#define DMA_CR_ECX(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_CR_ECX_SHIFT\fP)) & \fBDMA_CR_ECX_MASK\fP)"

.SS "#define DMA_CR_ECX_MASK   (0x10000U)"

.SS "#define DMA_CR_ECX_SHIFT   (16U)"

.SS "#define DMA_CR_EDBG(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_CR_EDBG_SHIFT\fP)) & \fBDMA_CR_EDBG_MASK\fP)"

.SS "#define DMA_CR_EDBG_MASK   (0x2U)"

.SS "#define DMA_CR_EDBG_SHIFT   (1U)"

.SS "#define DMA_CR_EMLM(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_CR_EMLM_SHIFT\fP)) & \fBDMA_CR_EMLM_MASK\fP)"

.SS "#define DMA_CR_EMLM_MASK   (0x80U)"

.SS "#define DMA_CR_EMLM_SHIFT   (7U)"

.SS "#define DMA_CR_ERCA(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_CR_ERCA_SHIFT\fP)) & \fBDMA_CR_ERCA_MASK\fP)"

.SS "#define DMA_CR_ERCA_MASK   (0x4U)"

.SS "#define DMA_CR_ERCA_SHIFT   (2U)"

.SS "#define DMA_CR_HALT(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_CR_HALT_SHIFT\fP)) & \fBDMA_CR_HALT_MASK\fP)"

.SS "#define DMA_CR_HALT_MASK   (0x20U)"

.SS "#define DMA_CR_HALT_SHIFT   (5U)"

.SS "#define DMA_CR_HOE(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_CR_HOE_SHIFT\fP)) & \fBDMA_CR_HOE_MASK\fP)"

.SS "#define DMA_CR_HOE_MASK   (0x10U)"

.SS "#define DMA_CR_HOE_SHIFT   (4U)"

.SS "#define DMA_CSR_ACTIVE(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_ACTIVE_SHIFT\fP)) & \fBDMA_CSR_ACTIVE_MASK\fP)"

.SS "#define DMA_CSR_ACTIVE_MASK   (0x40U)"

.SS "#define DMA_CSR_ACTIVE_SHIFT   (6U)"

.SS "#define DMA_CSR_BWC(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_BWC_SHIFT\fP)) & \fBDMA_CSR_BWC_MASK\fP)"

.SS "#define DMA_CSR_BWC_MASK   (0xC000U)"

.SS "#define DMA_CSR_BWC_SHIFT   (14U)"

.SS "#define DMA_CSR_COUNT   (16U)"

.SS "#define DMA_CSR_DONE(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_DONE_SHIFT\fP)) & \fBDMA_CSR_DONE_MASK\fP)"

.SS "#define DMA_CSR_DONE_MASK   (0x80U)"

.SS "#define DMA_CSR_DONE_SHIFT   (7U)"

.SS "#define DMA_CSR_DREQ(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_DREQ_SHIFT\fP)) & \fBDMA_CSR_DREQ_MASK\fP)"

.SS "#define DMA_CSR_DREQ_MASK   (0x8U)"

.SS "#define DMA_CSR_DREQ_SHIFT   (3U)"

.SS "#define DMA_CSR_ESG(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_ESG_SHIFT\fP)) & \fBDMA_CSR_ESG_MASK\fP)"

.SS "#define DMA_CSR_ESG_MASK   (0x10U)"

.SS "#define DMA_CSR_ESG_SHIFT   (4U)"

.SS "#define DMA_CSR_INTHALF(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_INTHALF_SHIFT\fP)) & \fBDMA_CSR_INTHALF_MASK\fP)"

.SS "#define DMA_CSR_INTHALF_MASK   (0x4U)"

.SS "#define DMA_CSR_INTHALF_SHIFT   (2U)"

.SS "#define DMA_CSR_INTMAJOR(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_INTMAJOR_SHIFT\fP)) & \fBDMA_CSR_INTMAJOR_MASK\fP)"

.SS "#define DMA_CSR_INTMAJOR_MASK   (0x2U)"

.SS "#define DMA_CSR_INTMAJOR_SHIFT   (1U)"

.SS "#define DMA_CSR_MAJORELINK(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_MAJORELINK_SHIFT\fP)) & \fBDMA_CSR_MAJORELINK_MASK\fP)"

.SS "#define DMA_CSR_MAJORELINK_MASK   (0x20U)"

.SS "#define DMA_CSR_MAJORELINK_SHIFT   (5U)"

.SS "#define DMA_CSR_MAJORLINKCH(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_MAJORLINKCH_SHIFT\fP)) & \fBDMA_CSR_MAJORLINKCH_MASK\fP)"

.SS "#define DMA_CSR_MAJORLINKCH_MASK   (0xF00U)"

.SS "#define DMA_CSR_MAJORLINKCH_SHIFT   (8U)"

.SS "#define DMA_CSR_START(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_CSR_START_SHIFT\fP)) & \fBDMA_CSR_START_MASK\fP)"

.SS "#define DMA_CSR_START_MASK   (0x1U)"

.SS "#define DMA_CSR_START_SHIFT   (0U)"

.SS "#define DMA_DADDR_COUNT   (16U)"

.SS "#define DMA_DADDR_DADDR(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_DADDR_DADDR_SHIFT\fP)) & \fBDMA_DADDR_DADDR_MASK\fP)"

.SS "#define DMA_DADDR_DADDR_MASK   (0xFFFFFFFFU)"

.SS "#define DMA_DADDR_DADDR_SHIFT   (0U)"

.SS "#define DMA_DCHPRI0_CHPRI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI0_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI0_CHPRI_MASK\fP)"

.SS "#define DMA_DCHPRI0_CHPRI_MASK   (0xFU)"

.SS "#define DMA_DCHPRI0_CHPRI_SHIFT   (0U)"

.SS "#define DMA_DCHPRI0_DPA(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI0_DPA_SHIFT\fP)) & \fBDMA_DCHPRI0_DPA_MASK\fP)"

.SS "#define DMA_DCHPRI0_DPA_MASK   (0x40U)"

.SS "#define DMA_DCHPRI0_DPA_SHIFT   (6U)"

.SS "#define DMA_DCHPRI0_ECP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI0_ECP_SHIFT\fP)) & \fBDMA_DCHPRI0_ECP_MASK\fP)"

.SS "#define DMA_DCHPRI0_ECP_MASK   (0x80U)"

.SS "#define DMA_DCHPRI0_ECP_SHIFT   (7U)"

.SS "#define DMA_DCHPRI10_CHPRI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI10_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI10_CHPRI_MASK\fP)"

.SS "#define DMA_DCHPRI10_CHPRI_MASK   (0xFU)"

.SS "#define DMA_DCHPRI10_CHPRI_SHIFT   (0U)"

.SS "#define DMA_DCHPRI10_DPA(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI10_DPA_SHIFT\fP)) & \fBDMA_DCHPRI10_DPA_MASK\fP)"

.SS "#define DMA_DCHPRI10_DPA_MASK   (0x40U)"

.SS "#define DMA_DCHPRI10_DPA_SHIFT   (6U)"

.SS "#define DMA_DCHPRI10_ECP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI10_ECP_SHIFT\fP)) & \fBDMA_DCHPRI10_ECP_MASK\fP)"

.SS "#define DMA_DCHPRI10_ECP_MASK   (0x80U)"

.SS "#define DMA_DCHPRI10_ECP_SHIFT   (7U)"

.SS "#define DMA_DCHPRI11_CHPRI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI11_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI11_CHPRI_MASK\fP)"

.SS "#define DMA_DCHPRI11_CHPRI_MASK   (0xFU)"

.SS "#define DMA_DCHPRI11_CHPRI_SHIFT   (0U)"

.SS "#define DMA_DCHPRI11_DPA(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI11_DPA_SHIFT\fP)) & \fBDMA_DCHPRI11_DPA_MASK\fP)"

.SS "#define DMA_DCHPRI11_DPA_MASK   (0x40U)"

.SS "#define DMA_DCHPRI11_DPA_SHIFT   (6U)"

.SS "#define DMA_DCHPRI11_ECP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI11_ECP_SHIFT\fP)) & \fBDMA_DCHPRI11_ECP_MASK\fP)"

.SS "#define DMA_DCHPRI11_ECP_MASK   (0x80U)"

.SS "#define DMA_DCHPRI11_ECP_SHIFT   (7U)"

.SS "#define DMA_DCHPRI12_CHPRI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI12_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI12_CHPRI_MASK\fP)"

.SS "#define DMA_DCHPRI12_CHPRI_MASK   (0xFU)"

.SS "#define DMA_DCHPRI12_CHPRI_SHIFT   (0U)"

.SS "#define DMA_DCHPRI12_DPA(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI12_DPA_SHIFT\fP)) & \fBDMA_DCHPRI12_DPA_MASK\fP)"

.SS "#define DMA_DCHPRI12_DPA_MASK   (0x40U)"

.SS "#define DMA_DCHPRI12_DPA_SHIFT   (6U)"

.SS "#define DMA_DCHPRI12_ECP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI12_ECP_SHIFT\fP)) & \fBDMA_DCHPRI12_ECP_MASK\fP)"

.SS "#define DMA_DCHPRI12_ECP_MASK   (0x80U)"

.SS "#define DMA_DCHPRI12_ECP_SHIFT   (7U)"

.SS "#define DMA_DCHPRI13_CHPRI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI13_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI13_CHPRI_MASK\fP)"

.SS "#define DMA_DCHPRI13_CHPRI_MASK   (0xFU)"

.SS "#define DMA_DCHPRI13_CHPRI_SHIFT   (0U)"

.SS "#define DMA_DCHPRI13_DPA(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI13_DPA_SHIFT\fP)) & \fBDMA_DCHPRI13_DPA_MASK\fP)"

.SS "#define DMA_DCHPRI13_DPA_MASK   (0x40U)"

.SS "#define DMA_DCHPRI13_DPA_SHIFT   (6U)"

.SS "#define DMA_DCHPRI13_ECP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI13_ECP_SHIFT\fP)) & \fBDMA_DCHPRI13_ECP_MASK\fP)"

.SS "#define DMA_DCHPRI13_ECP_MASK   (0x80U)"

.SS "#define DMA_DCHPRI13_ECP_SHIFT   (7U)"

.SS "#define DMA_DCHPRI14_CHPRI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI14_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI14_CHPRI_MASK\fP)"

.SS "#define DMA_DCHPRI14_CHPRI_MASK   (0xFU)"

.SS "#define DMA_DCHPRI14_CHPRI_SHIFT   (0U)"

.SS "#define DMA_DCHPRI14_DPA(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI14_DPA_SHIFT\fP)) & \fBDMA_DCHPRI14_DPA_MASK\fP)"

.SS "#define DMA_DCHPRI14_DPA_MASK   (0x40U)"

.SS "#define DMA_DCHPRI14_DPA_SHIFT   (6U)"

.SS "#define DMA_DCHPRI14_ECP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI14_ECP_SHIFT\fP)) & \fBDMA_DCHPRI14_ECP_MASK\fP)"

.SS "#define DMA_DCHPRI14_ECP_MASK   (0x80U)"

.SS "#define DMA_DCHPRI14_ECP_SHIFT   (7U)"

.SS "#define DMA_DCHPRI15_CHPRI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI15_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI15_CHPRI_MASK\fP)"

.SS "#define DMA_DCHPRI15_CHPRI_MASK   (0xFU)"

.SS "#define DMA_DCHPRI15_CHPRI_SHIFT   (0U)"

.SS "#define DMA_DCHPRI15_DPA(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI15_DPA_SHIFT\fP)) & \fBDMA_DCHPRI15_DPA_MASK\fP)"

.SS "#define DMA_DCHPRI15_DPA_MASK   (0x40U)"

.SS "#define DMA_DCHPRI15_DPA_SHIFT   (6U)"

.SS "#define DMA_DCHPRI15_ECP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI15_ECP_SHIFT\fP)) & \fBDMA_DCHPRI15_ECP_MASK\fP)"

.SS "#define DMA_DCHPRI15_ECP_MASK   (0x80U)"

.SS "#define DMA_DCHPRI15_ECP_SHIFT   (7U)"

.SS "#define DMA_DCHPRI1_CHPRI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI1_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI1_CHPRI_MASK\fP)"

.SS "#define DMA_DCHPRI1_CHPRI_MASK   (0xFU)"

.SS "#define DMA_DCHPRI1_CHPRI_SHIFT   (0U)"

.SS "#define DMA_DCHPRI1_DPA(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI1_DPA_SHIFT\fP)) & \fBDMA_DCHPRI1_DPA_MASK\fP)"

.SS "#define DMA_DCHPRI1_DPA_MASK   (0x40U)"

.SS "#define DMA_DCHPRI1_DPA_SHIFT   (6U)"

.SS "#define DMA_DCHPRI1_ECP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI1_ECP_SHIFT\fP)) & \fBDMA_DCHPRI1_ECP_MASK\fP)"

.SS "#define DMA_DCHPRI1_ECP_MASK   (0x80U)"

.SS "#define DMA_DCHPRI1_ECP_SHIFT   (7U)"

.SS "#define DMA_DCHPRI2_CHPRI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI2_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI2_CHPRI_MASK\fP)"

.SS "#define DMA_DCHPRI2_CHPRI_MASK   (0xFU)"

.SS "#define DMA_DCHPRI2_CHPRI_SHIFT   (0U)"

.SS "#define DMA_DCHPRI2_DPA(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI2_DPA_SHIFT\fP)) & \fBDMA_DCHPRI2_DPA_MASK\fP)"

.SS "#define DMA_DCHPRI2_DPA_MASK   (0x40U)"

.SS "#define DMA_DCHPRI2_DPA_SHIFT   (6U)"

.SS "#define DMA_DCHPRI2_ECP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI2_ECP_SHIFT\fP)) & \fBDMA_DCHPRI2_ECP_MASK\fP)"

.SS "#define DMA_DCHPRI2_ECP_MASK   (0x80U)"

.SS "#define DMA_DCHPRI2_ECP_SHIFT   (7U)"

.SS "#define DMA_DCHPRI3_CHPRI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI3_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI3_CHPRI_MASK\fP)"

.SS "#define DMA_DCHPRI3_CHPRI_MASK   (0xFU)"

.SS "#define DMA_DCHPRI3_CHPRI_SHIFT   (0U)"

.SS "#define DMA_DCHPRI3_DPA(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI3_DPA_SHIFT\fP)) & \fBDMA_DCHPRI3_DPA_MASK\fP)"

.SS "#define DMA_DCHPRI3_DPA_MASK   (0x40U)"

.SS "#define DMA_DCHPRI3_DPA_SHIFT   (6U)"

.SS "#define DMA_DCHPRI3_ECP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI3_ECP_SHIFT\fP)) & \fBDMA_DCHPRI3_ECP_MASK\fP)"

.SS "#define DMA_DCHPRI3_ECP_MASK   (0x80U)"

.SS "#define DMA_DCHPRI3_ECP_SHIFT   (7U)"

.SS "#define DMA_DCHPRI4_CHPRI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI4_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI4_CHPRI_MASK\fP)"

.SS "#define DMA_DCHPRI4_CHPRI_MASK   (0xFU)"

.SS "#define DMA_DCHPRI4_CHPRI_SHIFT   (0U)"

.SS "#define DMA_DCHPRI4_DPA(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI4_DPA_SHIFT\fP)) & \fBDMA_DCHPRI4_DPA_MASK\fP)"

.SS "#define DMA_DCHPRI4_DPA_MASK   (0x40U)"

.SS "#define DMA_DCHPRI4_DPA_SHIFT   (6U)"

.SS "#define DMA_DCHPRI4_ECP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI4_ECP_SHIFT\fP)) & \fBDMA_DCHPRI4_ECP_MASK\fP)"

.SS "#define DMA_DCHPRI4_ECP_MASK   (0x80U)"

.SS "#define DMA_DCHPRI4_ECP_SHIFT   (7U)"

.SS "#define DMA_DCHPRI5_CHPRI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI5_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI5_CHPRI_MASK\fP)"

.SS "#define DMA_DCHPRI5_CHPRI_MASK   (0xFU)"

.SS "#define DMA_DCHPRI5_CHPRI_SHIFT   (0U)"

.SS "#define DMA_DCHPRI5_DPA(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI5_DPA_SHIFT\fP)) & \fBDMA_DCHPRI5_DPA_MASK\fP)"

.SS "#define DMA_DCHPRI5_DPA_MASK   (0x40U)"

.SS "#define DMA_DCHPRI5_DPA_SHIFT   (6U)"

.SS "#define DMA_DCHPRI5_ECP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI5_ECP_SHIFT\fP)) & \fBDMA_DCHPRI5_ECP_MASK\fP)"

.SS "#define DMA_DCHPRI5_ECP_MASK   (0x80U)"

.SS "#define DMA_DCHPRI5_ECP_SHIFT   (7U)"

.SS "#define DMA_DCHPRI6_CHPRI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI6_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI6_CHPRI_MASK\fP)"

.SS "#define DMA_DCHPRI6_CHPRI_MASK   (0xFU)"

.SS "#define DMA_DCHPRI6_CHPRI_SHIFT   (0U)"

.SS "#define DMA_DCHPRI6_DPA(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI6_DPA_SHIFT\fP)) & \fBDMA_DCHPRI6_DPA_MASK\fP)"

.SS "#define DMA_DCHPRI6_DPA_MASK   (0x40U)"

.SS "#define DMA_DCHPRI6_DPA_SHIFT   (6U)"

.SS "#define DMA_DCHPRI6_ECP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI6_ECP_SHIFT\fP)) & \fBDMA_DCHPRI6_ECP_MASK\fP)"

.SS "#define DMA_DCHPRI6_ECP_MASK   (0x80U)"

.SS "#define DMA_DCHPRI6_ECP_SHIFT   (7U)"

.SS "#define DMA_DCHPRI7_CHPRI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI7_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI7_CHPRI_MASK\fP)"

.SS "#define DMA_DCHPRI7_CHPRI_MASK   (0xFU)"

.SS "#define DMA_DCHPRI7_CHPRI_SHIFT   (0U)"

.SS "#define DMA_DCHPRI7_DPA(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI7_DPA_SHIFT\fP)) & \fBDMA_DCHPRI7_DPA_MASK\fP)"

.SS "#define DMA_DCHPRI7_DPA_MASK   (0x40U)"

.SS "#define DMA_DCHPRI7_DPA_SHIFT   (6U)"

.SS "#define DMA_DCHPRI7_ECP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI7_ECP_SHIFT\fP)) & \fBDMA_DCHPRI7_ECP_MASK\fP)"

.SS "#define DMA_DCHPRI7_ECP_MASK   (0x80U)"

.SS "#define DMA_DCHPRI7_ECP_SHIFT   (7U)"

.SS "#define DMA_DCHPRI8_CHPRI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI8_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI8_CHPRI_MASK\fP)"

.SS "#define DMA_DCHPRI8_CHPRI_MASK   (0xFU)"

.SS "#define DMA_DCHPRI8_CHPRI_SHIFT   (0U)"

.SS "#define DMA_DCHPRI8_DPA(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI8_DPA_SHIFT\fP)) & \fBDMA_DCHPRI8_DPA_MASK\fP)"

.SS "#define DMA_DCHPRI8_DPA_MASK   (0x40U)"

.SS "#define DMA_DCHPRI8_DPA_SHIFT   (6U)"

.SS "#define DMA_DCHPRI8_ECP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI8_ECP_SHIFT\fP)) & \fBDMA_DCHPRI8_ECP_MASK\fP)"

.SS "#define DMA_DCHPRI8_ECP_MASK   (0x80U)"

.SS "#define DMA_DCHPRI8_ECP_SHIFT   (7U)"

.SS "#define DMA_DCHPRI9_CHPRI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI9_CHPRI_SHIFT\fP)) & \fBDMA_DCHPRI9_CHPRI_MASK\fP)"

.SS "#define DMA_DCHPRI9_CHPRI_MASK   (0xFU)"

.SS "#define DMA_DCHPRI9_CHPRI_SHIFT   (0U)"

.SS "#define DMA_DCHPRI9_DPA(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI9_DPA_SHIFT\fP)) & \fBDMA_DCHPRI9_DPA_MASK\fP)"

.SS "#define DMA_DCHPRI9_DPA_MASK   (0x40U)"

.SS "#define DMA_DCHPRI9_DPA_SHIFT   (6U)"

.SS "#define DMA_DCHPRI9_ECP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_DCHPRI9_ECP_SHIFT\fP)) & \fBDMA_DCHPRI9_ECP_MASK\fP)"

.SS "#define DMA_DCHPRI9_ECP_MASK   (0x80U)"

.SS "#define DMA_DCHPRI9_ECP_SHIFT   (7U)"

.SS "#define DMA_DLAST_SGA_COUNT   (16U)"

.SS "#define DMA_DLAST_SGA_DLASTSGA(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_DLAST_SGA_DLASTSGA_SHIFT\fP)) & \fBDMA_DLAST_SGA_DLASTSGA_MASK\fP)"

.SS "#define DMA_DLAST_SGA_DLASTSGA_MASK   (0xFFFFFFFFU)"

.SS "#define DMA_DLAST_SGA_DLASTSGA_SHIFT   (0U)"

.SS "#define DMA_DOFF_COUNT   (16U)"

.SS "#define DMA_DOFF_DOFF(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_DOFF_DOFF_SHIFT\fP)) & \fBDMA_DOFF_DOFF_MASK\fP)"

.SS "#define DMA_DOFF_DOFF_MASK   (0xFFFFU)"

.SS "#define DMA_DOFF_DOFF_SHIFT   (0U)"

.SS "#define DMA_EEI_EEI0(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI0_SHIFT\fP)) & \fBDMA_EEI_EEI0_MASK\fP)"

.SS "#define DMA_EEI_EEI0_MASK   (0x1U)"

.SS "#define DMA_EEI_EEI0_SHIFT   (0U)"

.SS "#define DMA_EEI_EEI1(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI1_SHIFT\fP)) & \fBDMA_EEI_EEI1_MASK\fP)"

.SS "#define DMA_EEI_EEI10(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI10_SHIFT\fP)) & \fBDMA_EEI_EEI10_MASK\fP)"

.SS "#define DMA_EEI_EEI10_MASK   (0x400U)"

.SS "#define DMA_EEI_EEI10_SHIFT   (10U)"

.SS "#define DMA_EEI_EEI11(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI11_SHIFT\fP)) & \fBDMA_EEI_EEI11_MASK\fP)"

.SS "#define DMA_EEI_EEI11_MASK   (0x800U)"

.SS "#define DMA_EEI_EEI11_SHIFT   (11U)"

.SS "#define DMA_EEI_EEI12(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI12_SHIFT\fP)) & \fBDMA_EEI_EEI12_MASK\fP)"

.SS "#define DMA_EEI_EEI12_MASK   (0x1000U)"

.SS "#define DMA_EEI_EEI12_SHIFT   (12U)"

.SS "#define DMA_EEI_EEI13(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI13_SHIFT\fP)) & \fBDMA_EEI_EEI13_MASK\fP)"

.SS "#define DMA_EEI_EEI13_MASK   (0x2000U)"

.SS "#define DMA_EEI_EEI13_SHIFT   (13U)"

.SS "#define DMA_EEI_EEI14(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI14_SHIFT\fP)) & \fBDMA_EEI_EEI14_MASK\fP)"

.SS "#define DMA_EEI_EEI14_MASK   (0x4000U)"

.SS "#define DMA_EEI_EEI14_SHIFT   (14U)"

.SS "#define DMA_EEI_EEI15(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI15_SHIFT\fP)) & \fBDMA_EEI_EEI15_MASK\fP)"

.SS "#define DMA_EEI_EEI15_MASK   (0x8000U)"

.SS "#define DMA_EEI_EEI15_SHIFT   (15U)"

.SS "#define DMA_EEI_EEI1_MASK   (0x2U)"

.SS "#define DMA_EEI_EEI1_SHIFT   (1U)"

.SS "#define DMA_EEI_EEI2(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI2_SHIFT\fP)) & \fBDMA_EEI_EEI2_MASK\fP)"

.SS "#define DMA_EEI_EEI2_MASK   (0x4U)"

.SS "#define DMA_EEI_EEI2_SHIFT   (2U)"

.SS "#define DMA_EEI_EEI3(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI3_SHIFT\fP)) & \fBDMA_EEI_EEI3_MASK\fP)"

.SS "#define DMA_EEI_EEI3_MASK   (0x8U)"

.SS "#define DMA_EEI_EEI3_SHIFT   (3U)"

.SS "#define DMA_EEI_EEI4(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI4_SHIFT\fP)) & \fBDMA_EEI_EEI4_MASK\fP)"

.SS "#define DMA_EEI_EEI4_MASK   (0x10U)"

.SS "#define DMA_EEI_EEI4_SHIFT   (4U)"

.SS "#define DMA_EEI_EEI5(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI5_SHIFT\fP)) & \fBDMA_EEI_EEI5_MASK\fP)"

.SS "#define DMA_EEI_EEI5_MASK   (0x20U)"

.SS "#define DMA_EEI_EEI5_SHIFT   (5U)"

.SS "#define DMA_EEI_EEI6(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI6_SHIFT\fP)) & \fBDMA_EEI_EEI6_MASK\fP)"

.SS "#define DMA_EEI_EEI6_MASK   (0x40U)"

.SS "#define DMA_EEI_EEI6_SHIFT   (6U)"

.SS "#define DMA_EEI_EEI7(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI7_SHIFT\fP)) & \fBDMA_EEI_EEI7_MASK\fP)"

.SS "#define DMA_EEI_EEI7_MASK   (0x80U)"

.SS "#define DMA_EEI_EEI7_SHIFT   (7U)"

.SS "#define DMA_EEI_EEI8(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI8_SHIFT\fP)) & \fBDMA_EEI_EEI8_MASK\fP)"

.SS "#define DMA_EEI_EEI8_MASK   (0x100U)"

.SS "#define DMA_EEI_EEI8_SHIFT   (8U)"

.SS "#define DMA_EEI_EEI9(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_EEI_EEI9_SHIFT\fP)) & \fBDMA_EEI_EEI9_MASK\fP)"

.SS "#define DMA_EEI_EEI9_MASK   (0x200U)"

.SS "#define DMA_EEI_EEI9_SHIFT   (9U)"

.SS "#define DMA_ERQ_ERQ0(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ0_SHIFT\fP)) & \fBDMA_ERQ_ERQ0_MASK\fP)"

.SS "#define DMA_ERQ_ERQ0_MASK   (0x1U)"

.SS "#define DMA_ERQ_ERQ0_SHIFT   (0U)"

.SS "#define DMA_ERQ_ERQ1(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ1_SHIFT\fP)) & \fBDMA_ERQ_ERQ1_MASK\fP)"

.SS "#define DMA_ERQ_ERQ10(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ10_SHIFT\fP)) & \fBDMA_ERQ_ERQ10_MASK\fP)"

.SS "#define DMA_ERQ_ERQ10_MASK   (0x400U)"

.SS "#define DMA_ERQ_ERQ10_SHIFT   (10U)"

.SS "#define DMA_ERQ_ERQ11(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ11_SHIFT\fP)) & \fBDMA_ERQ_ERQ11_MASK\fP)"

.SS "#define DMA_ERQ_ERQ11_MASK   (0x800U)"

.SS "#define DMA_ERQ_ERQ11_SHIFT   (11U)"

.SS "#define DMA_ERQ_ERQ12(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ12_SHIFT\fP)) & \fBDMA_ERQ_ERQ12_MASK\fP)"

.SS "#define DMA_ERQ_ERQ12_MASK   (0x1000U)"

.SS "#define DMA_ERQ_ERQ12_SHIFT   (12U)"

.SS "#define DMA_ERQ_ERQ13(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ13_SHIFT\fP)) & \fBDMA_ERQ_ERQ13_MASK\fP)"

.SS "#define DMA_ERQ_ERQ13_MASK   (0x2000U)"

.SS "#define DMA_ERQ_ERQ13_SHIFT   (13U)"

.SS "#define DMA_ERQ_ERQ14(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ14_SHIFT\fP)) & \fBDMA_ERQ_ERQ14_MASK\fP)"

.SS "#define DMA_ERQ_ERQ14_MASK   (0x4000U)"

.SS "#define DMA_ERQ_ERQ14_SHIFT   (14U)"

.SS "#define DMA_ERQ_ERQ15(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ15_SHIFT\fP)) & \fBDMA_ERQ_ERQ15_MASK\fP)"

.SS "#define DMA_ERQ_ERQ15_MASK   (0x8000U)"

.SS "#define DMA_ERQ_ERQ15_SHIFT   (15U)"

.SS "#define DMA_ERQ_ERQ1_MASK   (0x2U)"

.SS "#define DMA_ERQ_ERQ1_SHIFT   (1U)"

.SS "#define DMA_ERQ_ERQ2(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ2_SHIFT\fP)) & \fBDMA_ERQ_ERQ2_MASK\fP)"

.SS "#define DMA_ERQ_ERQ2_MASK   (0x4U)"

.SS "#define DMA_ERQ_ERQ2_SHIFT   (2U)"

.SS "#define DMA_ERQ_ERQ3(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ3_SHIFT\fP)) & \fBDMA_ERQ_ERQ3_MASK\fP)"

.SS "#define DMA_ERQ_ERQ3_MASK   (0x8U)"

.SS "#define DMA_ERQ_ERQ3_SHIFT   (3U)"

.SS "#define DMA_ERQ_ERQ4(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ4_SHIFT\fP)) & \fBDMA_ERQ_ERQ4_MASK\fP)"

.SS "#define DMA_ERQ_ERQ4_MASK   (0x10U)"

.SS "#define DMA_ERQ_ERQ4_SHIFT   (4U)"

.SS "#define DMA_ERQ_ERQ5(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ5_SHIFT\fP)) & \fBDMA_ERQ_ERQ5_MASK\fP)"

.SS "#define DMA_ERQ_ERQ5_MASK   (0x20U)"

.SS "#define DMA_ERQ_ERQ5_SHIFT   (5U)"

.SS "#define DMA_ERQ_ERQ6(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ6_SHIFT\fP)) & \fBDMA_ERQ_ERQ6_MASK\fP)"

.SS "#define DMA_ERQ_ERQ6_MASK   (0x40U)"

.SS "#define DMA_ERQ_ERQ6_SHIFT   (6U)"

.SS "#define DMA_ERQ_ERQ7(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ7_SHIFT\fP)) & \fBDMA_ERQ_ERQ7_MASK\fP)"

.SS "#define DMA_ERQ_ERQ7_MASK   (0x80U)"

.SS "#define DMA_ERQ_ERQ7_SHIFT   (7U)"

.SS "#define DMA_ERQ_ERQ8(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ8_SHIFT\fP)) & \fBDMA_ERQ_ERQ8_MASK\fP)"

.SS "#define DMA_ERQ_ERQ8_MASK   (0x100U)"

.SS "#define DMA_ERQ_ERQ8_SHIFT   (8U)"

.SS "#define DMA_ERQ_ERQ9(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERQ_ERQ9_SHIFT\fP)) & \fBDMA_ERQ_ERQ9_MASK\fP)"

.SS "#define DMA_ERQ_ERQ9_MASK   (0x200U)"

.SS "#define DMA_ERQ_ERQ9_SHIFT   (9U)"

.SS "#define DMA_ERR_ERR0(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR0_SHIFT\fP)) & \fBDMA_ERR_ERR0_MASK\fP)"

.SS "#define DMA_ERR_ERR0_MASK   (0x1U)"

.SS "#define DMA_ERR_ERR0_SHIFT   (0U)"

.SS "#define DMA_ERR_ERR1(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR1_SHIFT\fP)) & \fBDMA_ERR_ERR1_MASK\fP)"

.SS "#define DMA_ERR_ERR10(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR10_SHIFT\fP)) & \fBDMA_ERR_ERR10_MASK\fP)"

.SS "#define DMA_ERR_ERR10_MASK   (0x400U)"

.SS "#define DMA_ERR_ERR10_SHIFT   (10U)"

.SS "#define DMA_ERR_ERR11(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR11_SHIFT\fP)) & \fBDMA_ERR_ERR11_MASK\fP)"

.SS "#define DMA_ERR_ERR11_MASK   (0x800U)"

.SS "#define DMA_ERR_ERR11_SHIFT   (11U)"

.SS "#define DMA_ERR_ERR12(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR12_SHIFT\fP)) & \fBDMA_ERR_ERR12_MASK\fP)"

.SS "#define DMA_ERR_ERR12_MASK   (0x1000U)"

.SS "#define DMA_ERR_ERR12_SHIFT   (12U)"

.SS "#define DMA_ERR_ERR13(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR13_SHIFT\fP)) & \fBDMA_ERR_ERR13_MASK\fP)"

.SS "#define DMA_ERR_ERR13_MASK   (0x2000U)"

.SS "#define DMA_ERR_ERR13_SHIFT   (13U)"

.SS "#define DMA_ERR_ERR14(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR14_SHIFT\fP)) & \fBDMA_ERR_ERR14_MASK\fP)"

.SS "#define DMA_ERR_ERR14_MASK   (0x4000U)"

.SS "#define DMA_ERR_ERR14_SHIFT   (14U)"

.SS "#define DMA_ERR_ERR15(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR15_SHIFT\fP)) & \fBDMA_ERR_ERR15_MASK\fP)"

.SS "#define DMA_ERR_ERR15_MASK   (0x8000U)"

.SS "#define DMA_ERR_ERR15_SHIFT   (15U)"

.SS "#define DMA_ERR_ERR1_MASK   (0x2U)"

.SS "#define DMA_ERR_ERR1_SHIFT   (1U)"

.SS "#define DMA_ERR_ERR2(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR2_SHIFT\fP)) & \fBDMA_ERR_ERR2_MASK\fP)"

.SS "#define DMA_ERR_ERR2_MASK   (0x4U)"

.SS "#define DMA_ERR_ERR2_SHIFT   (2U)"

.SS "#define DMA_ERR_ERR3(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR3_SHIFT\fP)) & \fBDMA_ERR_ERR3_MASK\fP)"

.SS "#define DMA_ERR_ERR3_MASK   (0x8U)"

.SS "#define DMA_ERR_ERR3_SHIFT   (3U)"

.SS "#define DMA_ERR_ERR4(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR4_SHIFT\fP)) & \fBDMA_ERR_ERR4_MASK\fP)"

.SS "#define DMA_ERR_ERR4_MASK   (0x10U)"

.SS "#define DMA_ERR_ERR4_SHIFT   (4U)"

.SS "#define DMA_ERR_ERR5(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR5_SHIFT\fP)) & \fBDMA_ERR_ERR5_MASK\fP)"

.SS "#define DMA_ERR_ERR5_MASK   (0x20U)"

.SS "#define DMA_ERR_ERR5_SHIFT   (5U)"

.SS "#define DMA_ERR_ERR6(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR6_SHIFT\fP)) & \fBDMA_ERR_ERR6_MASK\fP)"

.SS "#define DMA_ERR_ERR6_MASK   (0x40U)"

.SS "#define DMA_ERR_ERR6_SHIFT   (6U)"

.SS "#define DMA_ERR_ERR7(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR7_SHIFT\fP)) & \fBDMA_ERR_ERR7_MASK\fP)"

.SS "#define DMA_ERR_ERR7_MASK   (0x80U)"

.SS "#define DMA_ERR_ERR7_SHIFT   (7U)"

.SS "#define DMA_ERR_ERR8(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR8_SHIFT\fP)) & \fBDMA_ERR_ERR8_MASK\fP)"

.SS "#define DMA_ERR_ERR8_MASK   (0x100U)"

.SS "#define DMA_ERR_ERR8_SHIFT   (8U)"

.SS "#define DMA_ERR_ERR9(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ERR_ERR9_SHIFT\fP)) & \fBDMA_ERR_ERR9_MASK\fP)"

.SS "#define DMA_ERR_ERR9_MASK   (0x200U)"

.SS "#define DMA_ERR_ERR9_SHIFT   (9U)"

.SS "#define DMA_ERROR_IRQS   { \fBDMA_Error_IRQn\fP }"

.SS "#define DMA_ES_CPE(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_CPE_SHIFT\fP)) & \fBDMA_ES_CPE_MASK\fP)"

.SS "#define DMA_ES_CPE_MASK   (0x4000U)"

.SS "#define DMA_ES_CPE_SHIFT   (14U)"

.SS "#define DMA_ES_DAE(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_DAE_SHIFT\fP)) & \fBDMA_ES_DAE_MASK\fP)"

.SS "#define DMA_ES_DAE_MASK   (0x20U)"

.SS "#define DMA_ES_DAE_SHIFT   (5U)"

.SS "#define DMA_ES_DBE(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_DBE_SHIFT\fP)) & \fBDMA_ES_DBE_MASK\fP)"

.SS "#define DMA_ES_DBE_MASK   (0x1U)"

.SS "#define DMA_ES_DBE_SHIFT   (0U)"

.SS "#define DMA_ES_DOE(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_DOE_SHIFT\fP)) & \fBDMA_ES_DOE_MASK\fP)"

.SS "#define DMA_ES_DOE_MASK   (0x10U)"

.SS "#define DMA_ES_DOE_SHIFT   (4U)"

.SS "#define DMA_ES_ECX(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_ECX_SHIFT\fP)) & \fBDMA_ES_ECX_MASK\fP)"

.SS "#define DMA_ES_ECX_MASK   (0x10000U)"

.SS "#define DMA_ES_ECX_SHIFT   (16U)"

.SS "#define DMA_ES_ERRCHN(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_ERRCHN_SHIFT\fP)) & \fBDMA_ES_ERRCHN_MASK\fP)"

.SS "#define DMA_ES_ERRCHN_MASK   (0xF00U)"

.SS "#define DMA_ES_ERRCHN_SHIFT   (8U)"

.SS "#define DMA_ES_NCE(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_NCE_SHIFT\fP)) & \fBDMA_ES_NCE_MASK\fP)"

.SS "#define DMA_ES_NCE_MASK   (0x8U)"

.SS "#define DMA_ES_NCE_SHIFT   (3U)"

.SS "#define DMA_ES_SAE(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_SAE_SHIFT\fP)) & \fBDMA_ES_SAE_MASK\fP)"

.SS "#define DMA_ES_SAE_MASK   (0x80U)"

.SS "#define DMA_ES_SAE_SHIFT   (7U)"

.SS "#define DMA_ES_SBE(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_SBE_SHIFT\fP)) & \fBDMA_ES_SBE_MASK\fP)"

.SS "#define DMA_ES_SBE_MASK   (0x2U)"

.SS "#define DMA_ES_SBE_SHIFT   (1U)"

.SS "#define DMA_ES_SGE(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_SGE_SHIFT\fP)) & \fBDMA_ES_SGE_MASK\fP)"

.SS "#define DMA_ES_SGE_MASK   (0x4U)"

.SS "#define DMA_ES_SGE_SHIFT   (2U)"

.SS "#define DMA_ES_SOE(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_SOE_SHIFT\fP)) & \fBDMA_ES_SOE_MASK\fP)"

.SS "#define DMA_ES_SOE_MASK   (0x40U)"

.SS "#define DMA_ES_SOE_SHIFT   (6U)"

.SS "#define DMA_ES_VLD(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_ES_VLD_SHIFT\fP)) & \fBDMA_ES_VLD_MASK\fP)"

.SS "#define DMA_ES_VLD_MASK   (0x80000000U)"

.SS "#define DMA_ES_VLD_SHIFT   (31U)"

.SS "#define DMA_HRS_HRS0(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS0_SHIFT\fP)) & \fBDMA_HRS_HRS0_MASK\fP)"

.SS "#define DMA_HRS_HRS0_MASK   (0x1U)"

.SS "#define DMA_HRS_HRS0_SHIFT   (0U)"

.SS "#define DMA_HRS_HRS1(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS1_SHIFT\fP)) & \fBDMA_HRS_HRS1_MASK\fP)"

.SS "#define DMA_HRS_HRS10(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS10_SHIFT\fP)) & \fBDMA_HRS_HRS10_MASK\fP)"

.SS "#define DMA_HRS_HRS10_MASK   (0x400U)"

.SS "#define DMA_HRS_HRS10_SHIFT   (10U)"

.SS "#define DMA_HRS_HRS11(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS11_SHIFT\fP)) & \fBDMA_HRS_HRS11_MASK\fP)"

.SS "#define DMA_HRS_HRS11_MASK   (0x800U)"

.SS "#define DMA_HRS_HRS11_SHIFT   (11U)"

.SS "#define DMA_HRS_HRS12(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS12_SHIFT\fP)) & \fBDMA_HRS_HRS12_MASK\fP)"

.SS "#define DMA_HRS_HRS12_MASK   (0x1000U)"

.SS "#define DMA_HRS_HRS12_SHIFT   (12U)"

.SS "#define DMA_HRS_HRS13(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS13_SHIFT\fP)) & \fBDMA_HRS_HRS13_MASK\fP)"

.SS "#define DMA_HRS_HRS13_MASK   (0x2000U)"

.SS "#define DMA_HRS_HRS13_SHIFT   (13U)"

.SS "#define DMA_HRS_HRS14(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS14_SHIFT\fP)) & \fBDMA_HRS_HRS14_MASK\fP)"

.SS "#define DMA_HRS_HRS14_MASK   (0x4000U)"

.SS "#define DMA_HRS_HRS14_SHIFT   (14U)"

.SS "#define DMA_HRS_HRS15(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS15_SHIFT\fP)) & \fBDMA_HRS_HRS15_MASK\fP)"

.SS "#define DMA_HRS_HRS15_MASK   (0x8000U)"

.SS "#define DMA_HRS_HRS15_SHIFT   (15U)"

.SS "#define DMA_HRS_HRS1_MASK   (0x2U)"

.SS "#define DMA_HRS_HRS1_SHIFT   (1U)"

.SS "#define DMA_HRS_HRS2(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS2_SHIFT\fP)) & \fBDMA_HRS_HRS2_MASK\fP)"

.SS "#define DMA_HRS_HRS2_MASK   (0x4U)"

.SS "#define DMA_HRS_HRS2_SHIFT   (2U)"

.SS "#define DMA_HRS_HRS3(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS3_SHIFT\fP)) & \fBDMA_HRS_HRS3_MASK\fP)"

.SS "#define DMA_HRS_HRS3_MASK   (0x8U)"

.SS "#define DMA_HRS_HRS3_SHIFT   (3U)"

.SS "#define DMA_HRS_HRS4(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS4_SHIFT\fP)) & \fBDMA_HRS_HRS4_MASK\fP)"

.SS "#define DMA_HRS_HRS4_MASK   (0x10U)"

.SS "#define DMA_HRS_HRS4_SHIFT   (4U)"

.SS "#define DMA_HRS_HRS5(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS5_SHIFT\fP)) & \fBDMA_HRS_HRS5_MASK\fP)"

.SS "#define DMA_HRS_HRS5_MASK   (0x20U)"

.SS "#define DMA_HRS_HRS5_SHIFT   (5U)"

.SS "#define DMA_HRS_HRS6(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS6_SHIFT\fP)) & \fBDMA_HRS_HRS6_MASK\fP)"

.SS "#define DMA_HRS_HRS6_MASK   (0x40U)"

.SS "#define DMA_HRS_HRS6_SHIFT   (6U)"

.SS "#define DMA_HRS_HRS7(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS7_SHIFT\fP)) & \fBDMA_HRS_HRS7_MASK\fP)"

.SS "#define DMA_HRS_HRS7_MASK   (0x80U)"

.SS "#define DMA_HRS_HRS7_SHIFT   (7U)"

.SS "#define DMA_HRS_HRS8(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS8_SHIFT\fP)) & \fBDMA_HRS_HRS8_MASK\fP)"

.SS "#define DMA_HRS_HRS8_MASK   (0x100U)"

.SS "#define DMA_HRS_HRS8_SHIFT   (8U)"

.SS "#define DMA_HRS_HRS9(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_HRS_HRS9_SHIFT\fP)) & \fBDMA_HRS_HRS9_MASK\fP)"

.SS "#define DMA_HRS_HRS9_MASK   (0x200U)"

.SS "#define DMA_HRS_HRS9_SHIFT   (9U)"

.SS "#define DMA_INT_INT0(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT0_SHIFT\fP)) & \fBDMA_INT_INT0_MASK\fP)"

.SS "#define DMA_INT_INT0_MASK   (0x1U)"

.SS "#define DMA_INT_INT0_SHIFT   (0U)"

.SS "#define DMA_INT_INT1(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT1_SHIFT\fP)) & \fBDMA_INT_INT1_MASK\fP)"

.SS "#define DMA_INT_INT10(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT10_SHIFT\fP)) & \fBDMA_INT_INT10_MASK\fP)"

.SS "#define DMA_INT_INT10_MASK   (0x400U)"

.SS "#define DMA_INT_INT10_SHIFT   (10U)"

.SS "#define DMA_INT_INT11(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT11_SHIFT\fP)) & \fBDMA_INT_INT11_MASK\fP)"

.SS "#define DMA_INT_INT11_MASK   (0x800U)"

.SS "#define DMA_INT_INT11_SHIFT   (11U)"

.SS "#define DMA_INT_INT12(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT12_SHIFT\fP)) & \fBDMA_INT_INT12_MASK\fP)"

.SS "#define DMA_INT_INT12_MASK   (0x1000U)"

.SS "#define DMA_INT_INT12_SHIFT   (12U)"

.SS "#define DMA_INT_INT13(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT13_SHIFT\fP)) & \fBDMA_INT_INT13_MASK\fP)"

.SS "#define DMA_INT_INT13_MASK   (0x2000U)"

.SS "#define DMA_INT_INT13_SHIFT   (13U)"

.SS "#define DMA_INT_INT14(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT14_SHIFT\fP)) & \fBDMA_INT_INT14_MASK\fP)"

.SS "#define DMA_INT_INT14_MASK   (0x4000U)"

.SS "#define DMA_INT_INT14_SHIFT   (14U)"

.SS "#define DMA_INT_INT15(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT15_SHIFT\fP)) & \fBDMA_INT_INT15_MASK\fP)"

.SS "#define DMA_INT_INT15_MASK   (0x8000U)"

.SS "#define DMA_INT_INT15_SHIFT   (15U)"

.SS "#define DMA_INT_INT1_MASK   (0x2U)"

.SS "#define DMA_INT_INT1_SHIFT   (1U)"

.SS "#define DMA_INT_INT2(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT2_SHIFT\fP)) & \fBDMA_INT_INT2_MASK\fP)"

.SS "#define DMA_INT_INT2_MASK   (0x4U)"

.SS "#define DMA_INT_INT2_SHIFT   (2U)"

.SS "#define DMA_INT_INT3(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT3_SHIFT\fP)) & \fBDMA_INT_INT3_MASK\fP)"

.SS "#define DMA_INT_INT3_MASK   (0x8U)"

.SS "#define DMA_INT_INT3_SHIFT   (3U)"

.SS "#define DMA_INT_INT4(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT4_SHIFT\fP)) & \fBDMA_INT_INT4_MASK\fP)"

.SS "#define DMA_INT_INT4_MASK   (0x10U)"

.SS "#define DMA_INT_INT4_SHIFT   (4U)"

.SS "#define DMA_INT_INT5(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT5_SHIFT\fP)) & \fBDMA_INT_INT5_MASK\fP)"

.SS "#define DMA_INT_INT5_MASK   (0x20U)"

.SS "#define DMA_INT_INT5_SHIFT   (5U)"

.SS "#define DMA_INT_INT6(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT6_SHIFT\fP)) & \fBDMA_INT_INT6_MASK\fP)"

.SS "#define DMA_INT_INT6_MASK   (0x40U)"

.SS "#define DMA_INT_INT6_SHIFT   (6U)"

.SS "#define DMA_INT_INT7(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT7_SHIFT\fP)) & \fBDMA_INT_INT7_MASK\fP)"

.SS "#define DMA_INT_INT7_MASK   (0x80U)"

.SS "#define DMA_INT_INT7_SHIFT   (7U)"

.SS "#define DMA_INT_INT8(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT8_SHIFT\fP)) & \fBDMA_INT_INT8_MASK\fP)"

.SS "#define DMA_INT_INT8_MASK   (0x100U)"

.SS "#define DMA_INT_INT8_SHIFT   (8U)"

.SS "#define DMA_INT_INT9(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_INT_INT9_SHIFT\fP)) & \fBDMA_INT_INT9_MASK\fP)"

.SS "#define DMA_INT_INT9_MASK   (0x200U)"

.SS "#define DMA_INT_INT9_SHIFT   (9U)"

.SS "#define DMA_NBYTES_MLNO_COUNT   (16U)"

.SS "#define DMA_NBYTES_MLNO_NBYTES(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_NBYTES_MLNO_NBYTES_SHIFT\fP)) & \fBDMA_NBYTES_MLNO_NBYTES_MASK\fP)"

.SS "#define DMA_NBYTES_MLNO_NBYTES_MASK   (0xFFFFFFFFU)"

.SS "#define DMA_NBYTES_MLNO_NBYTES_SHIFT   (0U)"

.SS "#define DMA_NBYTES_MLOFFNO_COUNT   (16U)"

.SS "#define DMA_NBYTES_MLOFFNO_DMLOE(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_NBYTES_MLOFFNO_DMLOE_SHIFT\fP)) & \fBDMA_NBYTES_MLOFFNO_DMLOE_MASK\fP)"

.SS "#define DMA_NBYTES_MLOFFNO_DMLOE_MASK   (0x40000000U)"

.SS "#define DMA_NBYTES_MLOFFNO_DMLOE_SHIFT   (30U)"

.SS "#define DMA_NBYTES_MLOFFNO_NBYTES(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_NBYTES_MLOFFNO_NBYTES_SHIFT\fP)) & \fBDMA_NBYTES_MLOFFNO_NBYTES_MASK\fP)"

.SS "#define DMA_NBYTES_MLOFFNO_NBYTES_MASK   (0x3FFFFFFFU)"

.SS "#define DMA_NBYTES_MLOFFNO_NBYTES_SHIFT   (0U)"

.SS "#define DMA_NBYTES_MLOFFNO_SMLOE(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_NBYTES_MLOFFNO_SMLOE_SHIFT\fP)) & \fBDMA_NBYTES_MLOFFNO_SMLOE_MASK\fP)"

.SS "#define DMA_NBYTES_MLOFFNO_SMLOE_MASK   (0x80000000U)"

.SS "#define DMA_NBYTES_MLOFFNO_SMLOE_SHIFT   (31U)"

.SS "#define DMA_NBYTES_MLOFFYES_COUNT   (16U)"

.SS "#define DMA_NBYTES_MLOFFYES_DMLOE(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_NBYTES_MLOFFYES_DMLOE_SHIFT\fP)) & \fBDMA_NBYTES_MLOFFYES_DMLOE_MASK\fP)"

.SS "#define DMA_NBYTES_MLOFFYES_DMLOE_MASK   (0x40000000U)"

.SS "#define DMA_NBYTES_MLOFFYES_DMLOE_SHIFT   (30U)"

.SS "#define DMA_NBYTES_MLOFFYES_MLOFF(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_NBYTES_MLOFFYES_MLOFF_SHIFT\fP)) & \fBDMA_NBYTES_MLOFFYES_MLOFF_MASK\fP)"

.SS "#define DMA_NBYTES_MLOFFYES_MLOFF_MASK   (0x3FFFFC00U)"

.SS "#define DMA_NBYTES_MLOFFYES_MLOFF_SHIFT   (10U)"

.SS "#define DMA_NBYTES_MLOFFYES_NBYTES(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_NBYTES_MLOFFYES_NBYTES_SHIFT\fP)) & \fBDMA_NBYTES_MLOFFYES_NBYTES_MASK\fP)"

.SS "#define DMA_NBYTES_MLOFFYES_NBYTES_MASK   (0x3FFU)"

.SS "#define DMA_NBYTES_MLOFFYES_NBYTES_SHIFT   (0U)"

.SS "#define DMA_NBYTES_MLOFFYES_SMLOE(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_NBYTES_MLOFFYES_SMLOE_SHIFT\fP)) & \fBDMA_NBYTES_MLOFFYES_SMLOE_MASK\fP)"

.SS "#define DMA_NBYTES_MLOFFYES_SMLOE_MASK   (0x80000000U)"

.SS "#define DMA_NBYTES_MLOFFYES_SMLOE_SHIFT   (31U)"

.SS "#define DMA_SADDR_COUNT   (16U)"

.SS "#define DMA_SADDR_SADDR(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_SADDR_SADDR_SHIFT\fP)) & \fBDMA_SADDR_SADDR_MASK\fP)"

.SS "#define DMA_SADDR_SADDR_MASK   (0xFFFFFFFFU)"

.SS "#define DMA_SADDR_SADDR_SHIFT   (0U)"

.SS "#define DMA_SEEI_NOP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SEEI_NOP_SHIFT\fP)) & \fBDMA_SEEI_NOP_MASK\fP)"

.SS "#define DMA_SEEI_NOP_MASK   (0x80U)"

.SS "#define DMA_SEEI_NOP_SHIFT   (7U)"

.SS "#define DMA_SEEI_SAEE(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SEEI_SAEE_SHIFT\fP)) & \fBDMA_SEEI_SAEE_MASK\fP)"

.SS "#define DMA_SEEI_SAEE_MASK   (0x40U)"

.SS "#define DMA_SEEI_SAEE_SHIFT   (6U)"

.SS "#define DMA_SEEI_SEEI(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SEEI_SEEI_SHIFT\fP)) & \fBDMA_SEEI_SEEI_MASK\fP)"

.SS "#define DMA_SEEI_SEEI_MASK   (0xFU)"

.SS "#define DMA_SEEI_SEEI_SHIFT   (0U)"

.SS "#define DMA_SERQ_NOP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SERQ_NOP_SHIFT\fP)) & \fBDMA_SERQ_NOP_MASK\fP)"

.SS "#define DMA_SERQ_NOP_MASK   (0x80U)"

.SS "#define DMA_SERQ_NOP_SHIFT   (7U)"

.SS "#define DMA_SERQ_SAER(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SERQ_SAER_SHIFT\fP)) & \fBDMA_SERQ_SAER_MASK\fP)"

.SS "#define DMA_SERQ_SAER_MASK   (0x40U)"

.SS "#define DMA_SERQ_SAER_SHIFT   (6U)"

.SS "#define DMA_SERQ_SERQ(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SERQ_SERQ_SHIFT\fP)) & \fBDMA_SERQ_SERQ_MASK\fP)"

.SS "#define DMA_SERQ_SERQ_MASK   (0xFU)"

.SS "#define DMA_SERQ_SERQ_SHIFT   (0U)"

.SS "#define DMA_SLAST_COUNT   (16U)"

.SS "#define DMA_SLAST_SLAST(x)   (((uint32_t)(((uint32_t)(x)) << \fBDMA_SLAST_SLAST_SHIFT\fP)) & \fBDMA_SLAST_SLAST_MASK\fP)"

.SS "#define DMA_SLAST_SLAST_MASK   (0xFFFFFFFFU)"

.SS "#define DMA_SLAST_SLAST_SHIFT   (0U)"

.SS "#define DMA_SOFF_COUNT   (16U)"

.SS "#define DMA_SOFF_SOFF(x)   (((uint16_t)(((uint16_t)(x)) << \fBDMA_SOFF_SOFF_SHIFT\fP)) & \fBDMA_SOFF_SOFF_MASK\fP)"

.SS "#define DMA_SOFF_SOFF_MASK   (0xFFFFU)"

.SS "#define DMA_SOFF_SOFF_SHIFT   (0U)"

.SS "#define DMA_SSRT_NOP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SSRT_NOP_SHIFT\fP)) & \fBDMA_SSRT_NOP_MASK\fP)"

.SS "#define DMA_SSRT_NOP_MASK   (0x80U)"

.SS "#define DMA_SSRT_NOP_SHIFT   (7U)"

.SS "#define DMA_SSRT_SAST(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SSRT_SAST_SHIFT\fP)) & \fBDMA_SSRT_SAST_MASK\fP)"

.SS "#define DMA_SSRT_SAST_MASK   (0x40U)"

.SS "#define DMA_SSRT_SAST_SHIFT   (6U)"

.SS "#define DMA_SSRT_SSRT(x)   (((uint8_t)(((uint8_t)(x)) << \fBDMA_SSRT_SSRT_SHIFT\fP)) & \fBDMA_SSRT_SSRT_MASK\fP)"

.SS "#define DMA_SSRT_SSRT_MASK   (0xFU)"

.SS "#define DMA_SSRT_SSRT_SHIFT   (0U)"

.SS "#define MCM_CR_SRAMLAP(x)   (((uint32_t)(((uint32_t)(x)) << \fBMCM_CR_SRAMLAP_SHIFT\fP)) & \fBMCM_CR_SRAMLAP_MASK\fP)"

.SS "#define MCM_CR_SRAMLAP_MASK   (0x30000000U)"

.SS "#define MCM_CR_SRAMLAP_SHIFT   (28U)"

.SS "#define MCM_CR_SRAMLWP(x)   (((uint32_t)(((uint32_t)(x)) << \fBMCM_CR_SRAMLWP_SHIFT\fP)) & \fBMCM_CR_SRAMLWP_MASK\fP)"

.SS "#define MCM_CR_SRAMLWP_MASK   (0x40000000U)"

.SS "#define MCM_CR_SRAMLWP_SHIFT   (30U)"

.SS "#define MCM_CR_SRAMUAP(x)   (((uint32_t)(((uint32_t)(x)) << \fBMCM_CR_SRAMUAP_SHIFT\fP)) & \fBMCM_CR_SRAMUAP_MASK\fP)"

.SS "#define MCM_CR_SRAMUAP_MASK   (0x3000000U)"

.SS "#define MCM_CR_SRAMUAP_SHIFT   (24U)"

.SS "#define MCM_CR_SRAMUWP(x)   (((uint32_t)(((uint32_t)(x)) << \fBMCM_CR_SRAMUWP_SHIFT\fP)) & \fBMCM_CR_SRAMUWP_MASK\fP)"

.SS "#define MCM_CR_SRAMUWP_MASK   (0x4000000U)"

.SS "#define MCM_CR_SRAMUWP_SHIFT   (26U)"

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
