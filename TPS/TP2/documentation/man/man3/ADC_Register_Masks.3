.TH "ADC_Register_Masks" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ADC_Register_Masks
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBADC0_BASE\fP   (0x4003B000u)"
.br
.ti -1c
.RI "#define \fBADC0\fP   ((\fBADC_Type\fP *)\fBADC0_BASE\fP)"
.br
.ti -1c
.RI "#define \fBADC1_BASE\fP   (0x400BB000u)"
.br
.ti -1c
.RI "#define \fBADC1\fP   ((\fBADC_Type\fP *)\fBADC1_BASE\fP)"
.br
.ti -1c
.RI "#define \fBADC_BASE_ADDRS\fP   { \fBADC0_BASE\fP, \fBADC1_BASE\fP }"
.br
.ti -1c
.RI "#define \fBADC_BASE_PTRS\fP   { \fBADC0\fP, \fBADC1\fP }"
.br
.ti -1c
.RI "#define \fBADC_IRQS\fP   { \fBADC0_IRQn\fP, \fBADC1_IRQn\fP }"
.br
.in -1c
.SS "SC1 - ADC Status and Control Registers 1"

.in +1c
.ti -1c
.RI "#define \fBADC_SC1_ADCH_MASK\fP   (0x1FU)"
.br
.ti -1c
.RI "#define \fBADC_SC1_ADCH_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_SC1_ADCH\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC1_ADCH_SHIFT\fP)) & \fBADC_SC1_ADCH_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_SC1_DIFF_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBADC_SC1_DIFF_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBADC_SC1_DIFF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC1_DIFF_SHIFT\fP)) & \fBADC_SC1_DIFF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_SC1_AIEN_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBADC_SC1_AIEN_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBADC_SC1_AIEN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC1_AIEN_SHIFT\fP)) & \fBADC_SC1_AIEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_SC1_COCO_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBADC_SC1_COCO_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBADC_SC1_COCO\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC1_COCO_SHIFT\fP)) & \fBADC_SC1_COCO_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_SC1_COUNT\fP   (2U)"
.br
.in -1c
.SS "CFG1 - ADC Configuration Register 1"

.in +1c
.ti -1c
.RI "#define \fBADC_CFG1_ADICLK_MASK\fP   (0x3U)"
.br
.ti -1c
.RI "#define \fBADC_CFG1_ADICLK_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CFG1_ADICLK\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG1_ADICLK_SHIFT\fP)) & \fBADC_CFG1_ADICLK_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_CFG1_MODE_MASK\fP   (0xCU)"
.br
.ti -1c
.RI "#define \fBADC_CFG1_MODE_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBADC_CFG1_MODE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG1_MODE_SHIFT\fP)) & \fBADC_CFG1_MODE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_CFG1_ADLSMP_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBADC_CFG1_ADLSMP_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBADC_CFG1_ADLSMP\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG1_ADLSMP_SHIFT\fP)) & \fBADC_CFG1_ADLSMP_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_CFG1_ADIV_MASK\fP   (0x60U)"
.br
.ti -1c
.RI "#define \fBADC_CFG1_ADIV_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBADC_CFG1_ADIV\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG1_ADIV_SHIFT\fP)) & \fBADC_CFG1_ADIV_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_CFG1_ADLPC_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBADC_CFG1_ADLPC_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBADC_CFG1_ADLPC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG1_ADLPC_SHIFT\fP)) & \fBADC_CFG1_ADLPC_MASK\fP)"
.br
.in -1c
.SS "CFG2 - ADC Configuration Register 2"

.in +1c
.ti -1c
.RI "#define \fBADC_CFG2_ADLSTS_MASK\fP   (0x3U)"
.br
.ti -1c
.RI "#define \fBADC_CFG2_ADLSTS_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CFG2_ADLSTS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG2_ADLSTS_SHIFT\fP)) & \fBADC_CFG2_ADLSTS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_CFG2_ADHSC_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBADC_CFG2_ADHSC_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBADC_CFG2_ADHSC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG2_ADHSC_SHIFT\fP)) & \fBADC_CFG2_ADHSC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_CFG2_ADACKEN_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBADC_CFG2_ADACKEN_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBADC_CFG2_ADACKEN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG2_ADACKEN_SHIFT\fP)) & \fBADC_CFG2_ADACKEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_CFG2_MUXSEL_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBADC_CFG2_MUXSEL_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBADC_CFG2_MUXSEL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG2_MUXSEL_SHIFT\fP)) & \fBADC_CFG2_MUXSEL_MASK\fP)"
.br
.in -1c
.SS "R - ADC Data Result Register"

.in +1c
.ti -1c
.RI "#define \fBADC_R_D_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBADC_R_D_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_R_D\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_R_D_SHIFT\fP)) & \fBADC_R_D_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_R_COUNT\fP   (2U)"
.br
.in -1c
.SS "CV1 - Compare Value Registers"

.in +1c
.ti -1c
.RI "#define \fBADC_CV1_CV_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBADC_CV1_CV_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CV1_CV\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CV1_CV_SHIFT\fP)) & \fBADC_CV1_CV_MASK\fP)"
.br
.in -1c
.SS "CV2 - Compare Value Registers"

.in +1c
.ti -1c
.RI "#define \fBADC_CV2_CV_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBADC_CV2_CV_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CV2_CV\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CV2_CV_SHIFT\fP)) & \fBADC_CV2_CV_MASK\fP)"
.br
.in -1c
.SS "SC2 - Status and Control Register 2"

.in +1c
.ti -1c
.RI "#define \fBADC_SC2_REFSEL_MASK\fP   (0x3U)"
.br
.ti -1c
.RI "#define \fBADC_SC2_REFSEL_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_SC2_REFSEL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC2_REFSEL_SHIFT\fP)) & \fBADC_SC2_REFSEL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_SC2_DMAEN_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBADC_SC2_DMAEN_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBADC_SC2_DMAEN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC2_DMAEN_SHIFT\fP)) & \fBADC_SC2_DMAEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_SC2_ACREN_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBADC_SC2_ACREN_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBADC_SC2_ACREN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC2_ACREN_SHIFT\fP)) & \fBADC_SC2_ACREN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_SC2_ACFGT_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBADC_SC2_ACFGT_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBADC_SC2_ACFGT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC2_ACFGT_SHIFT\fP)) & \fBADC_SC2_ACFGT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_SC2_ACFE_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBADC_SC2_ACFE_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBADC_SC2_ACFE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC2_ACFE_SHIFT\fP)) & \fBADC_SC2_ACFE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_SC2_ADTRG_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBADC_SC2_ADTRG_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBADC_SC2_ADTRG\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC2_ADTRG_SHIFT\fP)) & \fBADC_SC2_ADTRG_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_SC2_ADACT_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBADC_SC2_ADACT_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBADC_SC2_ADACT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC2_ADACT_SHIFT\fP)) & \fBADC_SC2_ADACT_MASK\fP)"
.br
.in -1c
.SS "SC3 - Status and Control Register 3"

.in +1c
.ti -1c
.RI "#define \fBADC_SC3_AVGS_MASK\fP   (0x3U)"
.br
.ti -1c
.RI "#define \fBADC_SC3_AVGS_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_SC3_AVGS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC3_AVGS_SHIFT\fP)) & \fBADC_SC3_AVGS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_SC3_AVGE_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBADC_SC3_AVGE_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBADC_SC3_AVGE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC3_AVGE_SHIFT\fP)) & \fBADC_SC3_AVGE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_SC3_ADCO_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBADC_SC3_ADCO_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBADC_SC3_ADCO\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC3_ADCO_SHIFT\fP)) & \fBADC_SC3_ADCO_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_SC3_CALF_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBADC_SC3_CALF_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBADC_SC3_CALF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC3_CALF_SHIFT\fP)) & \fBADC_SC3_CALF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBADC_SC3_CAL_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBADC_SC3_CAL_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBADC_SC3_CAL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC3_CAL_SHIFT\fP)) & \fBADC_SC3_CAL_MASK\fP)"
.br
.in -1c
.SS "OFS - ADC Offset Correction Register"

.in +1c
.ti -1c
.RI "#define \fBADC_OFS_OFS_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBADC_OFS_OFS_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_OFS_OFS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_OFS_OFS_SHIFT\fP)) & \fBADC_OFS_OFS_MASK\fP)"
.br
.in -1c
.SS "PG - ADC Plus-Side Gain Register"

.in +1c
.ti -1c
.RI "#define \fBADC_PG_PG_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBADC_PG_PG_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_PG_PG\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_PG_PG_SHIFT\fP)) & \fBADC_PG_PG_MASK\fP)"
.br
.in -1c
.SS "MG - ADC Minus-Side Gain Register"

.in +1c
.ti -1c
.RI "#define \fBADC_MG_MG_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBADC_MG_MG_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_MG_MG\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_MG_MG_SHIFT\fP)) & \fBADC_MG_MG_MASK\fP)"
.br
.in -1c
.SS "CLPD - ADC Plus-Side General Calibration Value Register"

.in +1c
.ti -1c
.RI "#define \fBADC_CLPD_CLPD_MASK\fP   (0x3FU)"
.br
.ti -1c
.RI "#define \fBADC_CLPD_CLPD_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CLPD_CLPD\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLPD_CLPD_SHIFT\fP)) & \fBADC_CLPD_CLPD_MASK\fP)"
.br
.in -1c
.SS "CLPS - ADC Plus-Side General Calibration Value Register"

.in +1c
.ti -1c
.RI "#define \fBADC_CLPS_CLPS_MASK\fP   (0x3FU)"
.br
.ti -1c
.RI "#define \fBADC_CLPS_CLPS_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CLPS_CLPS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLPS_CLPS_SHIFT\fP)) & \fBADC_CLPS_CLPS_MASK\fP)"
.br
.in -1c
.SS "CLP4 - ADC Plus-Side General Calibration Value Register"

.in +1c
.ti -1c
.RI "#define \fBADC_CLP4_CLP4_MASK\fP   (0x3FFU)"
.br
.ti -1c
.RI "#define \fBADC_CLP4_CLP4_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CLP4_CLP4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLP4_CLP4_SHIFT\fP)) & \fBADC_CLP4_CLP4_MASK\fP)"
.br
.in -1c
.SS "CLP3 - ADC Plus-Side General Calibration Value Register"

.in +1c
.ti -1c
.RI "#define \fBADC_CLP3_CLP3_MASK\fP   (0x1FFU)"
.br
.ti -1c
.RI "#define \fBADC_CLP3_CLP3_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CLP3_CLP3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLP3_CLP3_SHIFT\fP)) & \fBADC_CLP3_CLP3_MASK\fP)"
.br
.in -1c
.SS "CLP2 - ADC Plus-Side General Calibration Value Register"

.in +1c
.ti -1c
.RI "#define \fBADC_CLP2_CLP2_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBADC_CLP2_CLP2_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CLP2_CLP2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLP2_CLP2_SHIFT\fP)) & \fBADC_CLP2_CLP2_MASK\fP)"
.br
.in -1c
.SS "CLP1 - ADC Plus-Side General Calibration Value Register"

.in +1c
.ti -1c
.RI "#define \fBADC_CLP1_CLP1_MASK\fP   (0x7FU)"
.br
.ti -1c
.RI "#define \fBADC_CLP1_CLP1_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CLP1_CLP1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLP1_CLP1_SHIFT\fP)) & \fBADC_CLP1_CLP1_MASK\fP)"
.br
.in -1c
.SS "CLP0 - ADC Plus-Side General Calibration Value Register"

.in +1c
.ti -1c
.RI "#define \fBADC_CLP0_CLP0_MASK\fP   (0x3FU)"
.br
.ti -1c
.RI "#define \fBADC_CLP0_CLP0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CLP0_CLP0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLP0_CLP0_SHIFT\fP)) & \fBADC_CLP0_CLP0_MASK\fP)"
.br
.in -1c
.SS "CLMD - ADC Minus-Side General Calibration Value Register"

.in +1c
.ti -1c
.RI "#define \fBADC_CLMD_CLMD_MASK\fP   (0x3FU)"
.br
.ti -1c
.RI "#define \fBADC_CLMD_CLMD_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CLMD_CLMD\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLMD_CLMD_SHIFT\fP)) & \fBADC_CLMD_CLMD_MASK\fP)"
.br
.in -1c
.SS "CLMS - ADC Minus-Side General Calibration Value Register"

.in +1c
.ti -1c
.RI "#define \fBADC_CLMS_CLMS_MASK\fP   (0x3FU)"
.br
.ti -1c
.RI "#define \fBADC_CLMS_CLMS_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CLMS_CLMS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLMS_CLMS_SHIFT\fP)) & \fBADC_CLMS_CLMS_MASK\fP)"
.br
.in -1c
.SS "CLM4 - ADC Minus-Side General Calibration Value Register"

.in +1c
.ti -1c
.RI "#define \fBADC_CLM4_CLM4_MASK\fP   (0x3FFU)"
.br
.ti -1c
.RI "#define \fBADC_CLM4_CLM4_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CLM4_CLM4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLM4_CLM4_SHIFT\fP)) & \fBADC_CLM4_CLM4_MASK\fP)"
.br
.in -1c
.SS "CLM3 - ADC Minus-Side General Calibration Value Register"

.in +1c
.ti -1c
.RI "#define \fBADC_CLM3_CLM3_MASK\fP   (0x1FFU)"
.br
.ti -1c
.RI "#define \fBADC_CLM3_CLM3_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CLM3_CLM3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLM3_CLM3_SHIFT\fP)) & \fBADC_CLM3_CLM3_MASK\fP)"
.br
.in -1c
.SS "CLM2 - ADC Minus-Side General Calibration Value Register"

.in +1c
.ti -1c
.RI "#define \fBADC_CLM2_CLM2_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBADC_CLM2_CLM2_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CLM2_CLM2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLM2_CLM2_SHIFT\fP)) & \fBADC_CLM2_CLM2_MASK\fP)"
.br
.in -1c
.SS "CLM1 - ADC Minus-Side General Calibration Value Register"

.in +1c
.ti -1c
.RI "#define \fBADC_CLM1_CLM1_MASK\fP   (0x7FU)"
.br
.ti -1c
.RI "#define \fBADC_CLM1_CLM1_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CLM1_CLM1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLM1_CLM1_SHIFT\fP)) & \fBADC_CLM1_CLM1_MASK\fP)"
.br
.in -1c
.SS "CLM0 - ADC Minus-Side General Calibration Value Register"

.in +1c
.ti -1c
.RI "#define \fBADC_CLM0_CLM0_MASK\fP   (0x3FU)"
.br
.ti -1c
.RI "#define \fBADC_CLM0_CLM0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBADC_CLM0_CLM0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLM0_CLM0_SHIFT\fP)) & \fBADC_CLM0_CLM0_MASK\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define ADC0   ((\fBADC_Type\fP *)\fBADC0_BASE\fP)"
Peripheral ADC0 base pointer 
.SS "#define ADC0_BASE   (0x4003B000u)"
Peripheral ADC0 base address 
.SS "#define ADC1   ((\fBADC_Type\fP *)\fBADC1_BASE\fP)"
Peripheral ADC1 base pointer 
.SS "#define ADC1_BASE   (0x400BB000u)"
Peripheral ADC1 base address 
.SS "#define ADC_BASE_ADDRS   { \fBADC0_BASE\fP, \fBADC1_BASE\fP }"
Array initializer of ADC peripheral base addresses 
.SS "#define ADC_BASE_PTRS   { \fBADC0\fP, \fBADC1\fP }"
Array initializer of ADC peripheral base pointers 
.SS "#define ADC_CFG1_ADICLK(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG1_ADICLK_SHIFT\fP)) & \fBADC_CFG1_ADICLK_MASK\fP)"

.SS "#define ADC_CFG1_ADICLK_MASK   (0x3U)"

.SS "#define ADC_CFG1_ADICLK_SHIFT   (0U)"

.SS "#define ADC_CFG1_ADIV(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG1_ADIV_SHIFT\fP)) & \fBADC_CFG1_ADIV_MASK\fP)"

.SS "#define ADC_CFG1_ADIV_MASK   (0x60U)"

.SS "#define ADC_CFG1_ADIV_SHIFT   (5U)"

.SS "#define ADC_CFG1_ADLPC(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG1_ADLPC_SHIFT\fP)) & \fBADC_CFG1_ADLPC_MASK\fP)"

.SS "#define ADC_CFG1_ADLPC_MASK   (0x80U)"

.SS "#define ADC_CFG1_ADLPC_SHIFT   (7U)"

.SS "#define ADC_CFG1_ADLSMP(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG1_ADLSMP_SHIFT\fP)) & \fBADC_CFG1_ADLSMP_MASK\fP)"

.SS "#define ADC_CFG1_ADLSMP_MASK   (0x10U)"

.SS "#define ADC_CFG1_ADLSMP_SHIFT   (4U)"

.SS "#define ADC_CFG1_MODE(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG1_MODE_SHIFT\fP)) & \fBADC_CFG1_MODE_MASK\fP)"

.SS "#define ADC_CFG1_MODE_MASK   (0xCU)"

.SS "#define ADC_CFG1_MODE_SHIFT   (2U)"

.SS "#define ADC_CFG2_ADACKEN(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG2_ADACKEN_SHIFT\fP)) & \fBADC_CFG2_ADACKEN_MASK\fP)"

.SS "#define ADC_CFG2_ADACKEN_MASK   (0x8U)"

.SS "#define ADC_CFG2_ADACKEN_SHIFT   (3U)"

.SS "#define ADC_CFG2_ADHSC(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG2_ADHSC_SHIFT\fP)) & \fBADC_CFG2_ADHSC_MASK\fP)"

.SS "#define ADC_CFG2_ADHSC_MASK   (0x4U)"

.SS "#define ADC_CFG2_ADHSC_SHIFT   (2U)"

.SS "#define ADC_CFG2_ADLSTS(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG2_ADLSTS_SHIFT\fP)) & \fBADC_CFG2_ADLSTS_MASK\fP)"

.SS "#define ADC_CFG2_ADLSTS_MASK   (0x3U)"

.SS "#define ADC_CFG2_ADLSTS_SHIFT   (0U)"

.SS "#define ADC_CFG2_MUXSEL(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CFG2_MUXSEL_SHIFT\fP)) & \fBADC_CFG2_MUXSEL_MASK\fP)"

.SS "#define ADC_CFG2_MUXSEL_MASK   (0x10U)"

.SS "#define ADC_CFG2_MUXSEL_SHIFT   (4U)"

.SS "#define ADC_CLM0_CLM0(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLM0_CLM0_SHIFT\fP)) & \fBADC_CLM0_CLM0_MASK\fP)"

.SS "#define ADC_CLM0_CLM0_MASK   (0x3FU)"

.SS "#define ADC_CLM0_CLM0_SHIFT   (0U)"

.SS "#define ADC_CLM1_CLM1(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLM1_CLM1_SHIFT\fP)) & \fBADC_CLM1_CLM1_MASK\fP)"

.SS "#define ADC_CLM1_CLM1_MASK   (0x7FU)"

.SS "#define ADC_CLM1_CLM1_SHIFT   (0U)"

.SS "#define ADC_CLM2_CLM2(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLM2_CLM2_SHIFT\fP)) & \fBADC_CLM2_CLM2_MASK\fP)"

.SS "#define ADC_CLM2_CLM2_MASK   (0xFFU)"

.SS "#define ADC_CLM2_CLM2_SHIFT   (0U)"

.SS "#define ADC_CLM3_CLM3(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLM3_CLM3_SHIFT\fP)) & \fBADC_CLM3_CLM3_MASK\fP)"

.SS "#define ADC_CLM3_CLM3_MASK   (0x1FFU)"

.SS "#define ADC_CLM3_CLM3_SHIFT   (0U)"

.SS "#define ADC_CLM4_CLM4(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLM4_CLM4_SHIFT\fP)) & \fBADC_CLM4_CLM4_MASK\fP)"

.SS "#define ADC_CLM4_CLM4_MASK   (0x3FFU)"

.SS "#define ADC_CLM4_CLM4_SHIFT   (0U)"

.SS "#define ADC_CLMD_CLMD(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLMD_CLMD_SHIFT\fP)) & \fBADC_CLMD_CLMD_MASK\fP)"

.SS "#define ADC_CLMD_CLMD_MASK   (0x3FU)"

.SS "#define ADC_CLMD_CLMD_SHIFT   (0U)"

.SS "#define ADC_CLMS_CLMS(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLMS_CLMS_SHIFT\fP)) & \fBADC_CLMS_CLMS_MASK\fP)"

.SS "#define ADC_CLMS_CLMS_MASK   (0x3FU)"

.SS "#define ADC_CLMS_CLMS_SHIFT   (0U)"

.SS "#define ADC_CLP0_CLP0(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLP0_CLP0_SHIFT\fP)) & \fBADC_CLP0_CLP0_MASK\fP)"

.SS "#define ADC_CLP0_CLP0_MASK   (0x3FU)"

.SS "#define ADC_CLP0_CLP0_SHIFT   (0U)"

.SS "#define ADC_CLP1_CLP1(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLP1_CLP1_SHIFT\fP)) & \fBADC_CLP1_CLP1_MASK\fP)"

.SS "#define ADC_CLP1_CLP1_MASK   (0x7FU)"

.SS "#define ADC_CLP1_CLP1_SHIFT   (0U)"

.SS "#define ADC_CLP2_CLP2(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLP2_CLP2_SHIFT\fP)) & \fBADC_CLP2_CLP2_MASK\fP)"

.SS "#define ADC_CLP2_CLP2_MASK   (0xFFU)"

.SS "#define ADC_CLP2_CLP2_SHIFT   (0U)"

.SS "#define ADC_CLP3_CLP3(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLP3_CLP3_SHIFT\fP)) & \fBADC_CLP3_CLP3_MASK\fP)"

.SS "#define ADC_CLP3_CLP3_MASK   (0x1FFU)"

.SS "#define ADC_CLP3_CLP3_SHIFT   (0U)"

.SS "#define ADC_CLP4_CLP4(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLP4_CLP4_SHIFT\fP)) & \fBADC_CLP4_CLP4_MASK\fP)"

.SS "#define ADC_CLP4_CLP4_MASK   (0x3FFU)"

.SS "#define ADC_CLP4_CLP4_SHIFT   (0U)"

.SS "#define ADC_CLPD_CLPD(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLPD_CLPD_SHIFT\fP)) & \fBADC_CLPD_CLPD_MASK\fP)"

.SS "#define ADC_CLPD_CLPD_MASK   (0x3FU)"

.SS "#define ADC_CLPD_CLPD_SHIFT   (0U)"

.SS "#define ADC_CLPS_CLPS(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CLPS_CLPS_SHIFT\fP)) & \fBADC_CLPS_CLPS_MASK\fP)"

.SS "#define ADC_CLPS_CLPS_MASK   (0x3FU)"

.SS "#define ADC_CLPS_CLPS_SHIFT   (0U)"

.SS "#define ADC_CV1_CV(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CV1_CV_SHIFT\fP)) & \fBADC_CV1_CV_MASK\fP)"

.SS "#define ADC_CV1_CV_MASK   (0xFFFFU)"

.SS "#define ADC_CV1_CV_SHIFT   (0U)"

.SS "#define ADC_CV2_CV(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_CV2_CV_SHIFT\fP)) & \fBADC_CV2_CV_MASK\fP)"

.SS "#define ADC_CV2_CV_MASK   (0xFFFFU)"

.SS "#define ADC_CV2_CV_SHIFT   (0U)"

.SS "#define ADC_IRQS   { \fBADC0_IRQn\fP, \fBADC1_IRQn\fP }"
Interrupt vectors for the ADC peripheral type 
.SS "#define ADC_MG_MG(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_MG_MG_SHIFT\fP)) & \fBADC_MG_MG_MASK\fP)"

.SS "#define ADC_MG_MG_MASK   (0xFFFFU)"

.SS "#define ADC_MG_MG_SHIFT   (0U)"

.SS "#define ADC_OFS_OFS(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_OFS_OFS_SHIFT\fP)) & \fBADC_OFS_OFS_MASK\fP)"

.SS "#define ADC_OFS_OFS_MASK   (0xFFFFU)"

.SS "#define ADC_OFS_OFS_SHIFT   (0U)"

.SS "#define ADC_PG_PG(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_PG_PG_SHIFT\fP)) & \fBADC_PG_PG_MASK\fP)"

.SS "#define ADC_PG_PG_MASK   (0xFFFFU)"

.SS "#define ADC_PG_PG_SHIFT   (0U)"

.SS "#define ADC_R_COUNT   (2U)"

.SS "#define ADC_R_D(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_R_D_SHIFT\fP)) & \fBADC_R_D_MASK\fP)"

.SS "#define ADC_R_D_MASK   (0xFFFFU)"

.SS "#define ADC_R_D_SHIFT   (0U)"

.SS "#define ADC_SC1_ADCH(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC1_ADCH_SHIFT\fP)) & \fBADC_SC1_ADCH_MASK\fP)"

.SS "#define ADC_SC1_ADCH_MASK   (0x1FU)"

.SS "#define ADC_SC1_ADCH_SHIFT   (0U)"

.SS "#define ADC_SC1_AIEN(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC1_AIEN_SHIFT\fP)) & \fBADC_SC1_AIEN_MASK\fP)"

.SS "#define ADC_SC1_AIEN_MASK   (0x40U)"

.SS "#define ADC_SC1_AIEN_SHIFT   (6U)"

.SS "#define ADC_SC1_COCO(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC1_COCO_SHIFT\fP)) & \fBADC_SC1_COCO_MASK\fP)"

.SS "#define ADC_SC1_COCO_MASK   (0x80U)"

.SS "#define ADC_SC1_COCO_SHIFT   (7U)"

.SS "#define ADC_SC1_COUNT   (2U)"

.SS "#define ADC_SC1_DIFF(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC1_DIFF_SHIFT\fP)) & \fBADC_SC1_DIFF_MASK\fP)"

.SS "#define ADC_SC1_DIFF_MASK   (0x20U)"

.SS "#define ADC_SC1_DIFF_SHIFT   (5U)"

.SS "#define ADC_SC2_ACFE(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC2_ACFE_SHIFT\fP)) & \fBADC_SC2_ACFE_MASK\fP)"

.SS "#define ADC_SC2_ACFE_MASK   (0x20U)"

.SS "#define ADC_SC2_ACFE_SHIFT   (5U)"

.SS "#define ADC_SC2_ACFGT(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC2_ACFGT_SHIFT\fP)) & \fBADC_SC2_ACFGT_MASK\fP)"

.SS "#define ADC_SC2_ACFGT_MASK   (0x10U)"

.SS "#define ADC_SC2_ACFGT_SHIFT   (4U)"

.SS "#define ADC_SC2_ACREN(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC2_ACREN_SHIFT\fP)) & \fBADC_SC2_ACREN_MASK\fP)"

.SS "#define ADC_SC2_ACREN_MASK   (0x8U)"

.SS "#define ADC_SC2_ACREN_SHIFT   (3U)"

.SS "#define ADC_SC2_ADACT(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC2_ADACT_SHIFT\fP)) & \fBADC_SC2_ADACT_MASK\fP)"

.SS "#define ADC_SC2_ADACT_MASK   (0x80U)"

.SS "#define ADC_SC2_ADACT_SHIFT   (7U)"

.SS "#define ADC_SC2_ADTRG(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC2_ADTRG_SHIFT\fP)) & \fBADC_SC2_ADTRG_MASK\fP)"

.SS "#define ADC_SC2_ADTRG_MASK   (0x40U)"

.SS "#define ADC_SC2_ADTRG_SHIFT   (6U)"

.SS "#define ADC_SC2_DMAEN(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC2_DMAEN_SHIFT\fP)) & \fBADC_SC2_DMAEN_MASK\fP)"

.SS "#define ADC_SC2_DMAEN_MASK   (0x4U)"

.SS "#define ADC_SC2_DMAEN_SHIFT   (2U)"

.SS "#define ADC_SC2_REFSEL(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC2_REFSEL_SHIFT\fP)) & \fBADC_SC2_REFSEL_MASK\fP)"

.SS "#define ADC_SC2_REFSEL_MASK   (0x3U)"

.SS "#define ADC_SC2_REFSEL_SHIFT   (0U)"

.SS "#define ADC_SC3_ADCO(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC3_ADCO_SHIFT\fP)) & \fBADC_SC3_ADCO_MASK\fP)"

.SS "#define ADC_SC3_ADCO_MASK   (0x8U)"

.SS "#define ADC_SC3_ADCO_SHIFT   (3U)"

.SS "#define ADC_SC3_AVGE(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC3_AVGE_SHIFT\fP)) & \fBADC_SC3_AVGE_MASK\fP)"

.SS "#define ADC_SC3_AVGE_MASK   (0x4U)"

.SS "#define ADC_SC3_AVGE_SHIFT   (2U)"

.SS "#define ADC_SC3_AVGS(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC3_AVGS_SHIFT\fP)) & \fBADC_SC3_AVGS_MASK\fP)"

.SS "#define ADC_SC3_AVGS_MASK   (0x3U)"

.SS "#define ADC_SC3_AVGS_SHIFT   (0U)"

.SS "#define ADC_SC3_CAL(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC3_CAL_SHIFT\fP)) & \fBADC_SC3_CAL_MASK\fP)"

.SS "#define ADC_SC3_CAL_MASK   (0x80U)"

.SS "#define ADC_SC3_CAL_SHIFT   (7U)"

.SS "#define ADC_SC3_CALF(x)   (((uint32_t)(((uint32_t)(x)) << \fBADC_SC3_CALF_SHIFT\fP)) & \fBADC_SC3_CALF_MASK\fP)"

.SS "#define ADC_SC3_CALF_MASK   (0x40U)"

.SS "#define ADC_SC3_CALF_SHIFT   (6U)"

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
