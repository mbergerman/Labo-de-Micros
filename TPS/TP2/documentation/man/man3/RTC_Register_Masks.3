.TH "RTC_Register_Masks" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RTC_Register_Masks
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBRTC_BASE\fP   (0x4003D000u)"
.br
.ti -1c
.RI "#define \fBRTC\fP   ((\fBRTC_Type\fP *)\fBRTC_BASE\fP)"
.br
.ti -1c
.RI "#define \fBRTC_BASE_ADDRS\fP   { \fBRTC_BASE\fP }"
.br
.ti -1c
.RI "#define \fBRTC_BASE_PTRS\fP   { \fBRTC\fP }"
.br
.ti -1c
.RI "#define \fBRTC_IRQS\fP   { \fBRTC_IRQn\fP }"
.br
.ti -1c
.RI "#define \fBRTC_SECONDS_IRQS\fP   { \fBRTC_Seconds_IRQn\fP }"
.br
.in -1c
.SS "TSR - RTC Time Seconds Register"

.in +1c
.ti -1c
.RI "#define \fBRTC_TSR_TSR_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBRTC_TSR_TSR_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBRTC_TSR_TSR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_TSR_TSR_SHIFT\fP)) & \fBRTC_TSR_TSR_MASK\fP)"
.br
.in -1c
.SS "TPR - RTC Time Prescaler Register"

.in +1c
.ti -1c
.RI "#define \fBRTC_TPR_TPR_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBRTC_TPR_TPR_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBRTC_TPR_TPR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_TPR_TPR_SHIFT\fP)) & \fBRTC_TPR_TPR_MASK\fP)"
.br
.in -1c
.SS "TAR - RTC Time Alarm Register"

.in +1c
.ti -1c
.RI "#define \fBRTC_TAR_TAR_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBRTC_TAR_TAR_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBRTC_TAR_TAR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_TAR_TAR_SHIFT\fP)) & \fBRTC_TAR_TAR_MASK\fP)"
.br
.in -1c
.SS "TCR - RTC Time Compensation Register"

.in +1c
.ti -1c
.RI "#define \fBRTC_TCR_TCR_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBRTC_TCR_TCR_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBRTC_TCR_TCR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_TCR_TCR_SHIFT\fP)) & \fBRTC_TCR_TCR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_TCR_CIR_MASK\fP   (0xFF00U)"
.br
.ti -1c
.RI "#define \fBRTC_TCR_CIR_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBRTC_TCR_CIR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_TCR_CIR_SHIFT\fP)) & \fBRTC_TCR_CIR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_TCR_TCV_MASK\fP   (0xFF0000U)"
.br
.ti -1c
.RI "#define \fBRTC_TCR_TCV_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBRTC_TCR_TCV\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_TCR_TCV_SHIFT\fP)) & \fBRTC_TCR_TCV_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_TCR_CIC_MASK\fP   (0xFF000000U)"
.br
.ti -1c
.RI "#define \fBRTC_TCR_CIC_SHIFT\fP   (24U)"
.br
.ti -1c
.RI "#define \fBRTC_TCR_CIC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_TCR_CIC_SHIFT\fP)) & \fBRTC_TCR_CIC_MASK\fP)"
.br
.in -1c
.SS "CR - RTC Control Register"

.in +1c
.ti -1c
.RI "#define \fBRTC_CR_SWR_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SWR_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SWR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_SWR_SHIFT\fP)) & \fBRTC_CR_SWR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_CR_WPE_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_WPE_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_WPE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_WPE_SHIFT\fP)) & \fBRTC_CR_WPE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SUP_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SUP_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SUP\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_SUP_SHIFT\fP)) & \fBRTC_CR_SUP_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_CR_UM_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_UM_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_UM\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_UM_SHIFT\fP)) & \fBRTC_CR_UM_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_CR_WPS_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_WPS_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_WPS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_WPS_SHIFT\fP)) & \fBRTC_CR_WPS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_CR_OSCE_MASK\fP   (0x100U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_OSCE_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_OSCE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_OSCE_SHIFT\fP)) & \fBRTC_CR_OSCE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_CR_CLKO_MASK\fP   (0x200U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_CLKO_SHIFT\fP   (9U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_CLKO\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_CLKO_SHIFT\fP)) & \fBRTC_CR_CLKO_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SC16P_MASK\fP   (0x400U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SC16P_SHIFT\fP   (10U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SC16P\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_SC16P_SHIFT\fP)) & \fBRTC_CR_SC16P_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SC8P_MASK\fP   (0x800U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SC8P_SHIFT\fP   (11U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SC8P\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_SC8P_SHIFT\fP)) & \fBRTC_CR_SC8P_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SC4P_MASK\fP   (0x1000U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SC4P_SHIFT\fP   (12U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SC4P\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_SC4P_SHIFT\fP)) & \fBRTC_CR_SC4P_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SC2P_MASK\fP   (0x2000U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SC2P_SHIFT\fP   (13U)"
.br
.ti -1c
.RI "#define \fBRTC_CR_SC2P\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_SC2P_SHIFT\fP)) & \fBRTC_CR_SC2P_MASK\fP)"
.br
.in -1c
.SS "SR - RTC Status Register"

.in +1c
.ti -1c
.RI "#define \fBRTC_SR_TIF_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBRTC_SR_TIF_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBRTC_SR_TIF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_SR_TIF_SHIFT\fP)) & \fBRTC_SR_TIF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_SR_TOF_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBRTC_SR_TOF_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBRTC_SR_TOF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_SR_TOF_SHIFT\fP)) & \fBRTC_SR_TOF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_SR_TAF_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBRTC_SR_TAF_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBRTC_SR_TAF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_SR_TAF_SHIFT\fP)) & \fBRTC_SR_TAF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_SR_TCE_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBRTC_SR_TCE_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBRTC_SR_TCE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_SR_TCE_SHIFT\fP)) & \fBRTC_SR_TCE_MASK\fP)"
.br
.in -1c
.SS "LR - RTC Lock Register"

.in +1c
.ti -1c
.RI "#define \fBRTC_LR_TCL_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBRTC_LR_TCL_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBRTC_LR_TCL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_LR_TCL_SHIFT\fP)) & \fBRTC_LR_TCL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_LR_CRL_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBRTC_LR_CRL_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBRTC_LR_CRL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_LR_CRL_SHIFT\fP)) & \fBRTC_LR_CRL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_LR_SRL_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBRTC_LR_SRL_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBRTC_LR_SRL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_LR_SRL_SHIFT\fP)) & \fBRTC_LR_SRL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_LR_LRL_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBRTC_LR_LRL_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBRTC_LR_LRL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_LR_LRL_SHIFT\fP)) & \fBRTC_LR_LRL_MASK\fP)"
.br
.in -1c
.SS "IER - RTC Interrupt Enable Register"

.in +1c
.ti -1c
.RI "#define \fBRTC_IER_TIIE_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBRTC_IER_TIIE_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBRTC_IER_TIIE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_IER_TIIE_SHIFT\fP)) & \fBRTC_IER_TIIE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_IER_TOIE_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBRTC_IER_TOIE_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBRTC_IER_TOIE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_IER_TOIE_SHIFT\fP)) & \fBRTC_IER_TOIE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_IER_TAIE_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBRTC_IER_TAIE_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBRTC_IER_TAIE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_IER_TAIE_SHIFT\fP)) & \fBRTC_IER_TAIE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_IER_TSIE_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBRTC_IER_TSIE_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBRTC_IER_TSIE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_IER_TSIE_SHIFT\fP)) & \fBRTC_IER_TSIE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_IER_WPON_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBRTC_IER_WPON_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBRTC_IER_WPON\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_IER_WPON_SHIFT\fP)) & \fBRTC_IER_WPON_MASK\fP)"
.br
.in -1c
.SS "WAR - RTC Write Access Register"

.in +1c
.ti -1c
.RI "#define \fBRTC_WAR_TSRW_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_TSRW_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_TSRW\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_WAR_TSRW_SHIFT\fP)) & \fBRTC_WAR_TSRW_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_TPRW_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_TPRW_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_TPRW\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_WAR_TPRW_SHIFT\fP)) & \fBRTC_WAR_TPRW_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_TARW_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_TARW_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_TARW\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_WAR_TARW_SHIFT\fP)) & \fBRTC_WAR_TARW_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_TCRW_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_TCRW_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_TCRW\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_WAR_TCRW_SHIFT\fP)) & \fBRTC_WAR_TCRW_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_CRW_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_CRW_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_CRW\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_WAR_CRW_SHIFT\fP)) & \fBRTC_WAR_CRW_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_SRW_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_SRW_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_SRW\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_WAR_SRW_SHIFT\fP)) & \fBRTC_WAR_SRW_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_LRW_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_LRW_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_LRW\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_WAR_LRW_SHIFT\fP)) & \fBRTC_WAR_LRW_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_IERW_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_IERW_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBRTC_WAR_IERW\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_WAR_IERW_SHIFT\fP)) & \fBRTC_WAR_IERW_MASK\fP)"
.br
.in -1c
.SS "RAR - RTC Read Access Register"

.in +1c
.ti -1c
.RI "#define \fBRTC_RAR_TSRR_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_TSRR_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_TSRR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_RAR_TSRR_SHIFT\fP)) & \fBRTC_RAR_TSRR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_TPRR_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_TPRR_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_TPRR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_RAR_TPRR_SHIFT\fP)) & \fBRTC_RAR_TPRR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_TARR_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_TARR_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_TARR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_RAR_TARR_SHIFT\fP)) & \fBRTC_RAR_TARR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_TCRR_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_TCRR_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_TCRR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_RAR_TCRR_SHIFT\fP)) & \fBRTC_RAR_TCRR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_CRR_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_CRR_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_CRR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_RAR_CRR_SHIFT\fP)) & \fBRTC_RAR_CRR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_SRR_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_SRR_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_SRR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_RAR_SRR_SHIFT\fP)) & \fBRTC_RAR_SRR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_LRR_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_LRR_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_LRR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_RAR_LRR_SHIFT\fP)) & \fBRTC_RAR_LRR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_IERR_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_IERR_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBRTC_RAR_IERR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_RAR_IERR_SHIFT\fP)) & \fBRTC_RAR_IERR_MASK\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define RTC   ((\fBRTC_Type\fP *)\fBRTC_BASE\fP)"
Peripheral RTC base pointer 
.SS "#define RTC_BASE   (0x4003D000u)"
Peripheral RTC base address 
.SS "#define RTC_BASE_ADDRS   { \fBRTC_BASE\fP }"
Array initializer of RTC peripheral base addresses 
.SS "#define RTC_BASE_PTRS   { \fBRTC\fP }"
Array initializer of RTC peripheral base pointers 
.SS "#define RTC_CR_CLKO(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_CLKO_SHIFT\fP)) & \fBRTC_CR_CLKO_MASK\fP)"

.SS "#define RTC_CR_CLKO_MASK   (0x200U)"

.SS "#define RTC_CR_CLKO_SHIFT   (9U)"

.SS "#define RTC_CR_OSCE(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_OSCE_SHIFT\fP)) & \fBRTC_CR_OSCE_MASK\fP)"

.SS "#define RTC_CR_OSCE_MASK   (0x100U)"

.SS "#define RTC_CR_OSCE_SHIFT   (8U)"

.SS "#define RTC_CR_SC16P(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_SC16P_SHIFT\fP)) & \fBRTC_CR_SC16P_MASK\fP)"

.SS "#define RTC_CR_SC16P_MASK   (0x400U)"

.SS "#define RTC_CR_SC16P_SHIFT   (10U)"

.SS "#define RTC_CR_SC2P(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_SC2P_SHIFT\fP)) & \fBRTC_CR_SC2P_MASK\fP)"

.SS "#define RTC_CR_SC2P_MASK   (0x2000U)"

.SS "#define RTC_CR_SC2P_SHIFT   (13U)"

.SS "#define RTC_CR_SC4P(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_SC4P_SHIFT\fP)) & \fBRTC_CR_SC4P_MASK\fP)"

.SS "#define RTC_CR_SC4P_MASK   (0x1000U)"

.SS "#define RTC_CR_SC4P_SHIFT   (12U)"

.SS "#define RTC_CR_SC8P(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_SC8P_SHIFT\fP)) & \fBRTC_CR_SC8P_MASK\fP)"

.SS "#define RTC_CR_SC8P_MASK   (0x800U)"

.SS "#define RTC_CR_SC8P_SHIFT   (11U)"

.SS "#define RTC_CR_SUP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_SUP_SHIFT\fP)) & \fBRTC_CR_SUP_MASK\fP)"

.SS "#define RTC_CR_SUP_MASK   (0x4U)"

.SS "#define RTC_CR_SUP_SHIFT   (2U)"

.SS "#define RTC_CR_SWR(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_SWR_SHIFT\fP)) & \fBRTC_CR_SWR_MASK\fP)"

.SS "#define RTC_CR_SWR_MASK   (0x1U)"

.SS "#define RTC_CR_SWR_SHIFT   (0U)"

.SS "#define RTC_CR_UM(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_UM_SHIFT\fP)) & \fBRTC_CR_UM_MASK\fP)"

.SS "#define RTC_CR_UM_MASK   (0x8U)"

.SS "#define RTC_CR_UM_SHIFT   (3U)"

.SS "#define RTC_CR_WPE(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_WPE_SHIFT\fP)) & \fBRTC_CR_WPE_MASK\fP)"

.SS "#define RTC_CR_WPE_MASK   (0x2U)"

.SS "#define RTC_CR_WPE_SHIFT   (1U)"

.SS "#define RTC_CR_WPS(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_CR_WPS_SHIFT\fP)) & \fBRTC_CR_WPS_MASK\fP)"

.SS "#define RTC_CR_WPS_MASK   (0x10U)"

.SS "#define RTC_CR_WPS_SHIFT   (4U)"

.SS "#define RTC_IER_TAIE(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_IER_TAIE_SHIFT\fP)) & \fBRTC_IER_TAIE_MASK\fP)"

.SS "#define RTC_IER_TAIE_MASK   (0x4U)"

.SS "#define RTC_IER_TAIE_SHIFT   (2U)"

.SS "#define RTC_IER_TIIE(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_IER_TIIE_SHIFT\fP)) & \fBRTC_IER_TIIE_MASK\fP)"

.SS "#define RTC_IER_TIIE_MASK   (0x1U)"

.SS "#define RTC_IER_TIIE_SHIFT   (0U)"

.SS "#define RTC_IER_TOIE(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_IER_TOIE_SHIFT\fP)) & \fBRTC_IER_TOIE_MASK\fP)"

.SS "#define RTC_IER_TOIE_MASK   (0x2U)"

.SS "#define RTC_IER_TOIE_SHIFT   (1U)"

.SS "#define RTC_IER_TSIE(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_IER_TSIE_SHIFT\fP)) & \fBRTC_IER_TSIE_MASK\fP)"

.SS "#define RTC_IER_TSIE_MASK   (0x10U)"

.SS "#define RTC_IER_TSIE_SHIFT   (4U)"

.SS "#define RTC_IER_WPON(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_IER_WPON_SHIFT\fP)) & \fBRTC_IER_WPON_MASK\fP)"

.SS "#define RTC_IER_WPON_MASK   (0x80U)"

.SS "#define RTC_IER_WPON_SHIFT   (7U)"

.SS "#define RTC_IRQS   { \fBRTC_IRQn\fP }"
Interrupt vectors for the RTC peripheral type 
.SS "#define RTC_LR_CRL(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_LR_CRL_SHIFT\fP)) & \fBRTC_LR_CRL_MASK\fP)"

.SS "#define RTC_LR_CRL_MASK   (0x10U)"

.SS "#define RTC_LR_CRL_SHIFT   (4U)"

.SS "#define RTC_LR_LRL(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_LR_LRL_SHIFT\fP)) & \fBRTC_LR_LRL_MASK\fP)"

.SS "#define RTC_LR_LRL_MASK   (0x40U)"

.SS "#define RTC_LR_LRL_SHIFT   (6U)"

.SS "#define RTC_LR_SRL(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_LR_SRL_SHIFT\fP)) & \fBRTC_LR_SRL_MASK\fP)"

.SS "#define RTC_LR_SRL_MASK   (0x20U)"

.SS "#define RTC_LR_SRL_SHIFT   (5U)"

.SS "#define RTC_LR_TCL(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_LR_TCL_SHIFT\fP)) & \fBRTC_LR_TCL_MASK\fP)"

.SS "#define RTC_LR_TCL_MASK   (0x8U)"

.SS "#define RTC_LR_TCL_SHIFT   (3U)"

.SS "#define RTC_RAR_CRR(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_RAR_CRR_SHIFT\fP)) & \fBRTC_RAR_CRR_MASK\fP)"

.SS "#define RTC_RAR_CRR_MASK   (0x10U)"

.SS "#define RTC_RAR_CRR_SHIFT   (4U)"

.SS "#define RTC_RAR_IERR(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_RAR_IERR_SHIFT\fP)) & \fBRTC_RAR_IERR_MASK\fP)"

.SS "#define RTC_RAR_IERR_MASK   (0x80U)"

.SS "#define RTC_RAR_IERR_SHIFT   (7U)"

.SS "#define RTC_RAR_LRR(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_RAR_LRR_SHIFT\fP)) & \fBRTC_RAR_LRR_MASK\fP)"

.SS "#define RTC_RAR_LRR_MASK   (0x40U)"

.SS "#define RTC_RAR_LRR_SHIFT   (6U)"

.SS "#define RTC_RAR_SRR(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_RAR_SRR_SHIFT\fP)) & \fBRTC_RAR_SRR_MASK\fP)"

.SS "#define RTC_RAR_SRR_MASK   (0x20U)"

.SS "#define RTC_RAR_SRR_SHIFT   (5U)"

.SS "#define RTC_RAR_TARR(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_RAR_TARR_SHIFT\fP)) & \fBRTC_RAR_TARR_MASK\fP)"

.SS "#define RTC_RAR_TARR_MASK   (0x4U)"

.SS "#define RTC_RAR_TARR_SHIFT   (2U)"

.SS "#define RTC_RAR_TCRR(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_RAR_TCRR_SHIFT\fP)) & \fBRTC_RAR_TCRR_MASK\fP)"

.SS "#define RTC_RAR_TCRR_MASK   (0x8U)"

.SS "#define RTC_RAR_TCRR_SHIFT   (3U)"

.SS "#define RTC_RAR_TPRR(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_RAR_TPRR_SHIFT\fP)) & \fBRTC_RAR_TPRR_MASK\fP)"

.SS "#define RTC_RAR_TPRR_MASK   (0x2U)"

.SS "#define RTC_RAR_TPRR_SHIFT   (1U)"

.SS "#define RTC_RAR_TSRR(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_RAR_TSRR_SHIFT\fP)) & \fBRTC_RAR_TSRR_MASK\fP)"

.SS "#define RTC_RAR_TSRR_MASK   (0x1U)"

.SS "#define RTC_RAR_TSRR_SHIFT   (0U)"

.SS "#define RTC_SECONDS_IRQS   { \fBRTC_Seconds_IRQn\fP }"

.SS "#define RTC_SR_TAF(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_SR_TAF_SHIFT\fP)) & \fBRTC_SR_TAF_MASK\fP)"

.SS "#define RTC_SR_TAF_MASK   (0x4U)"

.SS "#define RTC_SR_TAF_SHIFT   (2U)"

.SS "#define RTC_SR_TCE(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_SR_TCE_SHIFT\fP)) & \fBRTC_SR_TCE_MASK\fP)"

.SS "#define RTC_SR_TCE_MASK   (0x10U)"

.SS "#define RTC_SR_TCE_SHIFT   (4U)"

.SS "#define RTC_SR_TIF(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_SR_TIF_SHIFT\fP)) & \fBRTC_SR_TIF_MASK\fP)"

.SS "#define RTC_SR_TIF_MASK   (0x1U)"

.SS "#define RTC_SR_TIF_SHIFT   (0U)"

.SS "#define RTC_SR_TOF(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_SR_TOF_SHIFT\fP)) & \fBRTC_SR_TOF_MASK\fP)"

.SS "#define RTC_SR_TOF_MASK   (0x2U)"

.SS "#define RTC_SR_TOF_SHIFT   (1U)"

.SS "#define RTC_TAR_TAR(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_TAR_TAR_SHIFT\fP)) & \fBRTC_TAR_TAR_MASK\fP)"

.SS "#define RTC_TAR_TAR_MASK   (0xFFFFFFFFU)"

.SS "#define RTC_TAR_TAR_SHIFT   (0U)"

.SS "#define RTC_TCR_CIC(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_TCR_CIC_SHIFT\fP)) & \fBRTC_TCR_CIC_MASK\fP)"

.SS "#define RTC_TCR_CIC_MASK   (0xFF000000U)"

.SS "#define RTC_TCR_CIC_SHIFT   (24U)"

.SS "#define RTC_TCR_CIR(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_TCR_CIR_SHIFT\fP)) & \fBRTC_TCR_CIR_MASK\fP)"

.SS "#define RTC_TCR_CIR_MASK   (0xFF00U)"

.SS "#define RTC_TCR_CIR_SHIFT   (8U)"

.SS "#define RTC_TCR_TCR(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_TCR_TCR_SHIFT\fP)) & \fBRTC_TCR_TCR_MASK\fP)"

.SS "#define RTC_TCR_TCR_MASK   (0xFFU)"

.SS "#define RTC_TCR_TCR_SHIFT   (0U)"

.SS "#define RTC_TCR_TCV(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_TCR_TCV_SHIFT\fP)) & \fBRTC_TCR_TCV_MASK\fP)"

.SS "#define RTC_TCR_TCV_MASK   (0xFF0000U)"

.SS "#define RTC_TCR_TCV_SHIFT   (16U)"

.SS "#define RTC_TPR_TPR(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_TPR_TPR_SHIFT\fP)) & \fBRTC_TPR_TPR_MASK\fP)"

.SS "#define RTC_TPR_TPR_MASK   (0xFFFFU)"

.SS "#define RTC_TPR_TPR_SHIFT   (0U)"

.SS "#define RTC_TSR_TSR(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_TSR_TSR_SHIFT\fP)) & \fBRTC_TSR_TSR_MASK\fP)"

.SS "#define RTC_TSR_TSR_MASK   (0xFFFFFFFFU)"

.SS "#define RTC_TSR_TSR_SHIFT   (0U)"

.SS "#define RTC_WAR_CRW(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_WAR_CRW_SHIFT\fP)) & \fBRTC_WAR_CRW_MASK\fP)"

.SS "#define RTC_WAR_CRW_MASK   (0x10U)"

.SS "#define RTC_WAR_CRW_SHIFT   (4U)"

.SS "#define RTC_WAR_IERW(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_WAR_IERW_SHIFT\fP)) & \fBRTC_WAR_IERW_MASK\fP)"

.SS "#define RTC_WAR_IERW_MASK   (0x80U)"

.SS "#define RTC_WAR_IERW_SHIFT   (7U)"

.SS "#define RTC_WAR_LRW(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_WAR_LRW_SHIFT\fP)) & \fBRTC_WAR_LRW_MASK\fP)"

.SS "#define RTC_WAR_LRW_MASK   (0x40U)"

.SS "#define RTC_WAR_LRW_SHIFT   (6U)"

.SS "#define RTC_WAR_SRW(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_WAR_SRW_SHIFT\fP)) & \fBRTC_WAR_SRW_MASK\fP)"

.SS "#define RTC_WAR_SRW_MASK   (0x20U)"

.SS "#define RTC_WAR_SRW_SHIFT   (5U)"

.SS "#define RTC_WAR_TARW(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_WAR_TARW_SHIFT\fP)) & \fBRTC_WAR_TARW_MASK\fP)"

.SS "#define RTC_WAR_TARW_MASK   (0x4U)"

.SS "#define RTC_WAR_TARW_SHIFT   (2U)"

.SS "#define RTC_WAR_TCRW(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_WAR_TCRW_SHIFT\fP)) & \fBRTC_WAR_TCRW_MASK\fP)"

.SS "#define RTC_WAR_TCRW_MASK   (0x8U)"

.SS "#define RTC_WAR_TCRW_SHIFT   (3U)"

.SS "#define RTC_WAR_TPRW(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_WAR_TPRW_SHIFT\fP)) & \fBRTC_WAR_TPRW_MASK\fP)"

.SS "#define RTC_WAR_TPRW_MASK   (0x2U)"

.SS "#define RTC_WAR_TPRW_SHIFT   (1U)"

.SS "#define RTC_WAR_TSRW(x)   (((uint32_t)(((uint32_t)(x)) << \fBRTC_WAR_TSRW_SHIFT\fP)) & \fBRTC_WAR_TSRW_MASK\fP)"

.SS "#define RTC_WAR_TSRW_MASK   (0x1U)"

.SS "#define RTC_WAR_TSRW_SHIFT   (0U)"

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
