.TH "PORT_Register_Masks" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PORT_Register_Masks
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBPORTA_BASE\fP   (0x40049000u)"
.br
.ti -1c
.RI "#define \fBPORTA\fP   ((\fBPORT_Type\fP *)\fBPORTA_BASE\fP)"
.br
.ti -1c
.RI "#define \fBPORTB_BASE\fP   (0x4004A000u)"
.br
.ti -1c
.RI "#define \fBPORTB\fP   ((\fBPORT_Type\fP *)\fBPORTB_BASE\fP)"
.br
.ti -1c
.RI "#define \fBPORTC_BASE\fP   (0x4004B000u)"
.br
.ti -1c
.RI "#define \fBPORTC\fP   ((\fBPORT_Type\fP *)\fBPORTC_BASE\fP)"
.br
.ti -1c
.RI "#define \fBPORTD_BASE\fP   (0x4004C000u)"
.br
.ti -1c
.RI "#define \fBPORTD\fP   ((\fBPORT_Type\fP *)\fBPORTD_BASE\fP)"
.br
.ti -1c
.RI "#define \fBPORTE_BASE\fP   (0x4004D000u)"
.br
.ti -1c
.RI "#define \fBPORTE\fP   ((\fBPORT_Type\fP *)\fBPORTE_BASE\fP)"
.br
.ti -1c
.RI "#define \fBPORT_BASE_ADDRS\fP   { \fBPORTA_BASE\fP, \fBPORTB_BASE\fP, \fBPORTC_BASE\fP, \fBPORTD_BASE\fP, \fBPORTE_BASE\fP }"
.br
.ti -1c
.RI "#define \fBPORT_BASE_PTRS\fP   { \fBPORTA\fP, \fBPORTB\fP, \fBPORTC\fP, \fBPORTD\fP, \fBPORTE\fP }"
.br
.ti -1c
.RI "#define \fBPORT_IRQS\fP   { \fBPORTA_IRQn\fP, \fBPORTB_IRQn\fP, \fBPORTC_IRQn\fP, \fBPORTD_IRQn\fP, \fBPORTE_IRQn\fP }"
.br
.in -1c
.SS "PCR - Pin Control Register n"

.in +1c
.ti -1c
.RI "#define \fBPORT_PCR_PS_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_PS_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_PS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_PS_SHIFT\fP)) & \fBPORT_PCR_PS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_PE_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_PE_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_PE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_PE_SHIFT\fP)) & \fBPORT_PCR_PE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_SRE_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_SRE_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_SRE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_SRE_SHIFT\fP)) & \fBPORT_PCR_SRE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_PFE_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_PFE_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_PFE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_PFE_SHIFT\fP)) & \fBPORT_PCR_PFE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_ODE_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_ODE_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_ODE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_ODE_SHIFT\fP)) & \fBPORT_PCR_ODE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_DSE_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_DSE_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_DSE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_DSE_SHIFT\fP)) & \fBPORT_PCR_DSE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_MUX_MASK\fP   (0x700U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_MUX_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_MUX\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_MUX_SHIFT\fP)) & \fBPORT_PCR_MUX_MASK\fP)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_LK_MASK\fP   (0x8000U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_LK_SHIFT\fP   (15U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_LK\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_LK_SHIFT\fP)) & \fBPORT_PCR_LK_MASK\fP)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_IRQC_MASK\fP   (0xF0000U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_IRQC_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_IRQC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_IRQC_SHIFT\fP)) & \fBPORT_PCR_IRQC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_ISF_MASK\fP   (0x1000000U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_ISF_SHIFT\fP   (24U)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_ISF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_ISF_SHIFT\fP)) & \fBPORT_PCR_ISF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBPORT_PCR_COUNT\fP   (32U)"
.br
.in -1c
.SS "GPCLR - Global Pin Control Low Register"

.in +1c
.ti -1c
.RI "#define \fBPORT_GPCLR_GPWD_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBPORT_GPCLR_GPWD_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBPORT_GPCLR_GPWD\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_GPCLR_GPWD_SHIFT\fP)) & \fBPORT_GPCLR_GPWD_MASK\fP)"
.br
.ti -1c
.RI "#define \fBPORT_GPCLR_GPWE_MASK\fP   (0xFFFF0000U)"
.br
.ti -1c
.RI "#define \fBPORT_GPCLR_GPWE_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBPORT_GPCLR_GPWE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_GPCLR_GPWE_SHIFT\fP)) & \fBPORT_GPCLR_GPWE_MASK\fP)"
.br
.in -1c
.SS "GPCHR - Global Pin Control High Register"

.in +1c
.ti -1c
.RI "#define \fBPORT_GPCHR_GPWD_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBPORT_GPCHR_GPWD_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBPORT_GPCHR_GPWD\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_GPCHR_GPWD_SHIFT\fP)) & \fBPORT_GPCHR_GPWD_MASK\fP)"
.br
.ti -1c
.RI "#define \fBPORT_GPCHR_GPWE_MASK\fP   (0xFFFF0000U)"
.br
.ti -1c
.RI "#define \fBPORT_GPCHR_GPWE_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBPORT_GPCHR_GPWE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_GPCHR_GPWE_SHIFT\fP)) & \fBPORT_GPCHR_GPWE_MASK\fP)"
.br
.in -1c
.SS "ISFR - Interrupt Status Flag Register"

.in +1c
.ti -1c
.RI "#define \fBPORT_ISFR_ISF_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBPORT_ISFR_ISF_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBPORT_ISFR_ISF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_ISFR_ISF_SHIFT\fP)) & \fBPORT_ISFR_ISF_MASK\fP)"
.br
.in -1c
.SS "DFER - Digital Filter Enable Register"

.in +1c
.ti -1c
.RI "#define \fBPORT_DFER_DFE_MASK\fP   (0xFFFFFFFFU)"
.br
.ti -1c
.RI "#define \fBPORT_DFER_DFE_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBPORT_DFER_DFE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_DFER_DFE_SHIFT\fP)) & \fBPORT_DFER_DFE_MASK\fP)"
.br
.in -1c
.SS "DFCR - Digital Filter Clock Register"

.in +1c
.ti -1c
.RI "#define \fBPORT_DFCR_CS_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBPORT_DFCR_CS_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBPORT_DFCR_CS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_DFCR_CS_SHIFT\fP)) & \fBPORT_DFCR_CS_MASK\fP)"
.br
.in -1c
.SS "DFWR - Digital Filter Width Register"

.in +1c
.ti -1c
.RI "#define \fBPORT_DFWR_FILT_MASK\fP   (0x1FU)"
.br
.ti -1c
.RI "#define \fBPORT_DFWR_FILT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBPORT_DFWR_FILT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_DFWR_FILT_SHIFT\fP)) & \fBPORT_DFWR_FILT_MASK\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define PORT_BASE_ADDRS   { \fBPORTA_BASE\fP, \fBPORTB_BASE\fP, \fBPORTC_BASE\fP, \fBPORTD_BASE\fP, \fBPORTE_BASE\fP }"
Array initializer of PORT peripheral base addresses 
.SS "#define PORT_BASE_PTRS   { \fBPORTA\fP, \fBPORTB\fP, \fBPORTC\fP, \fBPORTD\fP, \fBPORTE\fP }"
Array initializer of PORT peripheral base pointers 
.SS "#define PORT_DFCR_CS(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_DFCR_CS_SHIFT\fP)) & \fBPORT_DFCR_CS_MASK\fP)"

.SS "#define PORT_DFCR_CS_MASK   (0x1U)"

.SS "#define PORT_DFCR_CS_SHIFT   (0U)"

.SS "#define PORT_DFER_DFE(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_DFER_DFE_SHIFT\fP)) & \fBPORT_DFER_DFE_MASK\fP)"

.SS "#define PORT_DFER_DFE_MASK   (0xFFFFFFFFU)"

.SS "#define PORT_DFER_DFE_SHIFT   (0U)"

.SS "#define PORT_DFWR_FILT(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_DFWR_FILT_SHIFT\fP)) & \fBPORT_DFWR_FILT_MASK\fP)"

.SS "#define PORT_DFWR_FILT_MASK   (0x1FU)"

.SS "#define PORT_DFWR_FILT_SHIFT   (0U)"

.SS "#define PORT_GPCHR_GPWD(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_GPCHR_GPWD_SHIFT\fP)) & \fBPORT_GPCHR_GPWD_MASK\fP)"

.SS "#define PORT_GPCHR_GPWD_MASK   (0xFFFFU)"

.SS "#define PORT_GPCHR_GPWD_SHIFT   (0U)"

.SS "#define PORT_GPCHR_GPWE(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_GPCHR_GPWE_SHIFT\fP)) & \fBPORT_GPCHR_GPWE_MASK\fP)"

.SS "#define PORT_GPCHR_GPWE_MASK   (0xFFFF0000U)"

.SS "#define PORT_GPCHR_GPWE_SHIFT   (16U)"

.SS "#define PORT_GPCLR_GPWD(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_GPCLR_GPWD_SHIFT\fP)) & \fBPORT_GPCLR_GPWD_MASK\fP)"

.SS "#define PORT_GPCLR_GPWD_MASK   (0xFFFFU)"

.SS "#define PORT_GPCLR_GPWD_SHIFT   (0U)"

.SS "#define PORT_GPCLR_GPWE(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_GPCLR_GPWE_SHIFT\fP)) & \fBPORT_GPCLR_GPWE_MASK\fP)"

.SS "#define PORT_GPCLR_GPWE_MASK   (0xFFFF0000U)"

.SS "#define PORT_GPCLR_GPWE_SHIFT   (16U)"

.SS "#define PORT_IRQS   { \fBPORTA_IRQn\fP, \fBPORTB_IRQn\fP, \fBPORTC_IRQn\fP, \fBPORTD_IRQn\fP, \fBPORTE_IRQn\fP }"
Interrupt vectors for the PORT peripheral type 
.SS "#define PORT_ISFR_ISF(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_ISFR_ISF_SHIFT\fP)) & \fBPORT_ISFR_ISF_MASK\fP)"

.SS "#define PORT_ISFR_ISF_MASK   (0xFFFFFFFFU)"

.SS "#define PORT_ISFR_ISF_SHIFT   (0U)"

.SS "#define PORT_PCR_COUNT   (32U)"

.SS "#define PORT_PCR_DSE(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_DSE_SHIFT\fP)) & \fBPORT_PCR_DSE_MASK\fP)"

.SS "#define PORT_PCR_DSE_MASK   (0x40U)"

.SS "#define PORT_PCR_DSE_SHIFT   (6U)"

.SS "#define PORT_PCR_IRQC(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_IRQC_SHIFT\fP)) & \fBPORT_PCR_IRQC_MASK\fP)"

.SS "#define PORT_PCR_IRQC_MASK   (0xF0000U)"

.SS "#define PORT_PCR_IRQC_SHIFT   (16U)"

.SS "#define PORT_PCR_ISF(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_ISF_SHIFT\fP)) & \fBPORT_PCR_ISF_MASK\fP)"

.SS "#define PORT_PCR_ISF_MASK   (0x1000000U)"

.SS "#define PORT_PCR_ISF_SHIFT   (24U)"

.SS "#define PORT_PCR_LK(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_LK_SHIFT\fP)) & \fBPORT_PCR_LK_MASK\fP)"

.SS "#define PORT_PCR_LK_MASK   (0x8000U)"

.SS "#define PORT_PCR_LK_SHIFT   (15U)"

.SS "#define PORT_PCR_MUX(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_MUX_SHIFT\fP)) & \fBPORT_PCR_MUX_MASK\fP)"

.SS "#define PORT_PCR_MUX_MASK   (0x700U)"

.SS "#define PORT_PCR_MUX_SHIFT   (8U)"

.SS "#define PORT_PCR_ODE(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_ODE_SHIFT\fP)) & \fBPORT_PCR_ODE_MASK\fP)"

.SS "#define PORT_PCR_ODE_MASK   (0x20U)"

.SS "#define PORT_PCR_ODE_SHIFT   (5U)"

.SS "#define PORT_PCR_PE(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_PE_SHIFT\fP)) & \fBPORT_PCR_PE_MASK\fP)"

.SS "#define PORT_PCR_PE_MASK   (0x2U)"

.SS "#define PORT_PCR_PE_SHIFT   (1U)"

.SS "#define PORT_PCR_PFE(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_PFE_SHIFT\fP)) & \fBPORT_PCR_PFE_MASK\fP)"

.SS "#define PORT_PCR_PFE_MASK   (0x10U)"

.SS "#define PORT_PCR_PFE_SHIFT   (4U)"

.SS "#define PORT_PCR_PS(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_PS_SHIFT\fP)) & \fBPORT_PCR_PS_MASK\fP)"

.SS "#define PORT_PCR_PS_MASK   (0x1U)"

.SS "#define PORT_PCR_PS_SHIFT   (0U)"

.SS "#define PORT_PCR_SRE(x)   (((uint32_t)(((uint32_t)(x)) << \fBPORT_PCR_SRE_SHIFT\fP)) & \fBPORT_PCR_SRE_MASK\fP)"

.SS "#define PORT_PCR_SRE_MASK   (0x4U)"

.SS "#define PORT_PCR_SRE_SHIFT   (2U)"

.SS "#define PORTA   ((\fBPORT_Type\fP *)\fBPORTA_BASE\fP)"
Peripheral PORTA base pointer 
.SS "#define PORTA_BASE   (0x40049000u)"
Peripheral PORTA base address 
.SS "#define PORTB   ((\fBPORT_Type\fP *)\fBPORTB_BASE\fP)"
Peripheral PORTB base pointer 
.SS "#define PORTB_BASE   (0x4004A000u)"
Peripheral PORTB base address 
.SS "#define PORTC   ((\fBPORT_Type\fP *)\fBPORTC_BASE\fP)"
Peripheral PORTC base pointer 
.SS "#define PORTC_BASE   (0x4004B000u)"
Peripheral PORTC base address 
.SS "#define PORTD   ((\fBPORT_Type\fP *)\fBPORTD_BASE\fP)"
Peripheral PORTD base pointer 
.SS "#define PORTD_BASE   (0x4004C000u)"
Peripheral PORTD base address 
.SS "#define PORTE   ((\fBPORT_Type\fP *)\fBPORTE_BASE\fP)"
Peripheral PORTE base pointer 
.SS "#define PORTE_BASE   (0x4004D000u)"
Peripheral PORTE base address 
.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
