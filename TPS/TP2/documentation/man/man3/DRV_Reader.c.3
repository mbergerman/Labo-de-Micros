.TH "drivers/DRV_Reader.c" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
drivers/DRV_Reader.c \- Card Reader driver\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'DRV_Reader\&.h'\fP
.br
\fC#include 'DRV_Timers\&.h'\fP
.br
\fC#include 'PDRV_GPIO\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBREADER_EN_PIN\fP   \fBPORTNUM2PIN\fP(\fBPD\fP, 0)"
.br
.ti -1c
.RI "#define \fBREADER_CLK_PIN\fP   \fBPORTNUM2PIN\fP(\fBPC\fP, 4)"
.br
.ti -1c
.RI "#define \fBREADER_DATA_PIN\fP   \fBPORTNUM2PIN\fP(\fBPC\fP, 12)"
.br
.ti -1c
.RI "#define \fBEN_ACTIVE\fP   false"
.br
.ti -1c
.RI "#define \fBDATA_ONE\fP   false"
.br
.ti -1c
.RI "#define \fBDATA_ZERO\fP   (!\fBDATA_ONE\fP)"
.br
.ti -1c
.RI "#define \fBCHAR_BITS\fP   5"
.br
.ti -1c
.RI "#define \fBBUFFER_LEN\fP   40"
.br
.ti -1c
.RI "#define \fBPAN_MAX_LEN\fP   \fBREADER_NUM_MAX_LEN\fP"
.br
.ti -1c
.RI "#define \fBADD_CHARS_MIN\fP   7"
.br
.ti -1c
.RI "#define \fBNUM_DATA_LEN\fP   37"
.br
.ti -1c
.RI "#define \fBFS_LEN\fP   1"
.br
.ti -1c
.RI "#define \fBSS_CHAR\fP   ';'"
.br
.ti -1c
.RI "#define \fBFS_CHAR\fP   '='"
.br
.ti -1c
.RI "#define \fBES_CHAR\fP   '?'"
.br
.ti -1c
.RI "#define \fBES_BITS\fP   0b11111"
.br
.ti -1c
.RI "#define \fBBITS2CHAR\fP(b)"
.br
.ti -1c
.RI "#define \fBBITPARITY4\fP(b)   ((b & 0b1) ^ (b>>1 & 0b1) ^ (b>>2 & 0b1) ^ (b>>3 & 0b1))"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum { \fBSTART\fP, \fBCHAR\fP, \fBEND\fP }"
.br
.ti -1c
.RI "enum { \fBSS\fP, \fBPAN\fP, \fBAD\fP, \fBLRC\fP, \fBSUCCESS\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBinitReader\fP (void)"
.br
.RI "Initialize Card Reader\&. "
.ti -1c
.RI "void \fBenableReader\fP ()"
.br
.RI "Enable card Reader interruptions\&. "
.ti -1c
.RI "void \fBdisableReader\fP ()"
.br
.RI "Disable Card Reader interruptions\&. "
.ti -1c
.RI "bool \fBreaderRunning\fP ()"
.br
.ti -1c
.RI "bool \fBreaderIsReady\fP ()"
.br
.RI "Check if card has been correctly swiped\&. "
.ti -1c
.RI "void \fBgetValueReader\fP (char *result_number_ptr, uint8_t *result_len_ptr)"
.br
.RI "Get card number value\&. "
.in -1c
.SH "Detailed Description"
.PP 
Card Reader driver\&. 


.PP
\fBAuthor:\fP
.RS 4
Grupo 1 
.RE
.PP

.SH "Macro Definition Documentation"
.PP 
.SS "#define ADD_CHARS_MIN   7"

.SS "#define BITPARITY4(b)   ((b & 0b1) ^ (b>>1 & 0b1) ^ (b>>2 & 0b1) ^ (b>>3 & 0b1))"

.SS "#define BITS2CHAR(b)"
\fBValue:\fP
.PP
.nf
((b == 0b10000) ? '0' : \
                        ((b == 0b00001) ? '1' : \
                        ((b == 0b00010) ? '2' : \
                        ((b == 0b10011) ? '3' : \
                        ((b == 0b00100) ? '4' : \
                        ((b == 0b10101) ? '5' : \
                        ((b == 0b10110) ? '6' : \
                        ((b == 0b00111) ? '7' : \
                        ((b == 0b01000) ? '8' : \
                        ((b == 0b11001) ? '9' : \
                        ((b == 0b11010) ? ':' : \
                        ((b == 0b01011) ? ';' : \
                        ((b == 0b11100) ? '<' : \
                        ((b == 0b01101) ? '=' : \
                        ((b == 0b01110) ? '>' : \
                        ((b == 0b11111) ? '?' : 'X' \
                        ))))))))))))))))
.fi
.SS "#define BUFFER_LEN   40"

.SS "#define CHAR_BITS   5"

.SS "#define DATA_ONE   false"

.SS "#define DATA_ZERO   (!\fBDATA_ONE\fP)"

.SS "#define EN_ACTIVE   false"

.SS "#define ES_BITS   0b11111"

.SS "#define ES_CHAR   '?'"

.SS "#define FS_CHAR   '='"

.SS "#define FS_LEN   1"

.SS "#define NUM_DATA_LEN   37"

.SS "#define PAN_MAX_LEN   \fBREADER_NUM_MAX_LEN\fP"

.SS "#define READER_CLK_PIN   \fBPORTNUM2PIN\fP(\fBPC\fP, 4)"

.SS "#define READER_DATA_PIN   \fBPORTNUM2PIN\fP(\fBPC\fP, 12)"

.SS "#define READER_EN_PIN   \fBPORTNUM2PIN\fP(\fBPD\fP, 0)"

.SS "#define SS_CHAR   ';'"

.SH "Enumeration Type Documentation"
.PP 
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fISTART \fP\fP
.TP
\fB\fICHAR \fP\fP
.TP
\fB\fIEND \fP\fP
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fISS \fP\fP
.TP
\fB\fIPAN \fP\fP
.TP
\fB\fIAD \fP\fP
.TP
\fB\fILRC \fP\fP
.TP
\fB\fISUCCESS \fP\fP
.SH "Function Documentation"
.PP 
.SS "void disableReader (void)"

.PP
Disable Card Reader interruptions\&. 
.SS "void enableReader (void)"

.PP
Enable card Reader interruptions\&. 
.SS "void getValueReader (char * result_number_ptr, uint8_t * result_len_ptr)"

.PP
Get card number value\&. 
.PP
\fBParameters:\fP
.RS 4
\fIresult_number_ptr\fP Pointer to result array 
.br
\fIresult_len_ptr\fP Pointer to result length variable 
.RE
.PP

.SS "void initReader (void)"

.PP
Initialize Card Reader\&. 
.SS "bool readerIsReady ()"

.PP
Check if card has been correctly swiped\&. 
.PP
\fBReturns:\fP
.RS 4
reading ready 
.RE
.PP

.SS "bool readerRunning ()"

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
