.TH "FTM_Register_Masks" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FTM_Register_Masks
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBFTM0_BASE\fP   (0x40038000u)"
.br
.ti -1c
.RI "#define \fBFTM0\fP   ((\fBFTM_Type\fP *)\fBFTM0_BASE\fP)"
.br
.ti -1c
.RI "#define \fBFTM1_BASE\fP   (0x40039000u)"
.br
.ti -1c
.RI "#define \fBFTM1\fP   ((\fBFTM_Type\fP *)\fBFTM1_BASE\fP)"
.br
.ti -1c
.RI "#define \fBFTM2_BASE\fP   (0x4003A000u)"
.br
.ti -1c
.RI "#define \fBFTM2\fP   ((\fBFTM_Type\fP *)\fBFTM2_BASE\fP)"
.br
.ti -1c
.RI "#define \fBFTM3_BASE\fP   (0x400B9000u)"
.br
.ti -1c
.RI "#define \fBFTM3\fP   ((\fBFTM_Type\fP *)\fBFTM3_BASE\fP)"
.br
.ti -1c
.RI "#define \fBFTM_BASE_ADDRS\fP   { \fBFTM0_BASE\fP, \fBFTM1_BASE\fP, \fBFTM2_BASE\fP, \fBFTM3_BASE\fP }"
.br
.ti -1c
.RI "#define \fBFTM_BASE_PTRS\fP   { \fBFTM0\fP, \fBFTM1\fP, \fBFTM2\fP, \fBFTM3\fP }"
.br
.ti -1c
.RI "#define \fBFTM_IRQS\fP   { \fBFTM0_IRQn\fP, \fBFTM1_IRQn\fP, \fBFTM2_IRQn\fP, \fBFTM3_IRQn\fP }"
.br
.in -1c
.SS "SC - Status And Control"

.in +1c
.ti -1c
.RI "#define \fBFTM_SC_PS_MASK\fP   (0x7U)"
.br
.ti -1c
.RI "#define \fBFTM_SC_PS_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_SC_PS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SC_PS_SHIFT\fP)) & \fBFTM_SC_PS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SC_CLKS_MASK\fP   (0x18U)"
.br
.ti -1c
.RI "#define \fBFTM_SC_CLKS_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_SC_CLKS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SC_CLKS_SHIFT\fP)) & \fBFTM_SC_CLKS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SC_CPWMS_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBFTM_SC_CPWMS_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBFTM_SC_CPWMS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SC_CPWMS_SHIFT\fP)) & \fBFTM_SC_CPWMS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SC_TOIE_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBFTM_SC_TOIE_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBFTM_SC_TOIE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SC_TOIE_SHIFT\fP)) & \fBFTM_SC_TOIE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SC_TOF_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBFTM_SC_TOF_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBFTM_SC_TOF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SC_TOF_SHIFT\fP)) & \fBFTM_SC_TOF_MASK\fP)"
.br
.in -1c
.SS "CNT - Counter"

.in +1c
.ti -1c
.RI "#define \fBFTM_CNT_COUNT_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBFTM_CNT_COUNT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_CNT_COUNT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CNT_COUNT_SHIFT\fP)) & \fBFTM_CNT_COUNT_MASK\fP)"
.br
.in -1c
.SS "MOD - Modulo"

.in +1c
.ti -1c
.RI "#define \fBFTM_MOD_MOD_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBFTM_MOD_MOD_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_MOD_MOD\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_MOD_MOD_SHIFT\fP)) & \fBFTM_MOD_MOD_MASK\fP)"
.br
.in -1c
.SS "CnSC - Channel (n) Status And Control"

.in +1c
.ti -1c
.RI "#define \fBFTM_CnSC_DMA_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_DMA_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_DMA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CnSC_DMA_SHIFT\fP)) & \fBFTM_CnSC_DMA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_ELSA_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_ELSA_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_ELSA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CnSC_ELSA_SHIFT\fP)) & \fBFTM_CnSC_ELSA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_ELSB_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_ELSB_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_ELSB\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CnSC_ELSB_SHIFT\fP)) & \fBFTM_CnSC_ELSB_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_MSA_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_MSA_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_MSA\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CnSC_MSA_SHIFT\fP)) & \fBFTM_CnSC_MSA_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_MSB_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_MSB_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_MSB\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CnSC_MSB_SHIFT\fP)) & \fBFTM_CnSC_MSB_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_CHIE_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_CHIE_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_CHIE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CnSC_CHIE_SHIFT\fP)) & \fBFTM_CnSC_CHIE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_CHF_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_CHF_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_CHF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CnSC_CHF_SHIFT\fP)) & \fBFTM_CnSC_CHF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_CnSC_COUNT\fP   (8U)"
.br
.in -1c
.SS "CnV - Channel (n) Value"

.in +1c
.ti -1c
.RI "#define \fBFTM_CnV_VAL_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBFTM_CnV_VAL_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_CnV_VAL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CnV_VAL_SHIFT\fP)) & \fBFTM_CnV_VAL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_CnV_COUNT\fP   (8U)"
.br
.in -1c
.SS "CNTIN - Counter Initial Value"

.in +1c
.ti -1c
.RI "#define \fBFTM_CNTIN_INIT_MASK\fP   (0xFFFFU)"
.br
.ti -1c
.RI "#define \fBFTM_CNTIN_INIT_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_CNTIN_INIT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CNTIN_INIT_SHIFT\fP)) & \fBFTM_CNTIN_INIT_MASK\fP)"
.br
.in -1c
.SS "STATUS - Capture And Compare Status"

.in +1c
.ti -1c
.RI "#define \fBFTM_STATUS_CH0F_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH0F_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH0F\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_STATUS_CH0F_SHIFT\fP)) & \fBFTM_STATUS_CH0F_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH1F_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH1F_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH1F\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_STATUS_CH1F_SHIFT\fP)) & \fBFTM_STATUS_CH1F_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH2F_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH2F_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH2F\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_STATUS_CH2F_SHIFT\fP)) & \fBFTM_STATUS_CH2F_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH3F_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH3F_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH3F\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_STATUS_CH3F_SHIFT\fP)) & \fBFTM_STATUS_CH3F_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH4F_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH4F_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH4F\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_STATUS_CH4F_SHIFT\fP)) & \fBFTM_STATUS_CH4F_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH5F_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH5F_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH5F\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_STATUS_CH5F_SHIFT\fP)) & \fBFTM_STATUS_CH5F_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH6F_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH6F_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH6F\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_STATUS_CH6F_SHIFT\fP)) & \fBFTM_STATUS_CH6F_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH7F_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH7F_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBFTM_STATUS_CH7F\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_STATUS_CH7F_SHIFT\fP)) & \fBFTM_STATUS_CH7F_MASK\fP)"
.br
.in -1c
.SS "MODE - Features Mode Selection"

.in +1c
.ti -1c
.RI "#define \fBFTM_MODE_FTMEN_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_FTMEN_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_FTMEN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_MODE_FTMEN_SHIFT\fP)) & \fBFTM_MODE_FTMEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_INIT_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_INIT_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_INIT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_MODE_INIT_SHIFT\fP)) & \fBFTM_MODE_INIT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_WPDIS_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_WPDIS_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_WPDIS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_MODE_WPDIS_SHIFT\fP)) & \fBFTM_MODE_WPDIS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_PWMSYNC_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_PWMSYNC_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_PWMSYNC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_MODE_PWMSYNC_SHIFT\fP)) & \fBFTM_MODE_PWMSYNC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_CAPTEST_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_CAPTEST_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_CAPTEST\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_MODE_CAPTEST_SHIFT\fP)) & \fBFTM_MODE_CAPTEST_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_FAULTM_MASK\fP   (0x60U)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_FAULTM_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_FAULTM\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_MODE_FAULTM_SHIFT\fP)) & \fBFTM_MODE_FAULTM_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_FAULTIE_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_FAULTIE_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBFTM_MODE_FAULTIE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_MODE_FAULTIE_SHIFT\fP)) & \fBFTM_MODE_FAULTIE_MASK\fP)"
.br
.in -1c
.SS "SYNC - Synchronization"

.in +1c
.ti -1c
.RI "#define \fBFTM_SYNC_CNTMIN_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_CNTMIN_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_CNTMIN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNC_CNTMIN_SHIFT\fP)) & \fBFTM_SYNC_CNTMIN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_CNTMAX_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_CNTMAX_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_CNTMAX\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNC_CNTMAX_SHIFT\fP)) & \fBFTM_SYNC_CNTMAX_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_REINIT_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_REINIT_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_REINIT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNC_REINIT_SHIFT\fP)) & \fBFTM_SYNC_REINIT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_SYNCHOM_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_SYNCHOM_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_SYNCHOM\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNC_SYNCHOM_SHIFT\fP)) & \fBFTM_SYNC_SYNCHOM_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_TRIG0_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_TRIG0_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_TRIG0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNC_TRIG0_SHIFT\fP)) & \fBFTM_SYNC_TRIG0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_TRIG1_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_TRIG1_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_TRIG1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNC_TRIG1_SHIFT\fP)) & \fBFTM_SYNC_TRIG1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_TRIG2_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_TRIG2_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_TRIG2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNC_TRIG2_SHIFT\fP)) & \fBFTM_SYNC_TRIG2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_SWSYNC_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_SWSYNC_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNC_SWSYNC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNC_SWSYNC_SHIFT\fP)) & \fBFTM_SYNC_SWSYNC_MASK\fP)"
.br
.in -1c
.SS "OUTINIT - Initial State For Channels Output"

.in +1c
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH0OI_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH0OI_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH0OI\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTINIT_CH0OI_SHIFT\fP)) & \fBFTM_OUTINIT_CH0OI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH1OI_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH1OI_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH1OI\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTINIT_CH1OI_SHIFT\fP)) & \fBFTM_OUTINIT_CH1OI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH2OI_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH2OI_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH2OI\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTINIT_CH2OI_SHIFT\fP)) & \fBFTM_OUTINIT_CH2OI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH3OI_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH3OI_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH3OI\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTINIT_CH3OI_SHIFT\fP)) & \fBFTM_OUTINIT_CH3OI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH4OI_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH4OI_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH4OI\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTINIT_CH4OI_SHIFT\fP)) & \fBFTM_OUTINIT_CH4OI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH5OI_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH5OI_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH5OI\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTINIT_CH5OI_SHIFT\fP)) & \fBFTM_OUTINIT_CH5OI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH6OI_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH6OI_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH6OI\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTINIT_CH6OI_SHIFT\fP)) & \fBFTM_OUTINIT_CH6OI_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH7OI_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH7OI_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTINIT_CH7OI\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTINIT_CH7OI_SHIFT\fP)) & \fBFTM_OUTINIT_CH7OI_MASK\fP)"
.br
.in -1c
.SS "OUTMASK - Output Mask"

.in +1c
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH0OM_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH0OM_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH0OM\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTMASK_CH0OM_SHIFT\fP)) & \fBFTM_OUTMASK_CH0OM_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH1OM_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH1OM_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH1OM\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTMASK_CH1OM_SHIFT\fP)) & \fBFTM_OUTMASK_CH1OM_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH2OM_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH2OM_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH2OM\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTMASK_CH2OM_SHIFT\fP)) & \fBFTM_OUTMASK_CH2OM_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH3OM_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH3OM_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH3OM\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTMASK_CH3OM_SHIFT\fP)) & \fBFTM_OUTMASK_CH3OM_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH4OM_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH4OM_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH4OM\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTMASK_CH4OM_SHIFT\fP)) & \fBFTM_OUTMASK_CH4OM_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH5OM_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH5OM_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH5OM\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTMASK_CH5OM_SHIFT\fP)) & \fBFTM_OUTMASK_CH5OM_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH6OM_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH6OM_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH6OM\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTMASK_CH6OM_SHIFT\fP)) & \fBFTM_OUTMASK_CH6OM_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH7OM_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH7OM_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBFTM_OUTMASK_CH7OM\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTMASK_CH7OM_SHIFT\fP)) & \fBFTM_OUTMASK_CH7OM_MASK\fP)"
.br
.in -1c
.SS "COMBINE - Function For Linked Channels"

.in +1c
.ti -1c
.RI "#define \fBFTM_COMBINE_COMBINE0_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMBINE0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMBINE0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_COMBINE0_SHIFT\fP)) & \fBFTM_COMBINE_COMBINE0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMP0_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMP0_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMP0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_COMP0_SHIFT\fP)) & \fBFTM_COMBINE_COMP0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAPEN0_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAPEN0_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAPEN0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DECAPEN0_SHIFT\fP)) & \fBFTM_COMBINE_DECAPEN0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAP0_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAP0_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAP0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DECAP0_SHIFT\fP)) & \fBFTM_COMBINE_DECAP0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DTEN0_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DTEN0_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DTEN0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DTEN0_SHIFT\fP)) & \fBFTM_COMBINE_DTEN0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_SYNCEN0_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_SYNCEN0_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_SYNCEN0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_SYNCEN0_SHIFT\fP)) & \fBFTM_COMBINE_SYNCEN0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_FAULTEN0_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_FAULTEN0_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_FAULTEN0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_FAULTEN0_SHIFT\fP)) & \fBFTM_COMBINE_FAULTEN0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMBINE1_MASK\fP   (0x100U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMBINE1_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMBINE1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_COMBINE1_SHIFT\fP)) & \fBFTM_COMBINE_COMBINE1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMP1_MASK\fP   (0x200U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMP1_SHIFT\fP   (9U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMP1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_COMP1_SHIFT\fP)) & \fBFTM_COMBINE_COMP1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAPEN1_MASK\fP   (0x400U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAPEN1_SHIFT\fP   (10U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAPEN1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DECAPEN1_SHIFT\fP)) & \fBFTM_COMBINE_DECAPEN1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAP1_MASK\fP   (0x800U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAP1_SHIFT\fP   (11U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAP1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DECAP1_SHIFT\fP)) & \fBFTM_COMBINE_DECAP1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DTEN1_MASK\fP   (0x1000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DTEN1_SHIFT\fP   (12U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DTEN1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DTEN1_SHIFT\fP)) & \fBFTM_COMBINE_DTEN1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_SYNCEN1_MASK\fP   (0x2000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_SYNCEN1_SHIFT\fP   (13U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_SYNCEN1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_SYNCEN1_SHIFT\fP)) & \fBFTM_COMBINE_SYNCEN1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_FAULTEN1_MASK\fP   (0x4000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_FAULTEN1_SHIFT\fP   (14U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_FAULTEN1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_FAULTEN1_SHIFT\fP)) & \fBFTM_COMBINE_FAULTEN1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMBINE2_MASK\fP   (0x10000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMBINE2_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMBINE2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_COMBINE2_SHIFT\fP)) & \fBFTM_COMBINE_COMBINE2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMP2_MASK\fP   (0x20000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMP2_SHIFT\fP   (17U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMP2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_COMP2_SHIFT\fP)) & \fBFTM_COMBINE_COMP2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAPEN2_MASK\fP   (0x40000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAPEN2_SHIFT\fP   (18U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAPEN2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DECAPEN2_SHIFT\fP)) & \fBFTM_COMBINE_DECAPEN2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAP2_MASK\fP   (0x80000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAP2_SHIFT\fP   (19U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAP2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DECAP2_SHIFT\fP)) & \fBFTM_COMBINE_DECAP2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DTEN2_MASK\fP   (0x100000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DTEN2_SHIFT\fP   (20U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DTEN2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DTEN2_SHIFT\fP)) & \fBFTM_COMBINE_DTEN2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_SYNCEN2_MASK\fP   (0x200000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_SYNCEN2_SHIFT\fP   (21U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_SYNCEN2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_SYNCEN2_SHIFT\fP)) & \fBFTM_COMBINE_SYNCEN2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_FAULTEN2_MASK\fP   (0x400000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_FAULTEN2_SHIFT\fP   (22U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_FAULTEN2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_FAULTEN2_SHIFT\fP)) & \fBFTM_COMBINE_FAULTEN2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMBINE3_MASK\fP   (0x1000000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMBINE3_SHIFT\fP   (24U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMBINE3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_COMBINE3_SHIFT\fP)) & \fBFTM_COMBINE_COMBINE3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMP3_MASK\fP   (0x2000000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMP3_SHIFT\fP   (25U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_COMP3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_COMP3_SHIFT\fP)) & \fBFTM_COMBINE_COMP3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAPEN3_MASK\fP   (0x4000000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAPEN3_SHIFT\fP   (26U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAPEN3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DECAPEN3_SHIFT\fP)) & \fBFTM_COMBINE_DECAPEN3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAP3_MASK\fP   (0x8000000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAP3_SHIFT\fP   (27U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DECAP3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DECAP3_SHIFT\fP)) & \fBFTM_COMBINE_DECAP3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DTEN3_MASK\fP   (0x10000000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DTEN3_SHIFT\fP   (28U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_DTEN3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DTEN3_SHIFT\fP)) & \fBFTM_COMBINE_DTEN3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_SYNCEN3_MASK\fP   (0x20000000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_SYNCEN3_SHIFT\fP   (29U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_SYNCEN3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_SYNCEN3_SHIFT\fP)) & \fBFTM_COMBINE_SYNCEN3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_FAULTEN3_MASK\fP   (0x40000000U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_FAULTEN3_SHIFT\fP   (30U)"
.br
.ti -1c
.RI "#define \fBFTM_COMBINE_FAULTEN3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_FAULTEN3_SHIFT\fP)) & \fBFTM_COMBINE_FAULTEN3_MASK\fP)"
.br
.in -1c
.SS "DEADTIME - Deadtime Insertion Control"

.in +1c
.ti -1c
.RI "#define \fBFTM_DEADTIME_DTVAL_MASK\fP   (0x3FU)"
.br
.ti -1c
.RI "#define \fBFTM_DEADTIME_DTVAL_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_DEADTIME_DTVAL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_DEADTIME_DTVAL_SHIFT\fP)) & \fBFTM_DEADTIME_DTVAL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_DEADTIME_DTPS_MASK\fP   (0xC0U)"
.br
.ti -1c
.RI "#define \fBFTM_DEADTIME_DTPS_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBFTM_DEADTIME_DTPS\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_DEADTIME_DTPS_SHIFT\fP)) & \fBFTM_DEADTIME_DTPS_MASK\fP)"
.br
.in -1c
.SS "EXTTRIG - FTM External Trigger"

.in +1c
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH2TRIG_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH2TRIG_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH2TRIG\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_EXTTRIG_CH2TRIG_SHIFT\fP)) & \fBFTM_EXTTRIG_CH2TRIG_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH3TRIG_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH3TRIG_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH3TRIG\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_EXTTRIG_CH3TRIG_SHIFT\fP)) & \fBFTM_EXTTRIG_CH3TRIG_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH4TRIG_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH4TRIG_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH4TRIG\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_EXTTRIG_CH4TRIG_SHIFT\fP)) & \fBFTM_EXTTRIG_CH4TRIG_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH5TRIG_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH5TRIG_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH5TRIG\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_EXTTRIG_CH5TRIG_SHIFT\fP)) & \fBFTM_EXTTRIG_CH5TRIG_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH0TRIG_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH0TRIG_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH0TRIG\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_EXTTRIG_CH0TRIG_SHIFT\fP)) & \fBFTM_EXTTRIG_CH0TRIG_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH1TRIG_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH1TRIG_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_CH1TRIG\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_EXTTRIG_CH1TRIG_SHIFT\fP)) & \fBFTM_EXTTRIG_CH1TRIG_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_INITTRIGEN_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_INITTRIGEN_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_INITTRIGEN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_EXTTRIG_INITTRIGEN_SHIFT\fP)) & \fBFTM_EXTTRIG_INITTRIGEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_TRIGF_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_TRIGF_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBFTM_EXTTRIG_TRIGF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_EXTTRIG_TRIGF_SHIFT\fP)) & \fBFTM_EXTTRIG_TRIGF_MASK\fP)"
.br
.in -1c
.SS "POL - Channels Polarity"

.in +1c
.ti -1c
.RI "#define \fBFTM_POL_POL0_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_POL_POL0_SHIFT\fP)) & \fBFTM_POL_POL0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL1_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL1_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_POL_POL1_SHIFT\fP)) & \fBFTM_POL_POL1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL2_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL2_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_POL_POL2_SHIFT\fP)) & \fBFTM_POL_POL2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL3_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL3_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_POL_POL3_SHIFT\fP)) & \fBFTM_POL_POL3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL4_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL4_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL4\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_POL_POL4_SHIFT\fP)) & \fBFTM_POL_POL4_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL5_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL5_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL5\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_POL_POL5_SHIFT\fP)) & \fBFTM_POL_POL5_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL6_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL6_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL6\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_POL_POL6_SHIFT\fP)) & \fBFTM_POL_POL6_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL7_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL7_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBFTM_POL_POL7\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_POL_POL7_SHIFT\fP)) & \fBFTM_POL_POL7_MASK\fP)"
.br
.in -1c
.SS "FMS - Fault Mode Status"

.in +1c
.ti -1c
.RI "#define \fBFTM_FMS_FAULTF0_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTF0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTF0\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FMS_FAULTF0_SHIFT\fP)) & \fBFTM_FMS_FAULTF0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTF1_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTF1_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTF1\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FMS_FAULTF1_SHIFT\fP)) & \fBFTM_FMS_FAULTF1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTF2_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTF2_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTF2\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FMS_FAULTF2_SHIFT\fP)) & \fBFTM_FMS_FAULTF2_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTF3_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTF3_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTF3\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FMS_FAULTF3_SHIFT\fP)) & \fBFTM_FMS_FAULTF3_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTIN_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTIN_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTIN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FMS_FAULTIN_SHIFT\fP)) & \fBFTM_FMS_FAULTIN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_WPEN_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_WPEN_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_WPEN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FMS_WPEN_SHIFT\fP)) & \fBFTM_FMS_WPEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTF_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTF_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBFTM_FMS_FAULTF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FMS_FAULTF_SHIFT\fP)) & \fBFTM_FMS_FAULTF_MASK\fP)"
.br
.in -1c
.SS "FILTER - Input Capture Filter Control"

.in +1c
.ti -1c
.RI "#define \fBFTM_FILTER_CH0FVAL_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBFTM_FILTER_CH0FVAL_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_FILTER_CH0FVAL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FILTER_CH0FVAL_SHIFT\fP)) & \fBFTM_FILTER_CH0FVAL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FILTER_CH1FVAL_MASK\fP   (0xF0U)"
.br
.ti -1c
.RI "#define \fBFTM_FILTER_CH1FVAL_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBFTM_FILTER_CH1FVAL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FILTER_CH1FVAL_SHIFT\fP)) & \fBFTM_FILTER_CH1FVAL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FILTER_CH2FVAL_MASK\fP   (0xF00U)"
.br
.ti -1c
.RI "#define \fBFTM_FILTER_CH2FVAL_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBFTM_FILTER_CH2FVAL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FILTER_CH2FVAL_SHIFT\fP)) & \fBFTM_FILTER_CH2FVAL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FILTER_CH3FVAL_MASK\fP   (0xF000U)"
.br
.ti -1c
.RI "#define \fBFTM_FILTER_CH3FVAL_SHIFT\fP   (12U)"
.br
.ti -1c
.RI "#define \fBFTM_FILTER_CH3FVAL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FILTER_CH3FVAL_SHIFT\fP)) & \fBFTM_FILTER_CH3FVAL_MASK\fP)"
.br
.in -1c
.SS "FLTCTRL - Fault Control"

.in +1c
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FAULT0EN_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FAULT0EN_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FAULT0EN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FAULT0EN_SHIFT\fP)) & \fBFTM_FLTCTRL_FAULT0EN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FAULT1EN_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FAULT1EN_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FAULT1EN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FAULT1EN_SHIFT\fP)) & \fBFTM_FLTCTRL_FAULT1EN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FAULT2EN_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FAULT2EN_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FAULT2EN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FAULT2EN_SHIFT\fP)) & \fBFTM_FLTCTRL_FAULT2EN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FAULT3EN_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FAULT3EN_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FAULT3EN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FAULT3EN_SHIFT\fP)) & \fBFTM_FLTCTRL_FAULT3EN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FFLTR0EN_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FFLTR0EN_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FFLTR0EN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FFLTR0EN_SHIFT\fP)) & \fBFTM_FLTCTRL_FFLTR0EN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FFLTR1EN_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FFLTR1EN_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FFLTR1EN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FFLTR1EN_SHIFT\fP)) & \fBFTM_FLTCTRL_FFLTR1EN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FFLTR2EN_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FFLTR2EN_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FFLTR2EN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FFLTR2EN_SHIFT\fP)) & \fBFTM_FLTCTRL_FFLTR2EN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FFLTR3EN_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FFLTR3EN_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FFLTR3EN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FFLTR3EN_SHIFT\fP)) & \fBFTM_FLTCTRL_FFLTR3EN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FFVAL_MASK\fP   (0xF00U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FFVAL_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTCTRL_FFVAL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FFVAL_SHIFT\fP)) & \fBFTM_FLTCTRL_FFVAL_MASK\fP)"
.br
.in -1c
.SS "QDCTRL - Quadrature Decoder Control And Status"

.in +1c
.ti -1c
.RI "#define \fBFTM_QDCTRL_QUADEN_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_QUADEN_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_QUADEN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_QDCTRL_QUADEN_SHIFT\fP)) & \fBFTM_QDCTRL_QUADEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_TOFDIR_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_TOFDIR_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_TOFDIR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_QDCTRL_TOFDIR_SHIFT\fP)) & \fBFTM_QDCTRL_TOFDIR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_QUADIR_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_QUADIR_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_QUADIR\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_QDCTRL_QUADIR_SHIFT\fP)) & \fBFTM_QDCTRL_QUADIR_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_QUADMODE_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_QUADMODE_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_QUADMODE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_QDCTRL_QUADMODE_SHIFT\fP)) & \fBFTM_QDCTRL_QUADMODE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_PHBPOL_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_PHBPOL_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_PHBPOL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_QDCTRL_PHBPOL_SHIFT\fP)) & \fBFTM_QDCTRL_PHBPOL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_PHAPOL_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_PHAPOL_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_PHAPOL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_QDCTRL_PHAPOL_SHIFT\fP)) & \fBFTM_QDCTRL_PHAPOL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_PHBFLTREN_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_PHBFLTREN_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_PHBFLTREN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_QDCTRL_PHBFLTREN_SHIFT\fP)) & \fBFTM_QDCTRL_PHBFLTREN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_PHAFLTREN_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_PHAFLTREN_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBFTM_QDCTRL_PHAFLTREN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_QDCTRL_PHAFLTREN_SHIFT\fP)) & \fBFTM_QDCTRL_PHAFLTREN_MASK\fP)"
.br
.in -1c
.SS "CONF - Configuration"

.in +1c
.ti -1c
.RI "#define \fBFTM_CONF_NUMTOF_MASK\fP   (0x1FU)"
.br
.ti -1c
.RI "#define \fBFTM_CONF_NUMTOF_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_CONF_NUMTOF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CONF_NUMTOF_SHIFT\fP)) & \fBFTM_CONF_NUMTOF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_CONF_BDMMODE_MASK\fP   (0xC0U)"
.br
.ti -1c
.RI "#define \fBFTM_CONF_BDMMODE_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBFTM_CONF_BDMMODE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CONF_BDMMODE_SHIFT\fP)) & \fBFTM_CONF_BDMMODE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_CONF_GTBEEN_MASK\fP   (0x200U)"
.br
.ti -1c
.RI "#define \fBFTM_CONF_GTBEEN_SHIFT\fP   (9U)"
.br
.ti -1c
.RI "#define \fBFTM_CONF_GTBEEN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CONF_GTBEEN_SHIFT\fP)) & \fBFTM_CONF_GTBEEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_CONF_GTBEOUT_MASK\fP   (0x400U)"
.br
.ti -1c
.RI "#define \fBFTM_CONF_GTBEOUT_SHIFT\fP   (10U)"
.br
.ti -1c
.RI "#define \fBFTM_CONF_GTBEOUT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CONF_GTBEOUT_SHIFT\fP)) & \fBFTM_CONF_GTBEOUT_MASK\fP)"
.br
.in -1c
.SS "FLTPOL - FTM Fault Input Polarity"

.in +1c
.ti -1c
.RI "#define \fBFTM_FLTPOL_FLT0POL_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTPOL_FLT0POL_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTPOL_FLT0POL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTPOL_FLT0POL_SHIFT\fP)) & \fBFTM_FLTPOL_FLT0POL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FLTPOL_FLT1POL_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTPOL_FLT1POL_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTPOL_FLT1POL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTPOL_FLT1POL_SHIFT\fP)) & \fBFTM_FLTPOL_FLT1POL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FLTPOL_FLT2POL_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTPOL_FLT2POL_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTPOL_FLT2POL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTPOL_FLT2POL_SHIFT\fP)) & \fBFTM_FLTPOL_FLT2POL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_FLTPOL_FLT3POL_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTPOL_FLT3POL_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_FLTPOL_FLT3POL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTPOL_FLT3POL_SHIFT\fP)) & \fBFTM_FLTPOL_FLT3POL_MASK\fP)"
.br
.in -1c
.SS "SYNCONF - Synchronization Configuration"

.in +1c
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWTRIGMODE_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWTRIGMODE_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWTRIGMODE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_HWTRIGMODE_SHIFT\fP)) & \fBFTM_SYNCONF_HWTRIGMODE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_CNTINC_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_CNTINC_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_CNTINC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_CNTINC_SHIFT\fP)) & \fBFTM_SYNCONF_CNTINC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_INVC_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_INVC_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_INVC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_INVC_SHIFT\fP)) & \fBFTM_SYNCONF_INVC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWOC_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWOC_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWOC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_SWOC_SHIFT\fP)) & \fBFTM_SYNCONF_SWOC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SYNCMODE_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SYNCMODE_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SYNCMODE\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_SYNCMODE_SHIFT\fP)) & \fBFTM_SYNCONF_SYNCMODE_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWRSTCNT_MASK\fP   (0x100U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWRSTCNT_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWRSTCNT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_SWRSTCNT_SHIFT\fP)) & \fBFTM_SYNCONF_SWRSTCNT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWWRBUF_MASK\fP   (0x200U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWWRBUF_SHIFT\fP   (9U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWWRBUF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_SWWRBUF_SHIFT\fP)) & \fBFTM_SYNCONF_SWWRBUF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWOM_MASK\fP   (0x400U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWOM_SHIFT\fP   (10U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWOM\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_SWOM_SHIFT\fP)) & \fBFTM_SYNCONF_SWOM_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWINVC_MASK\fP   (0x800U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWINVC_SHIFT\fP   (11U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWINVC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_SWINVC_SHIFT\fP)) & \fBFTM_SYNCONF_SWINVC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWSOC_MASK\fP   (0x1000U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWSOC_SHIFT\fP   (12U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_SWSOC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_SWSOC_SHIFT\fP)) & \fBFTM_SYNCONF_SWSOC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWRSTCNT_MASK\fP   (0x10000U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWRSTCNT_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWRSTCNT\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_HWRSTCNT_SHIFT\fP)) & \fBFTM_SYNCONF_HWRSTCNT_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWWRBUF_MASK\fP   (0x20000U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWWRBUF_SHIFT\fP   (17U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWWRBUF\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_HWWRBUF_SHIFT\fP)) & \fBFTM_SYNCONF_HWWRBUF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWOM_MASK\fP   (0x40000U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWOM_SHIFT\fP   (18U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWOM\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_HWOM_SHIFT\fP)) & \fBFTM_SYNCONF_HWOM_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWINVC_MASK\fP   (0x80000U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWINVC_SHIFT\fP   (19U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWINVC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_HWINVC_SHIFT\fP)) & \fBFTM_SYNCONF_HWINVC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWSOC_MASK\fP   (0x100000U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWSOC_SHIFT\fP   (20U)"
.br
.ti -1c
.RI "#define \fBFTM_SYNCONF_HWSOC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_HWSOC_SHIFT\fP)) & \fBFTM_SYNCONF_HWSOC_MASK\fP)"
.br
.in -1c
.SS "INVCTRL - FTM Inverting Control"

.in +1c
.ti -1c
.RI "#define \fBFTM_INVCTRL_INV0EN_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_INVCTRL_INV0EN_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_INVCTRL_INV0EN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_INVCTRL_INV0EN_SHIFT\fP)) & \fBFTM_INVCTRL_INV0EN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_INVCTRL_INV1EN_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBFTM_INVCTRL_INV1EN_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBFTM_INVCTRL_INV1EN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_INVCTRL_INV1EN_SHIFT\fP)) & \fBFTM_INVCTRL_INV1EN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_INVCTRL_INV2EN_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_INVCTRL_INV2EN_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_INVCTRL_INV2EN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_INVCTRL_INV2EN_SHIFT\fP)) & \fBFTM_INVCTRL_INV2EN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_INVCTRL_INV3EN_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBFTM_INVCTRL_INV3EN_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_INVCTRL_INV3EN\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_INVCTRL_INV3EN_SHIFT\fP)) & \fBFTM_INVCTRL_INV3EN_MASK\fP)"
.br
.in -1c
.SS "SWOCTRL - FTM Software Output Control"

.in +1c
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH0OC_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH0OC_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH0OC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH0OC_SHIFT\fP)) & \fBFTM_SWOCTRL_CH0OC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH1OC_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH1OC_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH1OC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH1OC_SHIFT\fP)) & \fBFTM_SWOCTRL_CH1OC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH2OC_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH2OC_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH2OC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH2OC_SHIFT\fP)) & \fBFTM_SWOCTRL_CH2OC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH3OC_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH3OC_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH3OC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH3OC_SHIFT\fP)) & \fBFTM_SWOCTRL_CH3OC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH4OC_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH4OC_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH4OC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH4OC_SHIFT\fP)) & \fBFTM_SWOCTRL_CH4OC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH5OC_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH5OC_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH5OC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH5OC_SHIFT\fP)) & \fBFTM_SWOCTRL_CH5OC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH6OC_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH6OC_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH6OC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH6OC_SHIFT\fP)) & \fBFTM_SWOCTRL_CH6OC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH7OC_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH7OC_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH7OC\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH7OC_SHIFT\fP)) & \fBFTM_SWOCTRL_CH7OC_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH0OCV_MASK\fP   (0x100U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH0OCV_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH0OCV\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH0OCV_SHIFT\fP)) & \fBFTM_SWOCTRL_CH0OCV_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH1OCV_MASK\fP   (0x200U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH1OCV_SHIFT\fP   (9U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH1OCV\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH1OCV_SHIFT\fP)) & \fBFTM_SWOCTRL_CH1OCV_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH2OCV_MASK\fP   (0x400U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH2OCV_SHIFT\fP   (10U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH2OCV\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH2OCV_SHIFT\fP)) & \fBFTM_SWOCTRL_CH2OCV_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH3OCV_MASK\fP   (0x800U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH3OCV_SHIFT\fP   (11U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH3OCV\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH3OCV_SHIFT\fP)) & \fBFTM_SWOCTRL_CH3OCV_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH4OCV_MASK\fP   (0x1000U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH4OCV_SHIFT\fP   (12U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH4OCV\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH4OCV_SHIFT\fP)) & \fBFTM_SWOCTRL_CH4OCV_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH5OCV_MASK\fP   (0x2000U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH5OCV_SHIFT\fP   (13U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH5OCV\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH5OCV_SHIFT\fP)) & \fBFTM_SWOCTRL_CH5OCV_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH6OCV_MASK\fP   (0x4000U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH6OCV_SHIFT\fP   (14U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH6OCV\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH6OCV_SHIFT\fP)) & \fBFTM_SWOCTRL_CH6OCV_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH7OCV_MASK\fP   (0x8000U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH7OCV_SHIFT\fP   (15U)"
.br
.ti -1c
.RI "#define \fBFTM_SWOCTRL_CH7OCV\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH7OCV_SHIFT\fP)) & \fBFTM_SWOCTRL_CH7OCV_MASK\fP)"
.br
.in -1c
.SS "PWMLOAD - FTM PWM Load"

.in +1c
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH0SEL_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH0SEL_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH0SEL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_CH0SEL_SHIFT\fP)) & \fBFTM_PWMLOAD_CH0SEL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH1SEL_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH1SEL_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH1SEL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_CH1SEL_SHIFT\fP)) & \fBFTM_PWMLOAD_CH1SEL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH2SEL_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH2SEL_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH2SEL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_CH2SEL_SHIFT\fP)) & \fBFTM_PWMLOAD_CH2SEL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH3SEL_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH3SEL_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH3SEL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_CH3SEL_SHIFT\fP)) & \fBFTM_PWMLOAD_CH3SEL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH4SEL_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH4SEL_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH4SEL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_CH4SEL_SHIFT\fP)) & \fBFTM_PWMLOAD_CH4SEL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH5SEL_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH5SEL_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH5SEL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_CH5SEL_SHIFT\fP)) & \fBFTM_PWMLOAD_CH5SEL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH6SEL_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH6SEL_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH6SEL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_CH6SEL_SHIFT\fP)) & \fBFTM_PWMLOAD_CH6SEL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH7SEL_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH7SEL_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_CH7SEL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_CH7SEL_SHIFT\fP)) & \fBFTM_PWMLOAD_CH7SEL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_LDOK_MASK\fP   (0x200U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_LDOK_SHIFT\fP   (9U)"
.br
.ti -1c
.RI "#define \fBFTM_PWMLOAD_LDOK\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_LDOK_SHIFT\fP)) & \fBFTM_PWMLOAD_LDOK_MASK\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define FTM0   ((\fBFTM_Type\fP *)\fBFTM0_BASE\fP)"
Peripheral FTM0 base pointer 
.SS "#define FTM0_BASE   (0x40038000u)"
Peripheral FTM0 base address 
.SS "#define FTM1   ((\fBFTM_Type\fP *)\fBFTM1_BASE\fP)"
Peripheral FTM1 base pointer 
.SS "#define FTM1_BASE   (0x40039000u)"
Peripheral FTM1 base address 
.SS "#define FTM2   ((\fBFTM_Type\fP *)\fBFTM2_BASE\fP)"
Peripheral FTM2 base pointer 
.SS "#define FTM2_BASE   (0x4003A000u)"
Peripheral FTM2 base address 
.SS "#define FTM3   ((\fBFTM_Type\fP *)\fBFTM3_BASE\fP)"
Peripheral FTM3 base pointer 
.SS "#define FTM3_BASE   (0x400B9000u)"
Peripheral FTM3 base address 
.SS "#define FTM_BASE_ADDRS   { \fBFTM0_BASE\fP, \fBFTM1_BASE\fP, \fBFTM2_BASE\fP, \fBFTM3_BASE\fP }"
Array initializer of FTM peripheral base addresses 
.SS "#define FTM_BASE_PTRS   { \fBFTM0\fP, \fBFTM1\fP, \fBFTM2\fP, \fBFTM3\fP }"
Array initializer of FTM peripheral base pointers 
.SS "#define FTM_CnSC_CHF(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CnSC_CHF_SHIFT\fP)) & \fBFTM_CnSC_CHF_MASK\fP)"

.SS "#define FTM_CnSC_CHF_MASK   (0x80U)"

.SS "#define FTM_CnSC_CHF_SHIFT   (7U)"

.SS "#define FTM_CnSC_CHIE(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CnSC_CHIE_SHIFT\fP)) & \fBFTM_CnSC_CHIE_MASK\fP)"

.SS "#define FTM_CnSC_CHIE_MASK   (0x40U)"

.SS "#define FTM_CnSC_CHIE_SHIFT   (6U)"

.SS "#define FTM_CnSC_COUNT   (8U)"

.SS "#define FTM_CnSC_DMA(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CnSC_DMA_SHIFT\fP)) & \fBFTM_CnSC_DMA_MASK\fP)"

.SS "#define FTM_CnSC_DMA_MASK   (0x1U)"

.SS "#define FTM_CnSC_DMA_SHIFT   (0U)"

.SS "#define FTM_CnSC_ELSA(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CnSC_ELSA_SHIFT\fP)) & \fBFTM_CnSC_ELSA_MASK\fP)"

.SS "#define FTM_CnSC_ELSA_MASK   (0x4U)"

.SS "#define FTM_CnSC_ELSA_SHIFT   (2U)"

.SS "#define FTM_CnSC_ELSB(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CnSC_ELSB_SHIFT\fP)) & \fBFTM_CnSC_ELSB_MASK\fP)"

.SS "#define FTM_CnSC_ELSB_MASK   (0x8U)"

.SS "#define FTM_CnSC_ELSB_SHIFT   (3U)"

.SS "#define FTM_CnSC_MSA(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CnSC_MSA_SHIFT\fP)) & \fBFTM_CnSC_MSA_MASK\fP)"

.SS "#define FTM_CnSC_MSA_MASK   (0x10U)"

.SS "#define FTM_CnSC_MSA_SHIFT   (4U)"

.SS "#define FTM_CnSC_MSB(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CnSC_MSB_SHIFT\fP)) & \fBFTM_CnSC_MSB_MASK\fP)"

.SS "#define FTM_CnSC_MSB_MASK   (0x20U)"

.SS "#define FTM_CnSC_MSB_SHIFT   (5U)"

.SS "#define FTM_CNT_COUNT(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CNT_COUNT_SHIFT\fP)) & \fBFTM_CNT_COUNT_MASK\fP)"

.SS "#define FTM_CNT_COUNT_MASK   (0xFFFFU)"

.SS "#define FTM_CNT_COUNT_SHIFT   (0U)"

.SS "#define FTM_CNTIN_INIT(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CNTIN_INIT_SHIFT\fP)) & \fBFTM_CNTIN_INIT_MASK\fP)"

.SS "#define FTM_CNTIN_INIT_MASK   (0xFFFFU)"

.SS "#define FTM_CNTIN_INIT_SHIFT   (0U)"

.SS "#define FTM_CnV_COUNT   (8U)"

.SS "#define FTM_CnV_VAL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CnV_VAL_SHIFT\fP)) & \fBFTM_CnV_VAL_MASK\fP)"

.SS "#define FTM_CnV_VAL_MASK   (0xFFFFU)"

.SS "#define FTM_CnV_VAL_SHIFT   (0U)"

.SS "#define FTM_COMBINE_COMBINE0(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_COMBINE0_SHIFT\fP)) & \fBFTM_COMBINE_COMBINE0_MASK\fP)"

.SS "#define FTM_COMBINE_COMBINE0_MASK   (0x1U)"

.SS "#define FTM_COMBINE_COMBINE0_SHIFT   (0U)"

.SS "#define FTM_COMBINE_COMBINE1(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_COMBINE1_SHIFT\fP)) & \fBFTM_COMBINE_COMBINE1_MASK\fP)"

.SS "#define FTM_COMBINE_COMBINE1_MASK   (0x100U)"

.SS "#define FTM_COMBINE_COMBINE1_SHIFT   (8U)"

.SS "#define FTM_COMBINE_COMBINE2(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_COMBINE2_SHIFT\fP)) & \fBFTM_COMBINE_COMBINE2_MASK\fP)"

.SS "#define FTM_COMBINE_COMBINE2_MASK   (0x10000U)"

.SS "#define FTM_COMBINE_COMBINE2_SHIFT   (16U)"

.SS "#define FTM_COMBINE_COMBINE3(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_COMBINE3_SHIFT\fP)) & \fBFTM_COMBINE_COMBINE3_MASK\fP)"

.SS "#define FTM_COMBINE_COMBINE3_MASK   (0x1000000U)"

.SS "#define FTM_COMBINE_COMBINE3_SHIFT   (24U)"

.SS "#define FTM_COMBINE_COMP0(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_COMP0_SHIFT\fP)) & \fBFTM_COMBINE_COMP0_MASK\fP)"

.SS "#define FTM_COMBINE_COMP0_MASK   (0x2U)"

.SS "#define FTM_COMBINE_COMP0_SHIFT   (1U)"

.SS "#define FTM_COMBINE_COMP1(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_COMP1_SHIFT\fP)) & \fBFTM_COMBINE_COMP1_MASK\fP)"

.SS "#define FTM_COMBINE_COMP1_MASK   (0x200U)"

.SS "#define FTM_COMBINE_COMP1_SHIFT   (9U)"

.SS "#define FTM_COMBINE_COMP2(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_COMP2_SHIFT\fP)) & \fBFTM_COMBINE_COMP2_MASK\fP)"

.SS "#define FTM_COMBINE_COMP2_MASK   (0x20000U)"

.SS "#define FTM_COMBINE_COMP2_SHIFT   (17U)"

.SS "#define FTM_COMBINE_COMP3(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_COMP3_SHIFT\fP)) & \fBFTM_COMBINE_COMP3_MASK\fP)"

.SS "#define FTM_COMBINE_COMP3_MASK   (0x2000000U)"

.SS "#define FTM_COMBINE_COMP3_SHIFT   (25U)"

.SS "#define FTM_COMBINE_DECAP0(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DECAP0_SHIFT\fP)) & \fBFTM_COMBINE_DECAP0_MASK\fP)"

.SS "#define FTM_COMBINE_DECAP0_MASK   (0x8U)"

.SS "#define FTM_COMBINE_DECAP0_SHIFT   (3U)"

.SS "#define FTM_COMBINE_DECAP1(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DECAP1_SHIFT\fP)) & \fBFTM_COMBINE_DECAP1_MASK\fP)"

.SS "#define FTM_COMBINE_DECAP1_MASK   (0x800U)"

.SS "#define FTM_COMBINE_DECAP1_SHIFT   (11U)"

.SS "#define FTM_COMBINE_DECAP2(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DECAP2_SHIFT\fP)) & \fBFTM_COMBINE_DECAP2_MASK\fP)"

.SS "#define FTM_COMBINE_DECAP2_MASK   (0x80000U)"

.SS "#define FTM_COMBINE_DECAP2_SHIFT   (19U)"

.SS "#define FTM_COMBINE_DECAP3(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DECAP3_SHIFT\fP)) & \fBFTM_COMBINE_DECAP3_MASK\fP)"

.SS "#define FTM_COMBINE_DECAP3_MASK   (0x8000000U)"

.SS "#define FTM_COMBINE_DECAP3_SHIFT   (27U)"

.SS "#define FTM_COMBINE_DECAPEN0(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DECAPEN0_SHIFT\fP)) & \fBFTM_COMBINE_DECAPEN0_MASK\fP)"

.SS "#define FTM_COMBINE_DECAPEN0_MASK   (0x4U)"

.SS "#define FTM_COMBINE_DECAPEN0_SHIFT   (2U)"

.SS "#define FTM_COMBINE_DECAPEN1(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DECAPEN1_SHIFT\fP)) & \fBFTM_COMBINE_DECAPEN1_MASK\fP)"

.SS "#define FTM_COMBINE_DECAPEN1_MASK   (0x400U)"

.SS "#define FTM_COMBINE_DECAPEN1_SHIFT   (10U)"

.SS "#define FTM_COMBINE_DECAPEN2(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DECAPEN2_SHIFT\fP)) & \fBFTM_COMBINE_DECAPEN2_MASK\fP)"

.SS "#define FTM_COMBINE_DECAPEN2_MASK   (0x40000U)"

.SS "#define FTM_COMBINE_DECAPEN2_SHIFT   (18U)"

.SS "#define FTM_COMBINE_DECAPEN3(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DECAPEN3_SHIFT\fP)) & \fBFTM_COMBINE_DECAPEN3_MASK\fP)"

.SS "#define FTM_COMBINE_DECAPEN3_MASK   (0x4000000U)"

.SS "#define FTM_COMBINE_DECAPEN3_SHIFT   (26U)"

.SS "#define FTM_COMBINE_DTEN0(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DTEN0_SHIFT\fP)) & \fBFTM_COMBINE_DTEN0_MASK\fP)"

.SS "#define FTM_COMBINE_DTEN0_MASK   (0x10U)"

.SS "#define FTM_COMBINE_DTEN0_SHIFT   (4U)"

.SS "#define FTM_COMBINE_DTEN1(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DTEN1_SHIFT\fP)) & \fBFTM_COMBINE_DTEN1_MASK\fP)"

.SS "#define FTM_COMBINE_DTEN1_MASK   (0x1000U)"

.SS "#define FTM_COMBINE_DTEN1_SHIFT   (12U)"

.SS "#define FTM_COMBINE_DTEN2(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DTEN2_SHIFT\fP)) & \fBFTM_COMBINE_DTEN2_MASK\fP)"

.SS "#define FTM_COMBINE_DTEN2_MASK   (0x100000U)"

.SS "#define FTM_COMBINE_DTEN2_SHIFT   (20U)"

.SS "#define FTM_COMBINE_DTEN3(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_DTEN3_SHIFT\fP)) & \fBFTM_COMBINE_DTEN3_MASK\fP)"

.SS "#define FTM_COMBINE_DTEN3_MASK   (0x10000000U)"

.SS "#define FTM_COMBINE_DTEN3_SHIFT   (28U)"

.SS "#define FTM_COMBINE_FAULTEN0(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_FAULTEN0_SHIFT\fP)) & \fBFTM_COMBINE_FAULTEN0_MASK\fP)"

.SS "#define FTM_COMBINE_FAULTEN0_MASK   (0x40U)"

.SS "#define FTM_COMBINE_FAULTEN0_SHIFT   (6U)"

.SS "#define FTM_COMBINE_FAULTEN1(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_FAULTEN1_SHIFT\fP)) & \fBFTM_COMBINE_FAULTEN1_MASK\fP)"

.SS "#define FTM_COMBINE_FAULTEN1_MASK   (0x4000U)"

.SS "#define FTM_COMBINE_FAULTEN1_SHIFT   (14U)"

.SS "#define FTM_COMBINE_FAULTEN2(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_FAULTEN2_SHIFT\fP)) & \fBFTM_COMBINE_FAULTEN2_MASK\fP)"

.SS "#define FTM_COMBINE_FAULTEN2_MASK   (0x400000U)"

.SS "#define FTM_COMBINE_FAULTEN2_SHIFT   (22U)"

.SS "#define FTM_COMBINE_FAULTEN3(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_FAULTEN3_SHIFT\fP)) & \fBFTM_COMBINE_FAULTEN3_MASK\fP)"

.SS "#define FTM_COMBINE_FAULTEN3_MASK   (0x40000000U)"

.SS "#define FTM_COMBINE_FAULTEN3_SHIFT   (30U)"

.SS "#define FTM_COMBINE_SYNCEN0(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_SYNCEN0_SHIFT\fP)) & \fBFTM_COMBINE_SYNCEN0_MASK\fP)"

.SS "#define FTM_COMBINE_SYNCEN0_MASK   (0x20U)"

.SS "#define FTM_COMBINE_SYNCEN0_SHIFT   (5U)"

.SS "#define FTM_COMBINE_SYNCEN1(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_SYNCEN1_SHIFT\fP)) & \fBFTM_COMBINE_SYNCEN1_MASK\fP)"

.SS "#define FTM_COMBINE_SYNCEN1_MASK   (0x2000U)"

.SS "#define FTM_COMBINE_SYNCEN1_SHIFT   (13U)"

.SS "#define FTM_COMBINE_SYNCEN2(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_SYNCEN2_SHIFT\fP)) & \fBFTM_COMBINE_SYNCEN2_MASK\fP)"

.SS "#define FTM_COMBINE_SYNCEN2_MASK   (0x200000U)"

.SS "#define FTM_COMBINE_SYNCEN2_SHIFT   (21U)"

.SS "#define FTM_COMBINE_SYNCEN3(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_COMBINE_SYNCEN3_SHIFT\fP)) & \fBFTM_COMBINE_SYNCEN3_MASK\fP)"

.SS "#define FTM_COMBINE_SYNCEN3_MASK   (0x20000000U)"

.SS "#define FTM_COMBINE_SYNCEN3_SHIFT   (29U)"

.SS "#define FTM_CONF_BDMMODE(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CONF_BDMMODE_SHIFT\fP)) & \fBFTM_CONF_BDMMODE_MASK\fP)"

.SS "#define FTM_CONF_BDMMODE_MASK   (0xC0U)"

.SS "#define FTM_CONF_BDMMODE_SHIFT   (6U)"

.SS "#define FTM_CONF_GTBEEN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CONF_GTBEEN_SHIFT\fP)) & \fBFTM_CONF_GTBEEN_MASK\fP)"

.SS "#define FTM_CONF_GTBEEN_MASK   (0x200U)"

.SS "#define FTM_CONF_GTBEEN_SHIFT   (9U)"

.SS "#define FTM_CONF_GTBEOUT(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CONF_GTBEOUT_SHIFT\fP)) & \fBFTM_CONF_GTBEOUT_MASK\fP)"

.SS "#define FTM_CONF_GTBEOUT_MASK   (0x400U)"

.SS "#define FTM_CONF_GTBEOUT_SHIFT   (10U)"

.SS "#define FTM_CONF_NUMTOF(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_CONF_NUMTOF_SHIFT\fP)) & \fBFTM_CONF_NUMTOF_MASK\fP)"

.SS "#define FTM_CONF_NUMTOF_MASK   (0x1FU)"

.SS "#define FTM_CONF_NUMTOF_SHIFT   (0U)"

.SS "#define FTM_DEADTIME_DTPS(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_DEADTIME_DTPS_SHIFT\fP)) & \fBFTM_DEADTIME_DTPS_MASK\fP)"

.SS "#define FTM_DEADTIME_DTPS_MASK   (0xC0U)"

.SS "#define FTM_DEADTIME_DTPS_SHIFT   (6U)"

.SS "#define FTM_DEADTIME_DTVAL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_DEADTIME_DTVAL_SHIFT\fP)) & \fBFTM_DEADTIME_DTVAL_MASK\fP)"

.SS "#define FTM_DEADTIME_DTVAL_MASK   (0x3FU)"

.SS "#define FTM_DEADTIME_DTVAL_SHIFT   (0U)"

.SS "#define FTM_EXTTRIG_CH0TRIG(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_EXTTRIG_CH0TRIG_SHIFT\fP)) & \fBFTM_EXTTRIG_CH0TRIG_MASK\fP)"

.SS "#define FTM_EXTTRIG_CH0TRIG_MASK   (0x10U)"

.SS "#define FTM_EXTTRIG_CH0TRIG_SHIFT   (4U)"

.SS "#define FTM_EXTTRIG_CH1TRIG(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_EXTTRIG_CH1TRIG_SHIFT\fP)) & \fBFTM_EXTTRIG_CH1TRIG_MASK\fP)"

.SS "#define FTM_EXTTRIG_CH1TRIG_MASK   (0x20U)"

.SS "#define FTM_EXTTRIG_CH1TRIG_SHIFT   (5U)"

.SS "#define FTM_EXTTRIG_CH2TRIG(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_EXTTRIG_CH2TRIG_SHIFT\fP)) & \fBFTM_EXTTRIG_CH2TRIG_MASK\fP)"

.SS "#define FTM_EXTTRIG_CH2TRIG_MASK   (0x1U)"

.SS "#define FTM_EXTTRIG_CH2TRIG_SHIFT   (0U)"

.SS "#define FTM_EXTTRIG_CH3TRIG(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_EXTTRIG_CH3TRIG_SHIFT\fP)) & \fBFTM_EXTTRIG_CH3TRIG_MASK\fP)"

.SS "#define FTM_EXTTRIG_CH3TRIG_MASK   (0x2U)"

.SS "#define FTM_EXTTRIG_CH3TRIG_SHIFT   (1U)"

.SS "#define FTM_EXTTRIG_CH4TRIG(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_EXTTRIG_CH4TRIG_SHIFT\fP)) & \fBFTM_EXTTRIG_CH4TRIG_MASK\fP)"

.SS "#define FTM_EXTTRIG_CH4TRIG_MASK   (0x4U)"

.SS "#define FTM_EXTTRIG_CH4TRIG_SHIFT   (2U)"

.SS "#define FTM_EXTTRIG_CH5TRIG(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_EXTTRIG_CH5TRIG_SHIFT\fP)) & \fBFTM_EXTTRIG_CH5TRIG_MASK\fP)"

.SS "#define FTM_EXTTRIG_CH5TRIG_MASK   (0x8U)"

.SS "#define FTM_EXTTRIG_CH5TRIG_SHIFT   (3U)"

.SS "#define FTM_EXTTRIG_INITTRIGEN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_EXTTRIG_INITTRIGEN_SHIFT\fP)) & \fBFTM_EXTTRIG_INITTRIGEN_MASK\fP)"

.SS "#define FTM_EXTTRIG_INITTRIGEN_MASK   (0x40U)"

.SS "#define FTM_EXTTRIG_INITTRIGEN_SHIFT   (6U)"

.SS "#define FTM_EXTTRIG_TRIGF(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_EXTTRIG_TRIGF_SHIFT\fP)) & \fBFTM_EXTTRIG_TRIGF_MASK\fP)"

.SS "#define FTM_EXTTRIG_TRIGF_MASK   (0x80U)"

.SS "#define FTM_EXTTRIG_TRIGF_SHIFT   (7U)"

.SS "#define FTM_FILTER_CH0FVAL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FILTER_CH0FVAL_SHIFT\fP)) & \fBFTM_FILTER_CH0FVAL_MASK\fP)"

.SS "#define FTM_FILTER_CH0FVAL_MASK   (0xFU)"

.SS "#define FTM_FILTER_CH0FVAL_SHIFT   (0U)"

.SS "#define FTM_FILTER_CH1FVAL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FILTER_CH1FVAL_SHIFT\fP)) & \fBFTM_FILTER_CH1FVAL_MASK\fP)"

.SS "#define FTM_FILTER_CH1FVAL_MASK   (0xF0U)"

.SS "#define FTM_FILTER_CH1FVAL_SHIFT   (4U)"

.SS "#define FTM_FILTER_CH2FVAL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FILTER_CH2FVAL_SHIFT\fP)) & \fBFTM_FILTER_CH2FVAL_MASK\fP)"

.SS "#define FTM_FILTER_CH2FVAL_MASK   (0xF00U)"

.SS "#define FTM_FILTER_CH2FVAL_SHIFT   (8U)"

.SS "#define FTM_FILTER_CH3FVAL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FILTER_CH3FVAL_SHIFT\fP)) & \fBFTM_FILTER_CH3FVAL_MASK\fP)"

.SS "#define FTM_FILTER_CH3FVAL_MASK   (0xF000U)"

.SS "#define FTM_FILTER_CH3FVAL_SHIFT   (12U)"

.SS "#define FTM_FLTCTRL_FAULT0EN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FAULT0EN_SHIFT\fP)) & \fBFTM_FLTCTRL_FAULT0EN_MASK\fP)"

.SS "#define FTM_FLTCTRL_FAULT0EN_MASK   (0x1U)"

.SS "#define FTM_FLTCTRL_FAULT0EN_SHIFT   (0U)"

.SS "#define FTM_FLTCTRL_FAULT1EN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FAULT1EN_SHIFT\fP)) & \fBFTM_FLTCTRL_FAULT1EN_MASK\fP)"

.SS "#define FTM_FLTCTRL_FAULT1EN_MASK   (0x2U)"

.SS "#define FTM_FLTCTRL_FAULT1EN_SHIFT   (1U)"

.SS "#define FTM_FLTCTRL_FAULT2EN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FAULT2EN_SHIFT\fP)) & \fBFTM_FLTCTRL_FAULT2EN_MASK\fP)"

.SS "#define FTM_FLTCTRL_FAULT2EN_MASK   (0x4U)"

.SS "#define FTM_FLTCTRL_FAULT2EN_SHIFT   (2U)"

.SS "#define FTM_FLTCTRL_FAULT3EN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FAULT3EN_SHIFT\fP)) & \fBFTM_FLTCTRL_FAULT3EN_MASK\fP)"

.SS "#define FTM_FLTCTRL_FAULT3EN_MASK   (0x8U)"

.SS "#define FTM_FLTCTRL_FAULT3EN_SHIFT   (3U)"

.SS "#define FTM_FLTCTRL_FFLTR0EN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FFLTR0EN_SHIFT\fP)) & \fBFTM_FLTCTRL_FFLTR0EN_MASK\fP)"

.SS "#define FTM_FLTCTRL_FFLTR0EN_MASK   (0x10U)"

.SS "#define FTM_FLTCTRL_FFLTR0EN_SHIFT   (4U)"

.SS "#define FTM_FLTCTRL_FFLTR1EN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FFLTR1EN_SHIFT\fP)) & \fBFTM_FLTCTRL_FFLTR1EN_MASK\fP)"

.SS "#define FTM_FLTCTRL_FFLTR1EN_MASK   (0x20U)"

.SS "#define FTM_FLTCTRL_FFLTR1EN_SHIFT   (5U)"

.SS "#define FTM_FLTCTRL_FFLTR2EN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FFLTR2EN_SHIFT\fP)) & \fBFTM_FLTCTRL_FFLTR2EN_MASK\fP)"

.SS "#define FTM_FLTCTRL_FFLTR2EN_MASK   (0x40U)"

.SS "#define FTM_FLTCTRL_FFLTR2EN_SHIFT   (6U)"

.SS "#define FTM_FLTCTRL_FFLTR3EN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FFLTR3EN_SHIFT\fP)) & \fBFTM_FLTCTRL_FFLTR3EN_MASK\fP)"

.SS "#define FTM_FLTCTRL_FFLTR3EN_MASK   (0x80U)"

.SS "#define FTM_FLTCTRL_FFLTR3EN_SHIFT   (7U)"

.SS "#define FTM_FLTCTRL_FFVAL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTCTRL_FFVAL_SHIFT\fP)) & \fBFTM_FLTCTRL_FFVAL_MASK\fP)"

.SS "#define FTM_FLTCTRL_FFVAL_MASK   (0xF00U)"

.SS "#define FTM_FLTCTRL_FFVAL_SHIFT   (8U)"

.SS "#define FTM_FLTPOL_FLT0POL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTPOL_FLT0POL_SHIFT\fP)) & \fBFTM_FLTPOL_FLT0POL_MASK\fP)"

.SS "#define FTM_FLTPOL_FLT0POL_MASK   (0x1U)"

.SS "#define FTM_FLTPOL_FLT0POL_SHIFT   (0U)"

.SS "#define FTM_FLTPOL_FLT1POL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTPOL_FLT1POL_SHIFT\fP)) & \fBFTM_FLTPOL_FLT1POL_MASK\fP)"

.SS "#define FTM_FLTPOL_FLT1POL_MASK   (0x2U)"

.SS "#define FTM_FLTPOL_FLT1POL_SHIFT   (1U)"

.SS "#define FTM_FLTPOL_FLT2POL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTPOL_FLT2POL_SHIFT\fP)) & \fBFTM_FLTPOL_FLT2POL_MASK\fP)"

.SS "#define FTM_FLTPOL_FLT2POL_MASK   (0x4U)"

.SS "#define FTM_FLTPOL_FLT2POL_SHIFT   (2U)"

.SS "#define FTM_FLTPOL_FLT3POL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FLTPOL_FLT3POL_SHIFT\fP)) & \fBFTM_FLTPOL_FLT3POL_MASK\fP)"

.SS "#define FTM_FLTPOL_FLT3POL_MASK   (0x8U)"

.SS "#define FTM_FLTPOL_FLT3POL_SHIFT   (3U)"

.SS "#define FTM_FMS_FAULTF(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FMS_FAULTF_SHIFT\fP)) & \fBFTM_FMS_FAULTF_MASK\fP)"

.SS "#define FTM_FMS_FAULTF0(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FMS_FAULTF0_SHIFT\fP)) & \fBFTM_FMS_FAULTF0_MASK\fP)"

.SS "#define FTM_FMS_FAULTF0_MASK   (0x1U)"

.SS "#define FTM_FMS_FAULTF0_SHIFT   (0U)"

.SS "#define FTM_FMS_FAULTF1(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FMS_FAULTF1_SHIFT\fP)) & \fBFTM_FMS_FAULTF1_MASK\fP)"

.SS "#define FTM_FMS_FAULTF1_MASK   (0x2U)"

.SS "#define FTM_FMS_FAULTF1_SHIFT   (1U)"

.SS "#define FTM_FMS_FAULTF2(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FMS_FAULTF2_SHIFT\fP)) & \fBFTM_FMS_FAULTF2_MASK\fP)"

.SS "#define FTM_FMS_FAULTF2_MASK   (0x4U)"

.SS "#define FTM_FMS_FAULTF2_SHIFT   (2U)"

.SS "#define FTM_FMS_FAULTF3(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FMS_FAULTF3_SHIFT\fP)) & \fBFTM_FMS_FAULTF3_MASK\fP)"

.SS "#define FTM_FMS_FAULTF3_MASK   (0x8U)"

.SS "#define FTM_FMS_FAULTF3_SHIFT   (3U)"

.SS "#define FTM_FMS_FAULTF_MASK   (0x80U)"

.SS "#define FTM_FMS_FAULTF_SHIFT   (7U)"

.SS "#define FTM_FMS_FAULTIN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FMS_FAULTIN_SHIFT\fP)) & \fBFTM_FMS_FAULTIN_MASK\fP)"

.SS "#define FTM_FMS_FAULTIN_MASK   (0x20U)"

.SS "#define FTM_FMS_FAULTIN_SHIFT   (5U)"

.SS "#define FTM_FMS_WPEN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_FMS_WPEN_SHIFT\fP)) & \fBFTM_FMS_WPEN_MASK\fP)"

.SS "#define FTM_FMS_WPEN_MASK   (0x40U)"

.SS "#define FTM_FMS_WPEN_SHIFT   (6U)"

.SS "#define FTM_INVCTRL_INV0EN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_INVCTRL_INV0EN_SHIFT\fP)) & \fBFTM_INVCTRL_INV0EN_MASK\fP)"

.SS "#define FTM_INVCTRL_INV0EN_MASK   (0x1U)"

.SS "#define FTM_INVCTRL_INV0EN_SHIFT   (0U)"

.SS "#define FTM_INVCTRL_INV1EN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_INVCTRL_INV1EN_SHIFT\fP)) & \fBFTM_INVCTRL_INV1EN_MASK\fP)"

.SS "#define FTM_INVCTRL_INV1EN_MASK   (0x2U)"

.SS "#define FTM_INVCTRL_INV1EN_SHIFT   (1U)"

.SS "#define FTM_INVCTRL_INV2EN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_INVCTRL_INV2EN_SHIFT\fP)) & \fBFTM_INVCTRL_INV2EN_MASK\fP)"

.SS "#define FTM_INVCTRL_INV2EN_MASK   (0x4U)"

.SS "#define FTM_INVCTRL_INV2EN_SHIFT   (2U)"

.SS "#define FTM_INVCTRL_INV3EN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_INVCTRL_INV3EN_SHIFT\fP)) & \fBFTM_INVCTRL_INV3EN_MASK\fP)"

.SS "#define FTM_INVCTRL_INV3EN_MASK   (0x8U)"

.SS "#define FTM_INVCTRL_INV3EN_SHIFT   (3U)"

.SS "#define FTM_IRQS   { \fBFTM0_IRQn\fP, \fBFTM1_IRQn\fP, \fBFTM2_IRQn\fP, \fBFTM3_IRQn\fP }"
Interrupt vectors for the FTM peripheral type 
.SS "#define FTM_MOD_MOD(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_MOD_MOD_SHIFT\fP)) & \fBFTM_MOD_MOD_MASK\fP)"

.SS "#define FTM_MOD_MOD_MASK   (0xFFFFU)"

.SS "#define FTM_MOD_MOD_SHIFT   (0U)"

.SS "#define FTM_MODE_CAPTEST(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_MODE_CAPTEST_SHIFT\fP)) & \fBFTM_MODE_CAPTEST_MASK\fP)"

.SS "#define FTM_MODE_CAPTEST_MASK   (0x10U)"

.SS "#define FTM_MODE_CAPTEST_SHIFT   (4U)"

.SS "#define FTM_MODE_FAULTIE(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_MODE_FAULTIE_SHIFT\fP)) & \fBFTM_MODE_FAULTIE_MASK\fP)"

.SS "#define FTM_MODE_FAULTIE_MASK   (0x80U)"

.SS "#define FTM_MODE_FAULTIE_SHIFT   (7U)"

.SS "#define FTM_MODE_FAULTM(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_MODE_FAULTM_SHIFT\fP)) & \fBFTM_MODE_FAULTM_MASK\fP)"

.SS "#define FTM_MODE_FAULTM_MASK   (0x60U)"

.SS "#define FTM_MODE_FAULTM_SHIFT   (5U)"

.SS "#define FTM_MODE_FTMEN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_MODE_FTMEN_SHIFT\fP)) & \fBFTM_MODE_FTMEN_MASK\fP)"

.SS "#define FTM_MODE_FTMEN_MASK   (0x1U)"

.SS "#define FTM_MODE_FTMEN_SHIFT   (0U)"

.SS "#define FTM_MODE_INIT(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_MODE_INIT_SHIFT\fP)) & \fBFTM_MODE_INIT_MASK\fP)"

.SS "#define FTM_MODE_INIT_MASK   (0x2U)"

.SS "#define FTM_MODE_INIT_SHIFT   (1U)"

.SS "#define FTM_MODE_PWMSYNC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_MODE_PWMSYNC_SHIFT\fP)) & \fBFTM_MODE_PWMSYNC_MASK\fP)"

.SS "#define FTM_MODE_PWMSYNC_MASK   (0x8U)"

.SS "#define FTM_MODE_PWMSYNC_SHIFT   (3U)"

.SS "#define FTM_MODE_WPDIS(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_MODE_WPDIS_SHIFT\fP)) & \fBFTM_MODE_WPDIS_MASK\fP)"

.SS "#define FTM_MODE_WPDIS_MASK   (0x4U)"

.SS "#define FTM_MODE_WPDIS_SHIFT   (2U)"

.SS "#define FTM_OUTINIT_CH0OI(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTINIT_CH0OI_SHIFT\fP)) & \fBFTM_OUTINIT_CH0OI_MASK\fP)"

.SS "#define FTM_OUTINIT_CH0OI_MASK   (0x1U)"

.SS "#define FTM_OUTINIT_CH0OI_SHIFT   (0U)"

.SS "#define FTM_OUTINIT_CH1OI(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTINIT_CH1OI_SHIFT\fP)) & \fBFTM_OUTINIT_CH1OI_MASK\fP)"

.SS "#define FTM_OUTINIT_CH1OI_MASK   (0x2U)"

.SS "#define FTM_OUTINIT_CH1OI_SHIFT   (1U)"

.SS "#define FTM_OUTINIT_CH2OI(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTINIT_CH2OI_SHIFT\fP)) & \fBFTM_OUTINIT_CH2OI_MASK\fP)"

.SS "#define FTM_OUTINIT_CH2OI_MASK   (0x4U)"

.SS "#define FTM_OUTINIT_CH2OI_SHIFT   (2U)"

.SS "#define FTM_OUTINIT_CH3OI(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTINIT_CH3OI_SHIFT\fP)) & \fBFTM_OUTINIT_CH3OI_MASK\fP)"

.SS "#define FTM_OUTINIT_CH3OI_MASK   (0x8U)"

.SS "#define FTM_OUTINIT_CH3OI_SHIFT   (3U)"

.SS "#define FTM_OUTINIT_CH4OI(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTINIT_CH4OI_SHIFT\fP)) & \fBFTM_OUTINIT_CH4OI_MASK\fP)"

.SS "#define FTM_OUTINIT_CH4OI_MASK   (0x10U)"

.SS "#define FTM_OUTINIT_CH4OI_SHIFT   (4U)"

.SS "#define FTM_OUTINIT_CH5OI(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTINIT_CH5OI_SHIFT\fP)) & \fBFTM_OUTINIT_CH5OI_MASK\fP)"

.SS "#define FTM_OUTINIT_CH5OI_MASK   (0x20U)"

.SS "#define FTM_OUTINIT_CH5OI_SHIFT   (5U)"

.SS "#define FTM_OUTINIT_CH6OI(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTINIT_CH6OI_SHIFT\fP)) & \fBFTM_OUTINIT_CH6OI_MASK\fP)"

.SS "#define FTM_OUTINIT_CH6OI_MASK   (0x40U)"

.SS "#define FTM_OUTINIT_CH6OI_SHIFT   (6U)"

.SS "#define FTM_OUTINIT_CH7OI(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTINIT_CH7OI_SHIFT\fP)) & \fBFTM_OUTINIT_CH7OI_MASK\fP)"

.SS "#define FTM_OUTINIT_CH7OI_MASK   (0x80U)"

.SS "#define FTM_OUTINIT_CH7OI_SHIFT   (7U)"

.SS "#define FTM_OUTMASK_CH0OM(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTMASK_CH0OM_SHIFT\fP)) & \fBFTM_OUTMASK_CH0OM_MASK\fP)"

.SS "#define FTM_OUTMASK_CH0OM_MASK   (0x1U)"

.SS "#define FTM_OUTMASK_CH0OM_SHIFT   (0U)"

.SS "#define FTM_OUTMASK_CH1OM(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTMASK_CH1OM_SHIFT\fP)) & \fBFTM_OUTMASK_CH1OM_MASK\fP)"

.SS "#define FTM_OUTMASK_CH1OM_MASK   (0x2U)"

.SS "#define FTM_OUTMASK_CH1OM_SHIFT   (1U)"

.SS "#define FTM_OUTMASK_CH2OM(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTMASK_CH2OM_SHIFT\fP)) & \fBFTM_OUTMASK_CH2OM_MASK\fP)"

.SS "#define FTM_OUTMASK_CH2OM_MASK   (0x4U)"

.SS "#define FTM_OUTMASK_CH2OM_SHIFT   (2U)"

.SS "#define FTM_OUTMASK_CH3OM(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTMASK_CH3OM_SHIFT\fP)) & \fBFTM_OUTMASK_CH3OM_MASK\fP)"

.SS "#define FTM_OUTMASK_CH3OM_MASK   (0x8U)"

.SS "#define FTM_OUTMASK_CH3OM_SHIFT   (3U)"

.SS "#define FTM_OUTMASK_CH4OM(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTMASK_CH4OM_SHIFT\fP)) & \fBFTM_OUTMASK_CH4OM_MASK\fP)"

.SS "#define FTM_OUTMASK_CH4OM_MASK   (0x10U)"

.SS "#define FTM_OUTMASK_CH4OM_SHIFT   (4U)"

.SS "#define FTM_OUTMASK_CH5OM(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTMASK_CH5OM_SHIFT\fP)) & \fBFTM_OUTMASK_CH5OM_MASK\fP)"

.SS "#define FTM_OUTMASK_CH5OM_MASK   (0x20U)"

.SS "#define FTM_OUTMASK_CH5OM_SHIFT   (5U)"

.SS "#define FTM_OUTMASK_CH6OM(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTMASK_CH6OM_SHIFT\fP)) & \fBFTM_OUTMASK_CH6OM_MASK\fP)"

.SS "#define FTM_OUTMASK_CH6OM_MASK   (0x40U)"

.SS "#define FTM_OUTMASK_CH6OM_SHIFT   (6U)"

.SS "#define FTM_OUTMASK_CH7OM(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_OUTMASK_CH7OM_SHIFT\fP)) & \fBFTM_OUTMASK_CH7OM_MASK\fP)"

.SS "#define FTM_OUTMASK_CH7OM_MASK   (0x80U)"

.SS "#define FTM_OUTMASK_CH7OM_SHIFT   (7U)"

.SS "#define FTM_POL_POL0(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_POL_POL0_SHIFT\fP)) & \fBFTM_POL_POL0_MASK\fP)"

.SS "#define FTM_POL_POL0_MASK   (0x1U)"

.SS "#define FTM_POL_POL0_SHIFT   (0U)"

.SS "#define FTM_POL_POL1(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_POL_POL1_SHIFT\fP)) & \fBFTM_POL_POL1_MASK\fP)"

.SS "#define FTM_POL_POL1_MASK   (0x2U)"

.SS "#define FTM_POL_POL1_SHIFT   (1U)"

.SS "#define FTM_POL_POL2(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_POL_POL2_SHIFT\fP)) & \fBFTM_POL_POL2_MASK\fP)"

.SS "#define FTM_POL_POL2_MASK   (0x4U)"

.SS "#define FTM_POL_POL2_SHIFT   (2U)"

.SS "#define FTM_POL_POL3(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_POL_POL3_SHIFT\fP)) & \fBFTM_POL_POL3_MASK\fP)"

.SS "#define FTM_POL_POL3_MASK   (0x8U)"

.SS "#define FTM_POL_POL3_SHIFT   (3U)"

.SS "#define FTM_POL_POL4(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_POL_POL4_SHIFT\fP)) & \fBFTM_POL_POL4_MASK\fP)"

.SS "#define FTM_POL_POL4_MASK   (0x10U)"

.SS "#define FTM_POL_POL4_SHIFT   (4U)"

.SS "#define FTM_POL_POL5(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_POL_POL5_SHIFT\fP)) & \fBFTM_POL_POL5_MASK\fP)"

.SS "#define FTM_POL_POL5_MASK   (0x20U)"

.SS "#define FTM_POL_POL5_SHIFT   (5U)"

.SS "#define FTM_POL_POL6(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_POL_POL6_SHIFT\fP)) & \fBFTM_POL_POL6_MASK\fP)"

.SS "#define FTM_POL_POL6_MASK   (0x40U)"

.SS "#define FTM_POL_POL6_SHIFT   (6U)"

.SS "#define FTM_POL_POL7(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_POL_POL7_SHIFT\fP)) & \fBFTM_POL_POL7_MASK\fP)"

.SS "#define FTM_POL_POL7_MASK   (0x80U)"

.SS "#define FTM_POL_POL7_SHIFT   (7U)"

.SS "#define FTM_PWMLOAD_CH0SEL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_CH0SEL_SHIFT\fP)) & \fBFTM_PWMLOAD_CH0SEL_MASK\fP)"

.SS "#define FTM_PWMLOAD_CH0SEL_MASK   (0x1U)"

.SS "#define FTM_PWMLOAD_CH0SEL_SHIFT   (0U)"

.SS "#define FTM_PWMLOAD_CH1SEL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_CH1SEL_SHIFT\fP)) & \fBFTM_PWMLOAD_CH1SEL_MASK\fP)"

.SS "#define FTM_PWMLOAD_CH1SEL_MASK   (0x2U)"

.SS "#define FTM_PWMLOAD_CH1SEL_SHIFT   (1U)"

.SS "#define FTM_PWMLOAD_CH2SEL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_CH2SEL_SHIFT\fP)) & \fBFTM_PWMLOAD_CH2SEL_MASK\fP)"

.SS "#define FTM_PWMLOAD_CH2SEL_MASK   (0x4U)"

.SS "#define FTM_PWMLOAD_CH2SEL_SHIFT   (2U)"

.SS "#define FTM_PWMLOAD_CH3SEL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_CH3SEL_SHIFT\fP)) & \fBFTM_PWMLOAD_CH3SEL_MASK\fP)"

.SS "#define FTM_PWMLOAD_CH3SEL_MASK   (0x8U)"

.SS "#define FTM_PWMLOAD_CH3SEL_SHIFT   (3U)"

.SS "#define FTM_PWMLOAD_CH4SEL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_CH4SEL_SHIFT\fP)) & \fBFTM_PWMLOAD_CH4SEL_MASK\fP)"

.SS "#define FTM_PWMLOAD_CH4SEL_MASK   (0x10U)"

.SS "#define FTM_PWMLOAD_CH4SEL_SHIFT   (4U)"

.SS "#define FTM_PWMLOAD_CH5SEL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_CH5SEL_SHIFT\fP)) & \fBFTM_PWMLOAD_CH5SEL_MASK\fP)"

.SS "#define FTM_PWMLOAD_CH5SEL_MASK   (0x20U)"

.SS "#define FTM_PWMLOAD_CH5SEL_SHIFT   (5U)"

.SS "#define FTM_PWMLOAD_CH6SEL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_CH6SEL_SHIFT\fP)) & \fBFTM_PWMLOAD_CH6SEL_MASK\fP)"

.SS "#define FTM_PWMLOAD_CH6SEL_MASK   (0x40U)"

.SS "#define FTM_PWMLOAD_CH6SEL_SHIFT   (6U)"

.SS "#define FTM_PWMLOAD_CH7SEL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_CH7SEL_SHIFT\fP)) & \fBFTM_PWMLOAD_CH7SEL_MASK\fP)"

.SS "#define FTM_PWMLOAD_CH7SEL_MASK   (0x80U)"

.SS "#define FTM_PWMLOAD_CH7SEL_SHIFT   (7U)"

.SS "#define FTM_PWMLOAD_LDOK(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_PWMLOAD_LDOK_SHIFT\fP)) & \fBFTM_PWMLOAD_LDOK_MASK\fP)"

.SS "#define FTM_PWMLOAD_LDOK_MASK   (0x200U)"

.SS "#define FTM_PWMLOAD_LDOK_SHIFT   (9U)"

.SS "#define FTM_QDCTRL_PHAFLTREN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_QDCTRL_PHAFLTREN_SHIFT\fP)) & \fBFTM_QDCTRL_PHAFLTREN_MASK\fP)"

.SS "#define FTM_QDCTRL_PHAFLTREN_MASK   (0x80U)"

.SS "#define FTM_QDCTRL_PHAFLTREN_SHIFT   (7U)"

.SS "#define FTM_QDCTRL_PHAPOL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_QDCTRL_PHAPOL_SHIFT\fP)) & \fBFTM_QDCTRL_PHAPOL_MASK\fP)"

.SS "#define FTM_QDCTRL_PHAPOL_MASK   (0x20U)"

.SS "#define FTM_QDCTRL_PHAPOL_SHIFT   (5U)"

.SS "#define FTM_QDCTRL_PHBFLTREN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_QDCTRL_PHBFLTREN_SHIFT\fP)) & \fBFTM_QDCTRL_PHBFLTREN_MASK\fP)"

.SS "#define FTM_QDCTRL_PHBFLTREN_MASK   (0x40U)"

.SS "#define FTM_QDCTRL_PHBFLTREN_SHIFT   (6U)"

.SS "#define FTM_QDCTRL_PHBPOL(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_QDCTRL_PHBPOL_SHIFT\fP)) & \fBFTM_QDCTRL_PHBPOL_MASK\fP)"

.SS "#define FTM_QDCTRL_PHBPOL_MASK   (0x10U)"

.SS "#define FTM_QDCTRL_PHBPOL_SHIFT   (4U)"

.SS "#define FTM_QDCTRL_QUADEN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_QDCTRL_QUADEN_SHIFT\fP)) & \fBFTM_QDCTRL_QUADEN_MASK\fP)"

.SS "#define FTM_QDCTRL_QUADEN_MASK   (0x1U)"

.SS "#define FTM_QDCTRL_QUADEN_SHIFT   (0U)"

.SS "#define FTM_QDCTRL_QUADIR(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_QDCTRL_QUADIR_SHIFT\fP)) & \fBFTM_QDCTRL_QUADIR_MASK\fP)"

.SS "#define FTM_QDCTRL_QUADIR_MASK   (0x4U)"

.SS "#define FTM_QDCTRL_QUADIR_SHIFT   (2U)"

.SS "#define FTM_QDCTRL_QUADMODE(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_QDCTRL_QUADMODE_SHIFT\fP)) & \fBFTM_QDCTRL_QUADMODE_MASK\fP)"

.SS "#define FTM_QDCTRL_QUADMODE_MASK   (0x8U)"

.SS "#define FTM_QDCTRL_QUADMODE_SHIFT   (3U)"

.SS "#define FTM_QDCTRL_TOFDIR(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_QDCTRL_TOFDIR_SHIFT\fP)) & \fBFTM_QDCTRL_TOFDIR_MASK\fP)"

.SS "#define FTM_QDCTRL_TOFDIR_MASK   (0x2U)"

.SS "#define FTM_QDCTRL_TOFDIR_SHIFT   (1U)"

.SS "#define FTM_SC_CLKS(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SC_CLKS_SHIFT\fP)) & \fBFTM_SC_CLKS_MASK\fP)"

.SS "#define FTM_SC_CLKS_MASK   (0x18U)"

.SS "#define FTM_SC_CLKS_SHIFT   (3U)"

.SS "#define FTM_SC_CPWMS(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SC_CPWMS_SHIFT\fP)) & \fBFTM_SC_CPWMS_MASK\fP)"

.SS "#define FTM_SC_CPWMS_MASK   (0x20U)"

.SS "#define FTM_SC_CPWMS_SHIFT   (5U)"

.SS "#define FTM_SC_PS(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SC_PS_SHIFT\fP)) & \fBFTM_SC_PS_MASK\fP)"

.SS "#define FTM_SC_PS_MASK   (0x7U)"

.SS "#define FTM_SC_PS_SHIFT   (0U)"

.SS "#define FTM_SC_TOF(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SC_TOF_SHIFT\fP)) & \fBFTM_SC_TOF_MASK\fP)"

.SS "#define FTM_SC_TOF_MASK   (0x80U)"

.SS "#define FTM_SC_TOF_SHIFT   (7U)"

.SS "#define FTM_SC_TOIE(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SC_TOIE_SHIFT\fP)) & \fBFTM_SC_TOIE_MASK\fP)"

.SS "#define FTM_SC_TOIE_MASK   (0x40U)"

.SS "#define FTM_SC_TOIE_SHIFT   (6U)"

.SS "#define FTM_STATUS_CH0F(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_STATUS_CH0F_SHIFT\fP)) & \fBFTM_STATUS_CH0F_MASK\fP)"

.SS "#define FTM_STATUS_CH0F_MASK   (0x1U)"

.SS "#define FTM_STATUS_CH0F_SHIFT   (0U)"

.SS "#define FTM_STATUS_CH1F(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_STATUS_CH1F_SHIFT\fP)) & \fBFTM_STATUS_CH1F_MASK\fP)"

.SS "#define FTM_STATUS_CH1F_MASK   (0x2U)"

.SS "#define FTM_STATUS_CH1F_SHIFT   (1U)"

.SS "#define FTM_STATUS_CH2F(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_STATUS_CH2F_SHIFT\fP)) & \fBFTM_STATUS_CH2F_MASK\fP)"

.SS "#define FTM_STATUS_CH2F_MASK   (0x4U)"

.SS "#define FTM_STATUS_CH2F_SHIFT   (2U)"

.SS "#define FTM_STATUS_CH3F(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_STATUS_CH3F_SHIFT\fP)) & \fBFTM_STATUS_CH3F_MASK\fP)"

.SS "#define FTM_STATUS_CH3F_MASK   (0x8U)"

.SS "#define FTM_STATUS_CH3F_SHIFT   (3U)"

.SS "#define FTM_STATUS_CH4F(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_STATUS_CH4F_SHIFT\fP)) & \fBFTM_STATUS_CH4F_MASK\fP)"

.SS "#define FTM_STATUS_CH4F_MASK   (0x10U)"

.SS "#define FTM_STATUS_CH4F_SHIFT   (4U)"

.SS "#define FTM_STATUS_CH5F(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_STATUS_CH5F_SHIFT\fP)) & \fBFTM_STATUS_CH5F_MASK\fP)"

.SS "#define FTM_STATUS_CH5F_MASK   (0x20U)"

.SS "#define FTM_STATUS_CH5F_SHIFT   (5U)"

.SS "#define FTM_STATUS_CH6F(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_STATUS_CH6F_SHIFT\fP)) & \fBFTM_STATUS_CH6F_MASK\fP)"

.SS "#define FTM_STATUS_CH6F_MASK   (0x40U)"

.SS "#define FTM_STATUS_CH6F_SHIFT   (6U)"

.SS "#define FTM_STATUS_CH7F(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_STATUS_CH7F_SHIFT\fP)) & \fBFTM_STATUS_CH7F_MASK\fP)"

.SS "#define FTM_STATUS_CH7F_MASK   (0x80U)"

.SS "#define FTM_STATUS_CH7F_SHIFT   (7U)"

.SS "#define FTM_SWOCTRL_CH0OC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH0OC_SHIFT\fP)) & \fBFTM_SWOCTRL_CH0OC_MASK\fP)"

.SS "#define FTM_SWOCTRL_CH0OC_MASK   (0x1U)"

.SS "#define FTM_SWOCTRL_CH0OC_SHIFT   (0U)"

.SS "#define FTM_SWOCTRL_CH0OCV(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH0OCV_SHIFT\fP)) & \fBFTM_SWOCTRL_CH0OCV_MASK\fP)"

.SS "#define FTM_SWOCTRL_CH0OCV_MASK   (0x100U)"

.SS "#define FTM_SWOCTRL_CH0OCV_SHIFT   (8U)"

.SS "#define FTM_SWOCTRL_CH1OC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH1OC_SHIFT\fP)) & \fBFTM_SWOCTRL_CH1OC_MASK\fP)"

.SS "#define FTM_SWOCTRL_CH1OC_MASK   (0x2U)"

.SS "#define FTM_SWOCTRL_CH1OC_SHIFT   (1U)"

.SS "#define FTM_SWOCTRL_CH1OCV(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH1OCV_SHIFT\fP)) & \fBFTM_SWOCTRL_CH1OCV_MASK\fP)"

.SS "#define FTM_SWOCTRL_CH1OCV_MASK   (0x200U)"

.SS "#define FTM_SWOCTRL_CH1OCV_SHIFT   (9U)"

.SS "#define FTM_SWOCTRL_CH2OC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH2OC_SHIFT\fP)) & \fBFTM_SWOCTRL_CH2OC_MASK\fP)"

.SS "#define FTM_SWOCTRL_CH2OC_MASK   (0x4U)"

.SS "#define FTM_SWOCTRL_CH2OC_SHIFT   (2U)"

.SS "#define FTM_SWOCTRL_CH2OCV(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH2OCV_SHIFT\fP)) & \fBFTM_SWOCTRL_CH2OCV_MASK\fP)"

.SS "#define FTM_SWOCTRL_CH2OCV_MASK   (0x400U)"

.SS "#define FTM_SWOCTRL_CH2OCV_SHIFT   (10U)"

.SS "#define FTM_SWOCTRL_CH3OC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH3OC_SHIFT\fP)) & \fBFTM_SWOCTRL_CH3OC_MASK\fP)"

.SS "#define FTM_SWOCTRL_CH3OC_MASK   (0x8U)"

.SS "#define FTM_SWOCTRL_CH3OC_SHIFT   (3U)"

.SS "#define FTM_SWOCTRL_CH3OCV(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH3OCV_SHIFT\fP)) & \fBFTM_SWOCTRL_CH3OCV_MASK\fP)"

.SS "#define FTM_SWOCTRL_CH3OCV_MASK   (0x800U)"

.SS "#define FTM_SWOCTRL_CH3OCV_SHIFT   (11U)"

.SS "#define FTM_SWOCTRL_CH4OC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH4OC_SHIFT\fP)) & \fBFTM_SWOCTRL_CH4OC_MASK\fP)"

.SS "#define FTM_SWOCTRL_CH4OC_MASK   (0x10U)"

.SS "#define FTM_SWOCTRL_CH4OC_SHIFT   (4U)"

.SS "#define FTM_SWOCTRL_CH4OCV(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH4OCV_SHIFT\fP)) & \fBFTM_SWOCTRL_CH4OCV_MASK\fP)"

.SS "#define FTM_SWOCTRL_CH4OCV_MASK   (0x1000U)"

.SS "#define FTM_SWOCTRL_CH4OCV_SHIFT   (12U)"

.SS "#define FTM_SWOCTRL_CH5OC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH5OC_SHIFT\fP)) & \fBFTM_SWOCTRL_CH5OC_MASK\fP)"

.SS "#define FTM_SWOCTRL_CH5OC_MASK   (0x20U)"

.SS "#define FTM_SWOCTRL_CH5OC_SHIFT   (5U)"

.SS "#define FTM_SWOCTRL_CH5OCV(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH5OCV_SHIFT\fP)) & \fBFTM_SWOCTRL_CH5OCV_MASK\fP)"

.SS "#define FTM_SWOCTRL_CH5OCV_MASK   (0x2000U)"

.SS "#define FTM_SWOCTRL_CH5OCV_SHIFT   (13U)"

.SS "#define FTM_SWOCTRL_CH6OC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH6OC_SHIFT\fP)) & \fBFTM_SWOCTRL_CH6OC_MASK\fP)"

.SS "#define FTM_SWOCTRL_CH6OC_MASK   (0x40U)"

.SS "#define FTM_SWOCTRL_CH6OC_SHIFT   (6U)"

.SS "#define FTM_SWOCTRL_CH6OCV(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH6OCV_SHIFT\fP)) & \fBFTM_SWOCTRL_CH6OCV_MASK\fP)"

.SS "#define FTM_SWOCTRL_CH6OCV_MASK   (0x4000U)"

.SS "#define FTM_SWOCTRL_CH6OCV_SHIFT   (14U)"

.SS "#define FTM_SWOCTRL_CH7OC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH7OC_SHIFT\fP)) & \fBFTM_SWOCTRL_CH7OC_MASK\fP)"

.SS "#define FTM_SWOCTRL_CH7OC_MASK   (0x80U)"

.SS "#define FTM_SWOCTRL_CH7OC_SHIFT   (7U)"

.SS "#define FTM_SWOCTRL_CH7OCV(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SWOCTRL_CH7OCV_SHIFT\fP)) & \fBFTM_SWOCTRL_CH7OCV_MASK\fP)"

.SS "#define FTM_SWOCTRL_CH7OCV_MASK   (0x8000U)"

.SS "#define FTM_SWOCTRL_CH7OCV_SHIFT   (15U)"

.SS "#define FTM_SYNC_CNTMAX(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNC_CNTMAX_SHIFT\fP)) & \fBFTM_SYNC_CNTMAX_MASK\fP)"

.SS "#define FTM_SYNC_CNTMAX_MASK   (0x2U)"

.SS "#define FTM_SYNC_CNTMAX_SHIFT   (1U)"

.SS "#define FTM_SYNC_CNTMIN(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNC_CNTMIN_SHIFT\fP)) & \fBFTM_SYNC_CNTMIN_MASK\fP)"

.SS "#define FTM_SYNC_CNTMIN_MASK   (0x1U)"

.SS "#define FTM_SYNC_CNTMIN_SHIFT   (0U)"

.SS "#define FTM_SYNC_REINIT(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNC_REINIT_SHIFT\fP)) & \fBFTM_SYNC_REINIT_MASK\fP)"

.SS "#define FTM_SYNC_REINIT_MASK   (0x4U)"

.SS "#define FTM_SYNC_REINIT_SHIFT   (2U)"

.SS "#define FTM_SYNC_SWSYNC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNC_SWSYNC_SHIFT\fP)) & \fBFTM_SYNC_SWSYNC_MASK\fP)"

.SS "#define FTM_SYNC_SWSYNC_MASK   (0x80U)"

.SS "#define FTM_SYNC_SWSYNC_SHIFT   (7U)"

.SS "#define FTM_SYNC_SYNCHOM(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNC_SYNCHOM_SHIFT\fP)) & \fBFTM_SYNC_SYNCHOM_MASK\fP)"

.SS "#define FTM_SYNC_SYNCHOM_MASK   (0x8U)"

.SS "#define FTM_SYNC_SYNCHOM_SHIFT   (3U)"

.SS "#define FTM_SYNC_TRIG0(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNC_TRIG0_SHIFT\fP)) & \fBFTM_SYNC_TRIG0_MASK\fP)"

.SS "#define FTM_SYNC_TRIG0_MASK   (0x10U)"

.SS "#define FTM_SYNC_TRIG0_SHIFT   (4U)"

.SS "#define FTM_SYNC_TRIG1(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNC_TRIG1_SHIFT\fP)) & \fBFTM_SYNC_TRIG1_MASK\fP)"

.SS "#define FTM_SYNC_TRIG1_MASK   (0x20U)"

.SS "#define FTM_SYNC_TRIG1_SHIFT   (5U)"

.SS "#define FTM_SYNC_TRIG2(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNC_TRIG2_SHIFT\fP)) & \fBFTM_SYNC_TRIG2_MASK\fP)"

.SS "#define FTM_SYNC_TRIG2_MASK   (0x40U)"

.SS "#define FTM_SYNC_TRIG2_SHIFT   (6U)"

.SS "#define FTM_SYNCONF_CNTINC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_CNTINC_SHIFT\fP)) & \fBFTM_SYNCONF_CNTINC_MASK\fP)"

.SS "#define FTM_SYNCONF_CNTINC_MASK   (0x4U)"

.SS "#define FTM_SYNCONF_CNTINC_SHIFT   (2U)"

.SS "#define FTM_SYNCONF_HWINVC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_HWINVC_SHIFT\fP)) & \fBFTM_SYNCONF_HWINVC_MASK\fP)"

.SS "#define FTM_SYNCONF_HWINVC_MASK   (0x80000U)"

.SS "#define FTM_SYNCONF_HWINVC_SHIFT   (19U)"

.SS "#define FTM_SYNCONF_HWOM(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_HWOM_SHIFT\fP)) & \fBFTM_SYNCONF_HWOM_MASK\fP)"

.SS "#define FTM_SYNCONF_HWOM_MASK   (0x40000U)"

.SS "#define FTM_SYNCONF_HWOM_SHIFT   (18U)"

.SS "#define FTM_SYNCONF_HWRSTCNT(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_HWRSTCNT_SHIFT\fP)) & \fBFTM_SYNCONF_HWRSTCNT_MASK\fP)"

.SS "#define FTM_SYNCONF_HWRSTCNT_MASK   (0x10000U)"

.SS "#define FTM_SYNCONF_HWRSTCNT_SHIFT   (16U)"

.SS "#define FTM_SYNCONF_HWSOC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_HWSOC_SHIFT\fP)) & \fBFTM_SYNCONF_HWSOC_MASK\fP)"

.SS "#define FTM_SYNCONF_HWSOC_MASK   (0x100000U)"

.SS "#define FTM_SYNCONF_HWSOC_SHIFT   (20U)"

.SS "#define FTM_SYNCONF_HWTRIGMODE(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_HWTRIGMODE_SHIFT\fP)) & \fBFTM_SYNCONF_HWTRIGMODE_MASK\fP)"

.SS "#define FTM_SYNCONF_HWTRIGMODE_MASK   (0x1U)"

.SS "#define FTM_SYNCONF_HWTRIGMODE_SHIFT   (0U)"

.SS "#define FTM_SYNCONF_HWWRBUF(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_HWWRBUF_SHIFT\fP)) & \fBFTM_SYNCONF_HWWRBUF_MASK\fP)"

.SS "#define FTM_SYNCONF_HWWRBUF_MASK   (0x20000U)"

.SS "#define FTM_SYNCONF_HWWRBUF_SHIFT   (17U)"

.SS "#define FTM_SYNCONF_INVC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_INVC_SHIFT\fP)) & \fBFTM_SYNCONF_INVC_MASK\fP)"

.SS "#define FTM_SYNCONF_INVC_MASK   (0x10U)"

.SS "#define FTM_SYNCONF_INVC_SHIFT   (4U)"

.SS "#define FTM_SYNCONF_SWINVC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_SWINVC_SHIFT\fP)) & \fBFTM_SYNCONF_SWINVC_MASK\fP)"

.SS "#define FTM_SYNCONF_SWINVC_MASK   (0x800U)"

.SS "#define FTM_SYNCONF_SWINVC_SHIFT   (11U)"

.SS "#define FTM_SYNCONF_SWOC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_SWOC_SHIFT\fP)) & \fBFTM_SYNCONF_SWOC_MASK\fP)"

.SS "#define FTM_SYNCONF_SWOC_MASK   (0x20U)"

.SS "#define FTM_SYNCONF_SWOC_SHIFT   (5U)"

.SS "#define FTM_SYNCONF_SWOM(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_SWOM_SHIFT\fP)) & \fBFTM_SYNCONF_SWOM_MASK\fP)"

.SS "#define FTM_SYNCONF_SWOM_MASK   (0x400U)"

.SS "#define FTM_SYNCONF_SWOM_SHIFT   (10U)"

.SS "#define FTM_SYNCONF_SWRSTCNT(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_SWRSTCNT_SHIFT\fP)) & \fBFTM_SYNCONF_SWRSTCNT_MASK\fP)"

.SS "#define FTM_SYNCONF_SWRSTCNT_MASK   (0x100U)"

.SS "#define FTM_SYNCONF_SWRSTCNT_SHIFT   (8U)"

.SS "#define FTM_SYNCONF_SWSOC(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_SWSOC_SHIFT\fP)) & \fBFTM_SYNCONF_SWSOC_MASK\fP)"

.SS "#define FTM_SYNCONF_SWSOC_MASK   (0x1000U)"

.SS "#define FTM_SYNCONF_SWSOC_SHIFT   (12U)"

.SS "#define FTM_SYNCONF_SWWRBUF(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_SWWRBUF_SHIFT\fP)) & \fBFTM_SYNCONF_SWWRBUF_MASK\fP)"

.SS "#define FTM_SYNCONF_SWWRBUF_MASK   (0x200U)"

.SS "#define FTM_SYNCONF_SWWRBUF_SHIFT   (9U)"

.SS "#define FTM_SYNCONF_SYNCMODE(x)   (((uint32_t)(((uint32_t)(x)) << \fBFTM_SYNCONF_SYNCMODE_SHIFT\fP)) & \fBFTM_SYNCONF_SYNCMODE_MASK\fP)"

.SS "#define FTM_SYNCONF_SYNCMODE_MASK   (0x80U)"

.SS "#define FTM_SYNCONF_SYNCMODE_SHIFT   (7U)"

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
