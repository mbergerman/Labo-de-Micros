.TH "DAC_Register_Masks" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DAC_Register_Masks
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBDAC0_BASE\fP   (0x400CC000u)"
.br
.ti -1c
.RI "#define \fBDAC0\fP   ((\fBDAC_Type\fP *)\fBDAC0_BASE\fP)"
.br
.ti -1c
.RI "#define \fBDAC1_BASE\fP   (0x400CD000u)"
.br
.ti -1c
.RI "#define \fBDAC1\fP   ((\fBDAC_Type\fP *)\fBDAC1_BASE\fP)"
.br
.ti -1c
.RI "#define \fBDAC_BASE_ADDRS\fP   { \fBDAC0_BASE\fP, \fBDAC1_BASE\fP }"
.br
.ti -1c
.RI "#define \fBDAC_BASE_PTRS\fP   { \fBDAC0\fP, \fBDAC1\fP }"
.br
.ti -1c
.RI "#define \fBDAC_IRQS\fP   { \fBDAC0_IRQn\fP, \fBDAC1_IRQn\fP }"
.br
.in -1c
.SS "DATL - DAC Data Low Register"

.in +1c
.ti -1c
.RI "#define \fBDAC_DATL_DATA0_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBDAC_DATL_DATA0_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDAC_DATL_DATA0\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_DATL_DATA0_SHIFT\fP)) & \fBDAC_DATL_DATA0_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDAC_DATL_COUNT\fP   (16U)"
.br
.in -1c
.SS "DATH - DAC Data High Register"

.in +1c
.ti -1c
.RI "#define \fBDAC_DATH_DATA1_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDAC_DATH_DATA1_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDAC_DATH_DATA1\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_DATH_DATA1_SHIFT\fP)) & \fBDAC_DATH_DATA1_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDAC_DATH_COUNT\fP   (16U)"
.br
.in -1c
.SS "SR - DAC Status Register"

.in +1c
.ti -1c
.RI "#define \fBDAC_SR_DACBFRPBF_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBDAC_SR_DACBFRPBF_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDAC_SR_DACBFRPBF\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_SR_DACBFRPBF_SHIFT\fP)) & \fBDAC_SR_DACBFRPBF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDAC_SR_DACBFRPTF_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBDAC_SR_DACBFRPTF_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBDAC_SR_DACBFRPTF\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_SR_DACBFRPTF_SHIFT\fP)) & \fBDAC_SR_DACBFRPTF_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDAC_SR_DACBFWMF_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBDAC_SR_DACBFWMF_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBDAC_SR_DACBFWMF\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_SR_DACBFWMF_SHIFT\fP)) & \fBDAC_SR_DACBFWMF_MASK\fP)"
.br
.in -1c
.SS "C0 - DAC Control Register"

.in +1c
.ti -1c
.RI "#define \fBDAC_C0_DACBBIEN_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACBBIEN_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACBBIEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C0_DACBBIEN_SHIFT\fP)) & \fBDAC_C0_DACBBIEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACBTIEN_MASK\fP   (0x2U)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACBTIEN_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACBTIEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C0_DACBTIEN_SHIFT\fP)) & \fBDAC_C0_DACBTIEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACBWIEN_MASK\fP   (0x4U)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACBWIEN_SHIFT\fP   (2U)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACBWIEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C0_DACBWIEN_SHIFT\fP)) & \fBDAC_C0_DACBWIEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDAC_C0_LPEN_MASK\fP   (0x8U)"
.br
.ti -1c
.RI "#define \fBDAC_C0_LPEN_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBDAC_C0_LPEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C0_LPEN_SHIFT\fP)) & \fBDAC_C0_LPEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACSWTRG_MASK\fP   (0x10U)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACSWTRG_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACSWTRG\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C0_DACSWTRG_SHIFT\fP)) & \fBDAC_C0_DACSWTRG_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACTRGSEL_MASK\fP   (0x20U)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACTRGSEL_SHIFT\fP   (5U)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACTRGSEL\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C0_DACTRGSEL_SHIFT\fP)) & \fBDAC_C0_DACTRGSEL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACRFS_MASK\fP   (0x40U)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACRFS_SHIFT\fP   (6U)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACRFS\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C0_DACRFS_SHIFT\fP)) & \fBDAC_C0_DACRFS_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACEN_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACEN_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDAC_C0_DACEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C0_DACEN_SHIFT\fP)) & \fBDAC_C0_DACEN_MASK\fP)"
.br
.in -1c
.SS "C1 - DAC Control Register 1"

.in +1c
.ti -1c
.RI "#define \fBDAC_C1_DACBFEN_MASK\fP   (0x1U)"
.br
.ti -1c
.RI "#define \fBDAC_C1_DACBFEN_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDAC_C1_DACBFEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C1_DACBFEN_SHIFT\fP)) & \fBDAC_C1_DACBFEN_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDAC_C1_DACBFMD_MASK\fP   (0x6U)"
.br
.ti -1c
.RI "#define \fBDAC_C1_DACBFMD_SHIFT\fP   (1U)"
.br
.ti -1c
.RI "#define \fBDAC_C1_DACBFMD\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C1_DACBFMD_SHIFT\fP)) & \fBDAC_C1_DACBFMD_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDAC_C1_DACBFWM_MASK\fP   (0x18U)"
.br
.ti -1c
.RI "#define \fBDAC_C1_DACBFWM_SHIFT\fP   (3U)"
.br
.ti -1c
.RI "#define \fBDAC_C1_DACBFWM\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C1_DACBFWM_SHIFT\fP)) & \fBDAC_C1_DACBFWM_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDAC_C1_DMAEN_MASK\fP   (0x80U)"
.br
.ti -1c
.RI "#define \fBDAC_C1_DMAEN_SHIFT\fP   (7U)"
.br
.ti -1c
.RI "#define \fBDAC_C1_DMAEN\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C1_DMAEN_SHIFT\fP)) & \fBDAC_C1_DMAEN_MASK\fP)"
.br
.in -1c
.SS "C2 - DAC Control Register 2"

.in +1c
.ti -1c
.RI "#define \fBDAC_C2_DACBFUP_MASK\fP   (0xFU)"
.br
.ti -1c
.RI "#define \fBDAC_C2_DACBFUP_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBDAC_C2_DACBFUP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C2_DACBFUP_SHIFT\fP)) & \fBDAC_C2_DACBFUP_MASK\fP)"
.br
.ti -1c
.RI "#define \fBDAC_C2_DACBFRP_MASK\fP   (0xF0U)"
.br
.ti -1c
.RI "#define \fBDAC_C2_DACBFRP_SHIFT\fP   (4U)"
.br
.ti -1c
.RI "#define \fBDAC_C2_DACBFRP\fP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C2_DACBFRP_SHIFT\fP)) & \fBDAC_C2_DACBFRP_MASK\fP)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define DAC0   ((\fBDAC_Type\fP *)\fBDAC0_BASE\fP)"
Peripheral DAC0 base pointer 
.SS "#define DAC0_BASE   (0x400CC000u)"
Peripheral DAC0 base address 
.SS "#define DAC1   ((\fBDAC_Type\fP *)\fBDAC1_BASE\fP)"
Peripheral DAC1 base pointer 
.SS "#define DAC1_BASE   (0x400CD000u)"
Peripheral DAC1 base address 
.SS "#define DAC_BASE_ADDRS   { \fBDAC0_BASE\fP, \fBDAC1_BASE\fP }"
Array initializer of DAC peripheral base addresses 
.SS "#define DAC_BASE_PTRS   { \fBDAC0\fP, \fBDAC1\fP }"
Array initializer of DAC peripheral base pointers 
.SS "#define DAC_C0_DACBBIEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C0_DACBBIEN_SHIFT\fP)) & \fBDAC_C0_DACBBIEN_MASK\fP)"

.SS "#define DAC_C0_DACBBIEN_MASK   (0x1U)"

.SS "#define DAC_C0_DACBBIEN_SHIFT   (0U)"

.SS "#define DAC_C0_DACBTIEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C0_DACBTIEN_SHIFT\fP)) & \fBDAC_C0_DACBTIEN_MASK\fP)"

.SS "#define DAC_C0_DACBTIEN_MASK   (0x2U)"

.SS "#define DAC_C0_DACBTIEN_SHIFT   (1U)"

.SS "#define DAC_C0_DACBWIEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C0_DACBWIEN_SHIFT\fP)) & \fBDAC_C0_DACBWIEN_MASK\fP)"

.SS "#define DAC_C0_DACBWIEN_MASK   (0x4U)"

.SS "#define DAC_C0_DACBWIEN_SHIFT   (2U)"

.SS "#define DAC_C0_DACEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C0_DACEN_SHIFT\fP)) & \fBDAC_C0_DACEN_MASK\fP)"

.SS "#define DAC_C0_DACEN_MASK   (0x80U)"

.SS "#define DAC_C0_DACEN_SHIFT   (7U)"

.SS "#define DAC_C0_DACRFS(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C0_DACRFS_SHIFT\fP)) & \fBDAC_C0_DACRFS_MASK\fP)"

.SS "#define DAC_C0_DACRFS_MASK   (0x40U)"

.SS "#define DAC_C0_DACRFS_SHIFT   (6U)"

.SS "#define DAC_C0_DACSWTRG(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C0_DACSWTRG_SHIFT\fP)) & \fBDAC_C0_DACSWTRG_MASK\fP)"

.SS "#define DAC_C0_DACSWTRG_MASK   (0x10U)"

.SS "#define DAC_C0_DACSWTRG_SHIFT   (4U)"

.SS "#define DAC_C0_DACTRGSEL(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C0_DACTRGSEL_SHIFT\fP)) & \fBDAC_C0_DACTRGSEL_MASK\fP)"

.SS "#define DAC_C0_DACTRGSEL_MASK   (0x20U)"

.SS "#define DAC_C0_DACTRGSEL_SHIFT   (5U)"

.SS "#define DAC_C0_LPEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C0_LPEN_SHIFT\fP)) & \fBDAC_C0_LPEN_MASK\fP)"

.SS "#define DAC_C0_LPEN_MASK   (0x8U)"

.SS "#define DAC_C0_LPEN_SHIFT   (3U)"

.SS "#define DAC_C1_DACBFEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C1_DACBFEN_SHIFT\fP)) & \fBDAC_C1_DACBFEN_MASK\fP)"

.SS "#define DAC_C1_DACBFEN_MASK   (0x1U)"

.SS "#define DAC_C1_DACBFEN_SHIFT   (0U)"

.SS "#define DAC_C1_DACBFMD(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C1_DACBFMD_SHIFT\fP)) & \fBDAC_C1_DACBFMD_MASK\fP)"

.SS "#define DAC_C1_DACBFMD_MASK   (0x6U)"

.SS "#define DAC_C1_DACBFMD_SHIFT   (1U)"

.SS "#define DAC_C1_DACBFWM(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C1_DACBFWM_SHIFT\fP)) & \fBDAC_C1_DACBFWM_MASK\fP)"

.SS "#define DAC_C1_DACBFWM_MASK   (0x18U)"

.SS "#define DAC_C1_DACBFWM_SHIFT   (3U)"

.SS "#define DAC_C1_DMAEN(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C1_DMAEN_SHIFT\fP)) & \fBDAC_C1_DMAEN_MASK\fP)"

.SS "#define DAC_C1_DMAEN_MASK   (0x80U)"

.SS "#define DAC_C1_DMAEN_SHIFT   (7U)"

.SS "#define DAC_C2_DACBFRP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C2_DACBFRP_SHIFT\fP)) & \fBDAC_C2_DACBFRP_MASK\fP)"

.SS "#define DAC_C2_DACBFRP_MASK   (0xF0U)"

.SS "#define DAC_C2_DACBFRP_SHIFT   (4U)"

.SS "#define DAC_C2_DACBFUP(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_C2_DACBFUP_SHIFT\fP)) & \fBDAC_C2_DACBFUP_MASK\fP)"

.SS "#define DAC_C2_DACBFUP_MASK   (0xFU)"

.SS "#define DAC_C2_DACBFUP_SHIFT   (0U)"

.SS "#define DAC_DATH_COUNT   (16U)"

.SS "#define DAC_DATH_DATA1(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_DATH_DATA1_SHIFT\fP)) & \fBDAC_DATH_DATA1_MASK\fP)"

.SS "#define DAC_DATH_DATA1_MASK   (0xFU)"

.SS "#define DAC_DATH_DATA1_SHIFT   (0U)"

.SS "#define DAC_DATL_COUNT   (16U)"

.SS "#define DAC_DATL_DATA0(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_DATL_DATA0_SHIFT\fP)) & \fBDAC_DATL_DATA0_MASK\fP)"

.SS "#define DAC_DATL_DATA0_MASK   (0xFFU)"

.SS "#define DAC_DATL_DATA0_SHIFT   (0U)"

.SS "#define DAC_IRQS   { \fBDAC0_IRQn\fP, \fBDAC1_IRQn\fP }"
Interrupt vectors for the DAC peripheral type 
.SS "#define DAC_SR_DACBFRPBF(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_SR_DACBFRPBF_SHIFT\fP)) & \fBDAC_SR_DACBFRPBF_MASK\fP)"

.SS "#define DAC_SR_DACBFRPBF_MASK   (0x1U)"

.SS "#define DAC_SR_DACBFRPBF_SHIFT   (0U)"

.SS "#define DAC_SR_DACBFRPTF(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_SR_DACBFRPTF_SHIFT\fP)) & \fBDAC_SR_DACBFRPTF_MASK\fP)"

.SS "#define DAC_SR_DACBFRPTF_MASK   (0x2U)"

.SS "#define DAC_SR_DACBFRPTF_SHIFT   (1U)"

.SS "#define DAC_SR_DACBFWMF(x)   (((uint8_t)(((uint8_t)(x)) << \fBDAC_SR_DACBFWMF_SHIFT\fP)) & \fBDAC_SR_DACBFWMF_MASK\fP)"

.SS "#define DAC_SR_DACBFWMF_MASK   (0x4U)"

.SS "#define DAC_SR_DACBFWMF_SHIFT   (2U)"

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
