.TH "SDK/CMSIS/cmsis_armclang.h" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SDK/CMSIS/cmsis_armclang.h \- CMSIS compiler armclang (Arm Compiler 6) header file\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <arm_compat\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fB__ASM\fP   __asm"
.br
.ti -1c
.RI "#define \fB__INLINE\fP   __inline"
.br
.ti -1c
.RI "#define \fB__STATIC_INLINE\fP   static __inline"
.br
.ti -1c
.RI "#define \fB__STATIC_FORCEINLINE\fP   \fB__attribute__\fP((always_inline)) static __inline"
.br
.ti -1c
.RI "#define \fB__NO_RETURN\fP   \fB__attribute__\fP((__noreturn__))"
.br
.ti -1c
.RI "#define \fB__USED\fP   \fB__attribute__\fP((used))"
.br
.ti -1c
.RI "#define \fB__WEAK\fP   \fB__attribute__\fP((weak))"
.br
.ti -1c
.RI "#define \fB__PACKED\fP   \fB__attribute__\fP((packed, aligned(1)))"
.br
.ti -1c
.RI "#define \fB__PACKED_STRUCT\fP   struct \fB__attribute__\fP((packed, aligned(1)))"
.br
.ti -1c
.RI "#define \fB__PACKED_UNION\fP   union \fB__attribute__\fP((packed, aligned(1)))"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT32\fP(x)   (((struct T_UINT32 *)(x))\->v)"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT16_WRITE\fP(addr,  val)   (void)((((struct \fBT_UINT16_WRITE\fP *)(void *)(addr))\->v) = (val))"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT16_READ\fP(addr)   (((const struct \fBT_UINT16_READ\fP *)(const void *)(addr))\->v)"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT32_WRITE\fP(addr,  val)   (void)((((struct \fBT_UINT32_WRITE\fP *)(void *)(addr))\->v) = (val))"
.br
.ti -1c
.RI "#define \fB__UNALIGNED_UINT32_READ\fP(addr)   (((const struct \fBT_UINT32_READ\fP *)(const void *)(addr))\->v)"
.br
.ti -1c
.RI "#define \fB__ALIGNED\fP(x)   \fB__attribute__\fP((aligned(x)))"
.br
.ti -1c
.RI "#define \fB__RESTRICT\fP   __restrict"
.br
.ti -1c
.RI "#define \fB__CMSIS_GCC_OUT_REG\fP(r)   '=r' (r)"
.br
.ti -1c
.RI "#define \fB__CMSIS_GCC_USE_REG\fP(r)   'r' (r)"
.br
.ti -1c
.RI "#define \fB__NOP\fP   __builtin_arm_nop"
.br
.RI "No Operation\&. "
.ti -1c
.RI "#define \fB__WFI\fP   __builtin_arm_wfi"
.br
.RI "Wait For Interrupt\&. "
.ti -1c
.RI "#define \fB__WFE\fP   __builtin_arm_wfe"
.br
.RI "Wait For Event\&. "
.ti -1c
.RI "#define \fB__SEV\fP   __builtin_arm_sev"
.br
.RI "Send Event\&. "
.ti -1c
.RI "#define \fB__ISB\fP()   __builtin_arm_isb(0xF);"
.br
.RI "Instruction Synchronization Barrier\&. "
.ti -1c
.RI "#define \fB__DSB\fP()   __builtin_arm_dsb(0xF);"
.br
.RI "Data Synchronization Barrier\&. "
.ti -1c
.RI "#define \fB__DMB\fP()   __builtin_arm_dmb(0xF);"
.br
.RI "Data Memory Barrier\&. "
.ti -1c
.RI "#define \fB__REV\fP(value)   __builtin_bswap32(value)"
.br
.RI "Reverse byte order (32 bit) "
.ti -1c
.RI "#define \fB__REV16\fP(value)   \fB__ROR\fP(\fB__REV\fP(value), 16)"
.br
.RI "Reverse byte order (16 bit) "
.ti -1c
.RI "#define \fB__REVSH\fP(value)   (int16_t)__builtin_bswap16(value)"
.br
.RI "Reverse byte order (16 bit) "
.ti -1c
.RI "#define \fB__BKPT\fP(value)   \fB__ASM\fP volatile ('bkpt '#value)"
.br
.RI "Breakpoint\&. "
.ti -1c
.RI "#define \fB__RBIT\fP   __builtin_arm_rbit"
.br
.RI "Reverse bit order of value\&. "
.ti -1c
.RI "#define \fB__CLZ\fP   (uint8_t)__builtin_clz"
.br
.RI "Count leading zeros\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "struct \fB__attribute__\fP ((packed)) T_UINT32"
.br
.ti -1c
.RI "\fB__STATIC_INLINE\fP uint32_t \fB__get_CONTROL\fP (void)"
.br
.RI "Enable IRQ Interrupts\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP void \fB__set_CONTROL\fP (uint32_t control)"
.br
.RI "Set Control Register\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP uint32_t \fB__get_IPSR\fP (void)"
.br
.RI "Get IPSR Register\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP uint32_t \fB__get_APSR\fP (void)"
.br
.RI "Get APSR Register\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP uint32_t \fB__get_xPSR\fP (void)"
.br
.RI "Get xPSR Register\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP uint32_t \fB__get_PSP\fP (void)"
.br
.RI "Get Process Stack Pointer\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP void \fB__set_PSP\fP (uint32_t topOfProcStack)"
.br
.RI "Set Process Stack Pointer\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP uint32_t \fB__get_MSP\fP (void)"
.br
.RI "Get Main Stack Pointer\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP void \fB__set_MSP\fP (uint32_t topOfMainStack)"
.br
.RI "Set Main Stack Pointer\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP uint32_t \fB__get_PRIMASK\fP (void)"
.br
.RI "Get Priority Mask\&. "
.ti -1c
.RI "\fB__STATIC_INLINE\fP void \fB__set_PRIMASK\fP (uint32_t priMask)"
.br
.RI "Set Priority Mask\&. "
.ti -1c
.RI "\fB__STATIC_FORCEINLINE\fP uint32_t \fB__ROR\fP (uint32_t op1, uint32_t op2)"
.br
.RI "Rotate Right in unsigned value (32 bit) "
.ti -1c
.RI "\fB__STATIC_FORCEINLINE\fP int32_t \fB__SSAT\fP (int32_t val, uint32_t \fBsat\fP)"
.br
.RI "Signed Saturate\&. "
.ti -1c
.RI "\fB__STATIC_FORCEINLINE\fP uint32_t \fB__USAT\fP (int32_t val, uint32_t \fBsat\fP)"
.br
.RI "Unsigned Saturate\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fB__PACKED_STRUCT\fP \fBT_UINT16_WRITE\fP { uint16_t v"
.br
.ti -1c
.RI "\fB__PACKED_STRUCT\fP \fBT_UINT16_READ\fP { uint16_t v"
.br
.ti -1c
.RI "\fB__PACKED_STRUCT\fP \fBT_UINT32_WRITE\fP { uint32_t v"
.br
.ti -1c
.RI "\fB__PACKED_STRUCT\fP \fBT_UINT32_READ\fP { uint32_t v"
.br
.in -1c
.SH "Detailed Description"
.PP 
CMSIS compiler armclang (Arm Compiler 6) header file\&. 


.PP
\fBVersion:\fP
.RS 4
V5\&.0\&.4 
.RE
.PP
\fBDate:\fP
.RS 4
10\&. January 2018 
.RE
.PP

.SH "Macro Definition Documentation"
.PP 
.SS "#define __ALIGNED(x)   \fB__attribute__\fP((aligned(x)))"

.SS "#define __ASM   __asm"

.SS "#define __INLINE   __inline"

.SS "#define __NO_RETURN   \fB__attribute__\fP((__noreturn__))"

.SS "#define __PACKED   \fB__attribute__\fP((packed, aligned(1)))"

.SS "#define __PACKED_STRUCT   struct \fB__attribute__\fP((packed, aligned(1)))"

.SS "#define __PACKED_UNION   union \fB__attribute__\fP((packed, aligned(1)))"

.SS "#define __RESTRICT   __restrict"

.SS "#define __STATIC_FORCEINLINE   \fB__attribute__\fP((always_inline)) static __inline"

.SS "#define __STATIC_INLINE   static __inline"

.SS "#define __UNALIGNED_UINT16_READ(addr)   (((const struct \fBT_UINT16_READ\fP *)(const void *)(addr))\->v)"

.SS "#define __UNALIGNED_UINT16_WRITE(addr, val)   (void)((((struct \fBT_UINT16_WRITE\fP *)(void *)(addr))\->v) = (val))"

.SS "#define __UNALIGNED_UINT32(x)   (((struct T_UINT32 *)(x))\->v)"

.SS "#define __UNALIGNED_UINT32_READ(addr)   (((const struct \fBT_UINT32_READ\fP *)(const void *)(addr))\->v)"

.SS "#define __UNALIGNED_UINT32_WRITE(addr, val)   (void)((((struct \fBT_UINT32_WRITE\fP *)(void *)(addr))\->v) = (val))"

.SS "#define __USED   \fB__attribute__\fP((used))"

.SS "#define __WEAK   \fB__attribute__\fP((weak))"

.SH "Function Documentation"
.PP 
.SS "struct __attribute__ ((packed))"

.SH "Variable Documentation"
.PP 
.SS "\fB__PACKED_STRUCT\fP T_UINT16_READ { uint16_t v"

.SS "\fB__PACKED_STRUCT\fP T_UINT16_WRITE { uint16_t v"

.SS "\fB__PACKED_STRUCT\fP T_UINT32_READ { uint32_t v"

.SS "\fB__PACKED_STRUCT\fP T_UINT32_WRITE { uint32_t v"

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
