.TH "RFVBAT_Register_Masks" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RFVBAT_Register_Masks
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBRFVBAT_BASE\fP   (0x4003E000u)"
.br
.ti -1c
.RI "#define \fBRFVBAT\fP   ((\fBRFVBAT_Type\fP *)\fBRFVBAT_BASE\fP)"
.br
.ti -1c
.RI "#define \fBRFVBAT_BASE_ADDRS\fP   { \fBRFVBAT_BASE\fP }"
.br
.ti -1c
.RI "#define \fBRFVBAT_BASE_PTRS\fP   { \fBRFVBAT\fP }"
.br
.in -1c
.SS "REG - VBAT register file register"

.in +1c
.ti -1c
.RI "#define \fBRFVBAT_REG_LL_MASK\fP   (0xFFU)"
.br
.ti -1c
.RI "#define \fBRFVBAT_REG_LL_SHIFT\fP   (0U)"
.br
.ti -1c
.RI "#define \fBRFVBAT_REG_LL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRFVBAT_REG_LL_SHIFT\fP)) & \fBRFVBAT_REG_LL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRFVBAT_REG_LH_MASK\fP   (0xFF00U)"
.br
.ti -1c
.RI "#define \fBRFVBAT_REG_LH_SHIFT\fP   (8U)"
.br
.ti -1c
.RI "#define \fBRFVBAT_REG_LH\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRFVBAT_REG_LH_SHIFT\fP)) & \fBRFVBAT_REG_LH_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRFVBAT_REG_HL_MASK\fP   (0xFF0000U)"
.br
.ti -1c
.RI "#define \fBRFVBAT_REG_HL_SHIFT\fP   (16U)"
.br
.ti -1c
.RI "#define \fBRFVBAT_REG_HL\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRFVBAT_REG_HL_SHIFT\fP)) & \fBRFVBAT_REG_HL_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRFVBAT_REG_HH_MASK\fP   (0xFF000000U)"
.br
.ti -1c
.RI "#define \fBRFVBAT_REG_HH_SHIFT\fP   (24U)"
.br
.ti -1c
.RI "#define \fBRFVBAT_REG_HH\fP(x)   (((uint32_t)(((uint32_t)(x)) << \fBRFVBAT_REG_HH_SHIFT\fP)) & \fBRFVBAT_REG_HH_MASK\fP)"
.br
.ti -1c
.RI "#define \fBRFVBAT_REG_COUNT\fP   (8U)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define RFVBAT   ((\fBRFVBAT_Type\fP *)\fBRFVBAT_BASE\fP)"
Peripheral RFVBAT base pointer 
.SS "#define RFVBAT_BASE   (0x4003E000u)"
Peripheral RFVBAT base address 
.SS "#define RFVBAT_BASE_ADDRS   { \fBRFVBAT_BASE\fP }"
Array initializer of RFVBAT peripheral base addresses 
.SS "#define RFVBAT_BASE_PTRS   { \fBRFVBAT\fP }"
Array initializer of RFVBAT peripheral base pointers 
.SS "#define RFVBAT_REG_COUNT   (8U)"

.SS "#define RFVBAT_REG_HH(x)   (((uint32_t)(((uint32_t)(x)) << \fBRFVBAT_REG_HH_SHIFT\fP)) & \fBRFVBAT_REG_HH_MASK\fP)"

.SS "#define RFVBAT_REG_HH_MASK   (0xFF000000U)"

.SS "#define RFVBAT_REG_HH_SHIFT   (24U)"

.SS "#define RFVBAT_REG_HL(x)   (((uint32_t)(((uint32_t)(x)) << \fBRFVBAT_REG_HL_SHIFT\fP)) & \fBRFVBAT_REG_HL_MASK\fP)"

.SS "#define RFVBAT_REG_HL_MASK   (0xFF0000U)"

.SS "#define RFVBAT_REG_HL_SHIFT   (16U)"

.SS "#define RFVBAT_REG_LH(x)   (((uint32_t)(((uint32_t)(x)) << \fBRFVBAT_REG_LH_SHIFT\fP)) & \fBRFVBAT_REG_LH_MASK\fP)"

.SS "#define RFVBAT_REG_LH_MASK   (0xFF00U)"

.SS "#define RFVBAT_REG_LH_SHIFT   (8U)"

.SS "#define RFVBAT_REG_LL(x)   (((uint32_t)(((uint32_t)(x)) << \fBRFVBAT_REG_LL_SHIFT\fP)) & \fBRFVBAT_REG_LL_MASK\fP)"

.SS "#define RFVBAT_REG_LL_MASK   (0xFFU)"

.SS "#define RFVBAT_REG_LL_SHIFT   (0U)"

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
