.TH "park" 3 "Mon Sep 13 2021" "TP2_G1" \" -*- nroff -*-
.ad l
.nh
.SH NAME
park
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "CMSIS_INLINE \fB__STATIC_INLINE\fP void \fBarm_park_f32\fP (\fBfloat32_t\fP Ialpha, \fBfloat32_t\fP Ibeta, \fBfloat32_t\fP *pId, \fBfloat32_t\fP *pIq, \fBfloat32_t\fP sinVal, \fBfloat32_t\fP cosVal)"
.br
.RI "Floating-point Park transform\&. "
.ti -1c
.RI "CMSIS_INLINE \fB__STATIC_INLINE\fP void \fBarm_park_q31\fP (\fBq31_t\fP Ialpha, \fBq31_t\fP Ibeta, \fBq31_t\fP *pId, \fBq31_t\fP *pIq, \fBq31_t\fP sinVal, \fBq31_t\fP cosVal)"
.br
.RI "Park transform for Q31 version\&. "
.in -1c
.SH "Detailed Description"
.PP 
Forward Park transform converts the input two-coordinate vector to flux and torque components\&. The Park transform can be used to realize the transformation of the \fCIalpha\fP and the \fCIbeta\fP currents from the stationary to the moving reference frame and control the spatial relationship between the stator vector current and rotor flux vector\&. If we consider the d axis aligned with the rotor flux, the diagram below shows the current vector and the relationship from the two reference frames: Stator current space vector and its component in (a,b) and in the d,q rotating reference frame The function operates on a single sample of data and each call to the function returns the processed output\&. The library provides separate functions for Q31 and floating-point data types\&. 
.PP
\fBAlgorithm\fP
.RS 4
 where \fCIalpha\fP and \fCIbeta\fP are the stator vector components, \fCpId\fP and \fCpIq\fP are rotor vector components and \fCcosVal\fP and \fCsinVal\fP are the cosine and sine values of theta (rotor flux position)\&. 
.RE
.PP
\fBFixed-Point Behavior\fP
.RS 4
Care must be taken when using the Q31 version of the Park transform\&. In particular, the overflow and saturation behavior of the accumulator used must be considered\&. Refer to the function specific documentation below for usage guidelines\&. 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "CMSIS_INLINE \fB__STATIC_INLINE\fP void arm_park_f32 (\fBfloat32_t\fP Ialpha, \fBfloat32_t\fP Ibeta, \fBfloat32_t\fP * pId, \fBfloat32_t\fP * pIq, \fBfloat32_t\fP sinVal, \fBfloat32_t\fP cosVal)"

.PP
Floating-point Park transform\&. 
.PP
\fBParameters:\fP
.RS 4
\fIIalpha\fP input two-phase vector coordinate alpha 
.br
\fIIbeta\fP input two-phase vector coordinate beta 
.br
\fIpId\fP points to output rotor reference frame d 
.br
\fIpIq\fP points to output rotor reference frame q 
.br
\fIsinVal\fP sine value of rotation angle theta 
.br
\fIcosVal\fP cosine value of rotation angle theta
.RE
.PP
The function implements the forward Park transform\&. 
.SS "CMSIS_INLINE \fB__STATIC_INLINE\fP void arm_park_q31 (\fBq31_t\fP Ialpha, \fBq31_t\fP Ibeta, \fBq31_t\fP * pId, \fBq31_t\fP * pIq, \fBq31_t\fP sinVal, \fBq31_t\fP cosVal)"

.PP
Park transform for Q31 version\&. 
.PP
\fBParameters:\fP
.RS 4
\fIIalpha\fP input two-phase vector coordinate alpha 
.br
\fIIbeta\fP input two-phase vector coordinate beta 
.br
\fIpId\fP points to output rotor reference frame d 
.br
\fIpIq\fP points to output rotor reference frame q 
.br
\fIsinVal\fP sine value of rotation angle theta 
.br
\fIcosVal\fP cosine value of rotation angle theta
.RE
.PP
\fBScaling and Overflow Behavior:\fP 
.PP
\fB\fP
.RS 4
The function is implemented using an internal 32-bit accumulator\&. The accumulator maintains 1\&.31 format by truncating lower 31 bits of the intermediate multiplication in 2\&.62 format\&. There is saturation on the addition and subtraction, hence there is no risk of overflow\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for TP2_G1 from the source code\&.
