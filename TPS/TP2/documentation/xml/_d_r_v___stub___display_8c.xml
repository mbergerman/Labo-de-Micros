<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_d_r_v___stub___display_8c" kind="file" language="C++">
    <compoundname>DRV_Stub_Display.c</compoundname>
    <includes refid="_d_r_v___display_8h" local="yes">DRV_Display.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="119">
        <label>stdbool.h</label>
      </node>
      <node id="118">
        <label>stdint.h</label>
      </node>
      <node id="116">
        <label>DRV_Display.h</label>
        <link refid="_d_r_v___display_8h"/>
        <childnode refid="117" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>PDRV_GPIO.h</label>
        <link refid="_p_d_r_v___g_p_i_o_8h"/>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
      </node>
      <node id="115">
        <label>drivers/DRV_Stub_Display.c</label>
        <link refid="_d_r_v___stub___display_8c"/>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="120">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_d_r_v___stub___display_8c_1ac8c6ebd33b501db1b4c940142c529279" prot="public" static="no">
        <name>DISPLAY_DEVELOPMENT_MODE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="18" column="9" bodyfile="drivers/DRV_Stub_Display.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_d_r_v___stub___display_8c_1aef40644947e610818ac3e990e5829a8c" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char char_buffer[DISP_BUFFER_LEN]</definition>
        <argsstring>[DISP_BUFFER_LEN]</argsstring>
        <name>char_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="50" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_v___stub___display_8c_1abf13bebb99dad1cda0d2067625048cff" prot="public" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t buffer_current_len</definition>
        <argsstring></argsstring>
        <name>buffer_current_len</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="51" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_v___stub___display_8c_1a0458cb6be2a86d915c232430626a3c27" prot="public" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t buffer_pos</definition>
        <argsstring></argsstring>
        <name>buffer_pos</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="52" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_d_r_v___stub___display_8c_1a6f626e50cb5b98f3c037df9169d8493b" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool dp_buffer[4]</definition>
        <argsstring>[4]</argsstring>
        <name>dp_buffer</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="54" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1a6a2362c7b38797d255d105523da91771" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void print_buffer</definition>
        <argsstring>()</argsstring>
        <name>print_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="37" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="156" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1a1a9171e2595ab20c0d50a6b9ba243997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initDisplay</definition>
        <argsstring>()</argsstring>
        <name>initDisplay</name>
        <briefdescription>
<para>Initialize display. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="61" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1a82b49831690c342069ad4f428cae5e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dispClearBuffer</definition>
        <argsstring>()</argsstring>
        <name>dispClearBuffer</name>
        <briefdescription>
<para>Clears the display buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="66" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1a5cd6965b4b53f7f7574624ed99441a2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dispWriteBuffer</definition>
        <argsstring>(int c, const char *buffer)</argsstring>
        <name>dispWriteBuffer</name>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>word</declname>
          <defname>buffer</defname>
        </param>
        <briefdescription>
<para>Sets word of length c in the buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of word </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>word</parametername>
</parameternamelist>
<parameterdescription>
<para>Word to write </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="73" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="73" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1ac4e572e17ccea4d1861d1c1ad0fbdb01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dispWriteChar</definition>
        <argsstring>(int n, const char character)</argsstring>
        <name>dispWriteChar</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>char</type>
          <declname>character</declname>
        </param>
        <briefdescription>
<para>Sets character in position n of the buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of char to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>character</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of char </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="85" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="85" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1a332f6abc0d8d01cc72b37680897d73f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool dispValidChar</definition>
        <argsstring>(char character)</argsstring>
        <name>dispValidChar</name>
        <param>
          <type>char</type>
          <declname>character</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="94" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1ac217e6c75ca80b82afe700b9ce024294" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dispScrollRight</definition>
        <argsstring>()</argsstring>
        <name>dispScrollRight</name>
        <briefdescription>
<para>Scroll display to the right. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="98" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1a7147ac15263b2fdc3e1f8491697292e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dispScrollLeft</definition>
        <argsstring>()</argsstring>
        <name>dispScrollLeft</name>
        <briefdescription>
<para>Scroll display to the left. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="105" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1a7f77d4be414c1ef99847d387917a3870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dispStartAutoScroll</definition>
        <argsstring>(int speed)</argsstring>
        <name>dispStartAutoScroll</name>
        <param>
          <type>int</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
<para>Initialize autoscroll with specified speed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>Scroll speed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="111" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1a1748ae93f3d907dab9fb47fd4b481594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dispStopAutoScroll</definition>
        <argsstring>()</argsstring>
        <name>dispStopAutoScroll</name>
        <briefdescription>
<para>Stop autoscroll. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="112" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1a26af5a41d6fa849ac0c23e695cab44be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dispResetScroll</definition>
        <argsstring>()</argsstring>
        <name>dispResetScroll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="115" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1ac7715f91cb1f99c919ee00327e79c7fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dispSetBufferPos</definition>
        <argsstring>(int n)</argsstring>
        <name>dispSetBufferPos</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Sets n as the starting print position for the buffer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>New buffer position </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="118" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="118" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1a00c499300ac10262772db567c5f67278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t dispGetBufferPos</definition>
        <argsstring>()</argsstring>
        <name>dispGetBufferPos</name>
        <briefdescription>
<para>Get starting print position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="127" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1a83d7de4cef0c2924540b0290e67c579d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dispClearLED</definition>
        <argsstring>(int n)</argsstring>
        <name>dispClearLED</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Turn off a LED. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of LED to turn off </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="131" column="1" bodyfile="drivers/DRV_LEDs.c" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1a83cf1c2a8516ed219e648d78a9633466" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dispSetLED</definition>
        <argsstring>(int n)</argsstring>
        <name>dispSetLED</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Turn on a LED. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of LED to turn on </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="132" column="1" bodyfile="drivers/DRV_LEDs.c" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1ab55cfcccfedb751ea6ca588f47844c65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dispToggleLED</definition>
        <argsstring>()</argsstring>
        <name>dispToggleLED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1af338ab3a8224c7e5aeadd84a53f8d16e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dispSetDP</definition>
        <argsstring>(int i)</argsstring>
        <name>dispSetDP</name>
        <param>
          <type>int</type>
          <declname>n</declname>
          <defname>i</defname>
        </param>
        <briefdescription>
<para>Turns on the decimal point of the nth seven segment. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>DP index = 0, 1, 2, 3 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="138" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1a1220b3b872060b5d648b6280dab2d111" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dispClearDP</definition>
        <argsstring>(int i)</argsstring>
        <name>dispClearDP</name>
        <param>
          <type>int</type>
          <declname>n</declname>
          <defname>i</defname>
        </param>
        <briefdescription>
<para>Turns off the decimal point of the nth seven segment. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>DP index = 0, 1, 2, 3 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="141" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1ae33258196f8cd762c56b9d3fb122cbb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dispToggleDP</definition>
        <argsstring>(int i)</argsstring>
        <name>dispToggleDP</name>
        <param>
          <type>int</type>
          <declname>n</declname>
          <defname>i</defname>
        </param>
        <briefdescription>
<para>Toggles the decimal point of the nth seven segment. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>DP index = 0, 1, 2, 3 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="144" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="_d_r_v___stub___display_8c_1a278ed4464485157b9579be0db6ecf1a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dispUpdateBrightness</definition>
        <argsstring>(int brightness)</argsstring>
        <name>dispUpdateBrightness</name>
        <param>
          <type>int</type>
          <declname>brightness</declname>
        </param>
        <briefdescription>
<para>Updates the brightness of the display. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>brightness</parametername>
</parameternamelist>
<parameterdescription>
<para>brightness: int between one and nine </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/DRV_Stub_Display.c" line="147" column="1" bodyfile="drivers/DRV_Stub_Display.c" bodystart="147" bodyend="149"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>stdout-based display stub driver </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Grupo 1 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************/</highlight></codeline>
<codeline lineno="7"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>INCLUDE<sp/>HEADER<sp/>FILES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_d_r_v___display_8h" kindref="compound">DRV_Display.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>CONSTANT<sp/>AND<sp/>MACRO<sp/>DEFINITIONS<sp/>USING<sp/>#DEFINE</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DISPLAY_DEVELOPMENT_MODE<sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>ENUMERATIONS<sp/>AND<sp/>STRUCTURES<sp/>AND<sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>VARIABLES<sp/>WITH<sp/>GLOBAL<sp/>SCOPE</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>+ej:<sp/>unsigned<sp/>int<sp/>anio_actual;+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>FUNCTION<sp/>PROTOTYPES<sp/>FOR<sp/>PRIVATE<sp/>FUNCTIONS<sp/>WITH<sp/>FILE<sp/>LEVEL<sp/>SCOPE</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_buffer();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>ROM<sp/>CONST<sp/>VARIABLES<sp/>WITH<sp/>FILE<sp/>LEVEL<sp/>SCOPE</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>STATIC<sp/>VARIABLES<sp/>AND<sp/>CONST<sp/>VARIABLES<sp/>WITH<sp/>FILE<sp/>LEVEL<sp/>SCOPE</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>char_buffer[<ref refid="_d_r_v___display_8h_1a3f61b4197942c82065f8477a5c814f39" kindref="member">DISP_BUFFER_LEN</ref>];</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>buffer_current_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>buffer_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dp_buffer[4]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*******************************************************************************</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLOBAL<sp/>FUNCTION<sp/>DEFINITIONS</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*******************************************************************************</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1a1a9171e2595ab20c0d50a6b9ba243997" kindref="member">initDisplay</ref>(){</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Console<sp/>Display<sp/>initialized!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_d_r_v___stub___display_8c_1a82b49831690c342069ad4f428cae5e61" kindref="member">dispClearBuffer</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1a82b49831690c342069ad4f428cae5e61" kindref="member">dispClearBuffer</ref>(){</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;4;<sp/>i++)<sp/>{dp_buffer[i]=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_current_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>print_buffer();</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1a5cd6965b4b53f7f7574624ed99441a2f" kindref="member">dispWriteBuffer</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DISPLAY_DEVELOPMENT_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>&gt;<sp/><ref refid="_d_r_v___display_8h_1a3f61b4197942c82065f8477a5c814f39" kindref="member">DISP_BUFFER_LEN</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DISPLAY_DEVELOPMENT_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>c;<sp/>i++){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_buffer[i]<sp/>=<sp/>buffer[i];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_current_len<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>print_buffer();</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1ac4e572e17ccea4d1861d1c1ad0fbdb01" kindref="member">dispWriteChar</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>character){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DISPLAY_DEVELOPMENT_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;=<sp/><ref refid="_d_r_v___display_8h_1a3f61b4197942c82065f8477a5c814f39" kindref="member">DISP_BUFFER_LEN</ref><sp/>||<sp/>n<sp/>&gt;<sp/>buffer_current_len)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DISPLAY_DEVELOPMENT_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>char_buffer[n]<sp/>=<sp/>character;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&gt;=<sp/>buffer_current_len)<sp/>buffer_current_len<sp/>=<sp/>n+1;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>print_buffer();</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1a332f6abc0d8d01cc72b37680897d73f6" kindref="member">dispValidChar</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>character){</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1ac217e6c75ca80b82afe700b9ce024294" kindref="member">dispScrollRight</ref>(){</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_pos++;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_pos<sp/>=<sp/>(buffer_pos<sp/>&gt;=<sp/>buffer_current_len)?<sp/>0<sp/>:<sp/>buffer_pos;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>print_buffer();</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1a7147ac15263b2fdc3e1f8491697292e4" kindref="member">dispScrollLeft</ref>(){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_pos--;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_pos<sp/>=<sp/>(buffer_pos<sp/>&lt;<sp/>0)?<sp/>buffer_current_len-1<sp/>:<sp/>buffer_pos;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>print_buffer();</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1a7f77d4be414c1ef99847d387917a3870" kindref="member">dispStartAutoScroll</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>speed){}<sp/><sp/><sp/></highlight><highlight class="comment">//TO-DO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1a1748ae93f3d907dab9fb47fd4b481594" kindref="member">dispStopAutoScroll</ref>(){}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TO-DO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1a26af5a41d6fa849ac0c23e695cab44be" kindref="member">dispResetScroll</ref>(){</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_d_r_v___stub___display_8c_1ac7715f91cb1f99c919ee00327e79c7fa" kindref="member">dispSetBufferPos</ref>(0);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1ac7715f91cb1f99c919ee00327e79c7fa" kindref="member">dispSetBufferPos</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DISPLAY_DEVELOPMENT_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DISPLAY_DEVELOPMENT_MODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_pos<sp/>=<sp/>n%buffer_current_len;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>print_buffer();</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">uint8_t<sp/><ref refid="_d_r_v___stub___display_8c_1a00c499300ac10262772db567c5f67278" kindref="member">dispGetBufferPos</ref>(){</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer_pos;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1a83d7de4cef0c2924540b0290e67c579d" kindref="member">dispClearLED</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);<sp/><sp/><sp/></highlight><highlight class="comment">//TO-DO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1a83cf1c2a8516ed219e648d78a9633466" kindref="member">dispSetLED</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TO-DO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1ab55cfcccfedb751ea6ca588f47844c65" kindref="member">dispToggleLED</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TO-DO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1af338ab3a8224c7e5aeadd84a53f8d16e" kindref="member">dispSetDP</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>dp_buffer[i]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1a1220b3b872060b5d648b6280dab2d111" kindref="member">dispClearDP</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>dp_buffer[i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1ae33258196f8cd762c56b9d3fb122cbb1" kindref="member">dispToggleDP</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>dp_buffer[i]<sp/>^=<sp/>0b1;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_d_r_v___stub___display_8c_1a278ed4464485157b9579be0db6ecf1a3" kindref="member">dispUpdateBrightness</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>brightness)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Brightness<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>brightness);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*******************************************************************************</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LOCAL<sp/>FUNCTION<sp/>DEFINITIONS</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*******************************************************************************</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print_buffer(){</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Display:<sp/>|&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_d_r_v___display_8h_1af6b255d26a5a4a9919682add7cdb912a" kindref="member">DISP_CHARS_NUM</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>index<sp/>=<sp/>(i<sp/>+<sp/>buffer_pos)%buffer_current_len;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%c|&quot;</highlight><highlight class="normal">,<sp/>(i<sp/>&lt;<sp/>buffer_current_len)?<sp/>char_buffer[index]<sp/>:<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_d_r_v___display_8h_1af6b255d26a5a4a9919682add7cdb912a" kindref="member">DISP_CHARS_NUM</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%1d|&quot;</highlight><highlight class="normal">,<sp/>dp_buffer[i]);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="drivers/DRV_Stub_Display.c"/>
  </compounddef>
</doxygen>
