<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_p_d_r_v___g_p_i_o_8c" kind="file" language="C++">
    <compoundname>PDRV_GPIO.c</compoundname>
    <includes refid="_m_k64_f12_8h" local="yes">MK64F12.h</includes>
    <includes refid="_p_d_r_v___g_p_i_o_8h" local="yes">PDRV_GPIO.h</includes>
    <includes refid="hardware_8h" local="yes">hardware.h</includes>
    <incdepgraph>
      <node id="157">
        <label>stdbool.h</label>
      </node>
      <node id="158">
        <label>hardware.h</label>
        <link refid="hardware_8h"/>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
      </node>
      <node id="153">
        <label>cmsis_version.h</label>
        <link refid="cmsis__version_8h"/>
      </node>
      <node id="159">
        <label>fsl_device_registers.h</label>
        <link refid="fsl__device__registers_8h"/>
      </node>
      <node id="152">
        <label>stdint.h</label>
      </node>
      <node id="151">
        <label>core_cm4.h</label>
        <link refid="core__cm4_8h"/>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>drivers/PDRV_GPIO.c</label>
        <link refid="_p_d_r_v___g_p_i_o_8c"/>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
      <node id="156">
        <label>PDRV_GPIO.h</label>
        <link refid="_p_d_r_v___g_p_i_o_8h"/>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>cmsis_compiler.h</label>
        <link refid="cmsis__compiler_8h"/>
        <childnode refid="152" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>system_MK64F12.h</label>
        <link refid="system___m_k64_f12_8h"/>
        <childnode refid="152" relation="include">
        </childnode>
      </node>
      <node id="150">
        <label>MK64F12.h</label>
        <link refid="_m_k64_f12_8h"/>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_p_d_r_v___g_p_i_o_8c_1a78b3fd1f2cef0eb0e025019eb7ab3c65" prot="public" static="no">
        <name>SIM_SCGC5_PORT_MASK</name>
        <initializer>0x3E00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="18" column="9" bodyfile="drivers/PDRV_GPIO.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_p_d_r_v___g_p_i_o_8c_1a46168c358807631601faa34d692fd993" prot="public" static="no">
        <name>SIM_SCGC5_PORT</name>
        <param><defname>port</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((uint32_t)(((uint32_t)(b)) &lt;&lt; (9+port))) &amp; <ref refid="_p_d_r_v___g_p_i_o_8c_1a78b3fd1f2cef0eb0e025019eb7ab3c65" kindref="member">SIM_SCGC5_PORT_MASK</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="19" column="9" bodyfile="drivers/PDRV_GPIO.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_p_d_r_v___g_p_i_o_8c_1a3def8ddb155ca19398c3d9939ba3bebe" prot="public" static="no">
        <name>PORTX_IRQn</name>
        <param><defname>p</defname></param>
        <initializer>(<ref refid="group___interrupt__vector__numbers_1gga666eb0caeb12ec0e281415592ae89083ab9d085b02f1b3c2ed7b0b7fe6ae4c947" kindref="member">PORTA_IRQn</ref>+p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="20" column="9" bodyfile="drivers/PDRV_GPIO.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_p_d_r_v___g_p_i_o_8c_1adb312c6a2d8064fb21620d1e141111d6" prot="public" static="no">
        <name>PINS_PER_PORT</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="21" column="9" bodyfile="drivers/PDRV_GPIO.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_p_d_r_v___g_p_i_o_8c_1a7ec751f49d6391028a94f1419374c2fa" prot="public" static="no">
        <name>ARRAY_SIZE</name>
        <initializer>(FSL_FEATURE_SOC_PORT_COUNT*<ref refid="_p_d_r_v___g_p_i_o_8c_1adb312c6a2d8064fb21620d1e141111d6" kindref="member">PINS_PER_PORT</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="22" column="9" bodyfile="drivers/PDRV_GPIO.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_p_d_r_v___g_p_i_o_8c_1aa618f1ecbfa3001f850a4034d4a8efa9" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_p_o_r_t___type" kindref="compound">PORT_Type</ref> *const</type>
        <definition>PORT_Type* const PORT_PTRS[FSL_FEATURE_SOC_PORT_COUNT]</definition>
        <argsstring>[FSL_FEATURE_SOC_PORT_COUNT]</argsstring>
        <name>PORT_PTRS</name>
        <initializer>= <ref refid="group___p_o_r_t___register___masks_1ga54ff5179f8acaef2e1683cedfc0ef453" kindref="member">PORT_BASE_PTRS</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="27" column="1" bodyfile="drivers/PDRV_GPIO.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_p_d_r_v___g_p_i_o_8c_1a8d9c19bf308c87c8985ed4832a529efc" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_g_p_i_o___type" kindref="compound">GPIO_Type</ref> *const</type>
        <definition>GPIO_Type* const GPIO_PTRS[FSL_FEATURE_SOC_PORT_COUNT]</definition>
        <argsstring>[FSL_FEATURE_SOC_PORT_COUNT]</argsstring>
        <name>GPIO_PTRS</name>
        <initializer>= <ref refid="group___g_p_i_o___register___masks_1gad0f7206167a584b1e75a81a5c30fa1c2" kindref="member">GPIO_BASE_PTRS</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="28" column="1" bodyfile="drivers/PDRV_GPIO.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_p_d_r_v___g_p_i_o_8c_1afb5bb26f3cdc9e544fd63aad64785b96" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t IRQC_MODES[]</definition>
        <argsstring>[]</argsstring>
        <name>IRQC_MODES</name>
        <initializer>= {0b0000,0b1000,0b1001,0b1010,0b1011,0b1100}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="30" column="1" bodyfile="drivers/PDRV_GPIO.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_p_d_r_v___g_p_i_o_8c_1a1e56a6fd9391f920bacb5f8944d69932" prot="public" static="yes" mutable="no">
        <type><ref refid="_p_d_r_v___g_p_i_o_8h_1a393f57a2cb0a6d68e52055655b75e6c5" kindref="member">pinIrqFun_t</ref></type>
        <definition>pinIrqFun_t CALLBACKS[ARRAY_SIZE]</definition>
        <argsstring>[ARRAY_SIZE]</argsstring>
        <name>CALLBACKS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="32" column="1" bodyfile="drivers/PDRV_GPIO.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_p_d_r_v___g_p_i_o_8c_1a476ff0d1dfda3ee7a98163df6e2b6ba9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void IRQHandler</definition>
        <argsstring>(int32_t port)</argsstring>
        <name>IRQHandler</name>
        <param>
          <type>int32_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="34" column="1" bodyfile="drivers/PDRV_GPIO.c" bodystart="120" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="_p_d_r_v___g_p_i_o_8c_1ab34efe1e7a4661cb63c09374414169d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gpioMode</definition>
        <argsstring>(pin_t pin, uint8_t mode)</argsstring>
        <name>gpioMode</name>
        <param>
          <type><ref refid="_p_d_r_v___g_p_i_o_8h_1aede467d93ddeb5fdeff6023236aa4ad6" kindref="member">pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Configures the specified pin to behave either as an input or an output. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>the pin whose mode you wish to set (according PORTNUM2PIN) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>INPUT, OUTPUT, INPUT_PULLUP or INPUT_PULLDOWN. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>!! </para>        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="42" column="1" bodyfile="drivers/PDRV_GPIO.c" bodystart="42" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="_p_d_r_v___g_p_i_o_8c_1a7dfc26dc60c3056b0cbe99bfaedab27f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gpioIRQ</definition>
        <argsstring>(pin_t pin, uint8_t irqMode, pinIrqFun_t irqFun)</argsstring>
        <name>gpioIRQ</name>
        <param>
          <type><ref refid="_p_d_r_v___g_p_i_o_8h_1aede467d93ddeb5fdeff6023236aa4ad6" kindref="member">pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>irqMode</declname>
        </param>
        <param>
          <type><ref refid="_p_d_r_v___g_p_i_o_8h_1a393f57a2cb0a6d68e52055655b75e6c5" kindref="member">pinIrqFun_t</ref></type>
          <declname>irqFun</declname>
        </param>
        <briefdescription>
<para>Configures how the pin reacts when an IRQ event ocurrs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>the pin whose IRQ mode you wish to set (according PORTNUM2PIN) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>irqMode</parametername>
</parameternamelist>
<parameterdescription>
<para>disable, risingEdge, fallingEdge or bothEdges </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>irqFun</parametername>
</parameternamelist>
<parameterdescription>
<para>function to call on pin event </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Registration succeed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="69" column="1" bodyfile="drivers/PDRV_GPIO.c" bodystart="69" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="_p_d_r_v___g_p_i_o_8c_1ad68eec4f70f9f1fa38ae48c138c0d82f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gpioWrite</definition>
        <argsstring>(pin_t pin, bool value)</argsstring>
        <name>gpioWrite</name>
        <param>
          <type><ref refid="_p_d_r_v___g_p_i_o_8h_1aede467d93ddeb5fdeff6023236aa4ad6" kindref="member">pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Write a HIGH or a LOW value to a digital pin. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>the pin to write (according PORTNUM2PIN) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired value (HIGH or LOW) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="89" column="1" bodyfile="drivers/PDRV_GPIO.c" bodystart="89" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="_p_d_r_v___g_p_i_o_8c_1a87cc22913db98be1ef1dadb20cda7831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gpioToggle</definition>
        <argsstring>(pin_t pin)</argsstring>
        <name>gpioToggle</name>
        <param>
          <type><ref refid="_p_d_r_v___g_p_i_o_8h_1aede467d93ddeb5fdeff6023236aa4ad6" kindref="member">pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Toggle the value of a digital pin (HIGH&lt;-&gt;LOW) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>the pin to toggle (according PORTNUM2PIN) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="101" column="1" bodyfile="drivers/PDRV_GPIO.c" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="_p_d_r_v___g_p_i_o_8c_1a59ce7b278cd2032a644766fd87e2e61a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gpioRead</definition>
        <argsstring>(pin_t pin)</argsstring>
        <name>gpioRead</name>
        <param>
          <type><ref refid="_p_d_r_v___g_p_i_o_8h_1aede467d93ddeb5fdeff6023236aa4ad6" kindref="member">pin_t</ref></type>
          <declname>pin</declname>
        </param>
        <briefdescription>
<para>Reads the value from a specified digital pin, either HIGH or LOW. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pin</parametername>
</parameternamelist>
<parameterdescription>
<para>the pin to read (according PORTNUM2PIN) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>HIGH or LOW </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="108" column="1" bodyfile="drivers/PDRV_GPIO.c" bodystart="108" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="_p_d_r_v___g_p_i_o_8c_1a23bab1118c571fb986315470633d20d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hardware_8h_1a27a122170c1b7feec6fa7247a91ac899" kindref="member">__ISR__</ref></type>
        <definition>WEAK void PORTA_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>PORTA_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="131" column="1" bodyfile="drivers/PDRV_GPIO.c" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="_p_d_r_v___g_p_i_o_8c_1a235248bab056bf6e9490bd77f5ea4953" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hardware_8h_1a27a122170c1b7feec6fa7247a91ac899" kindref="member">__ISR__</ref></type>
        <definition>WEAK void PORTB_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>PORTB_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="132" column="1" bodyfile="drivers/PDRV_GPIO.c" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="_p_d_r_v___g_p_i_o_8c_1ade3880e81da2b0c4348d766324b8e4d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hardware_8h_1a27a122170c1b7feec6fa7247a91ac899" kindref="member">__ISR__</ref></type>
        <definition>WEAK void PORTC_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>PORTC_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="133" column="1" bodyfile="drivers/PDRV_GPIO.c" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="_p_d_r_v___g_p_i_o_8c_1a8fd3ee50dc9009ad6273dd3afd6e68ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hardware_8h_1a27a122170c1b7feec6fa7247a91ac899" kindref="member">__ISR__</ref></type>
        <definition>WEAK void PORTD_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>PORTD_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="134" column="1" bodyfile="drivers/PDRV_GPIO.c" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="_p_d_r_v___g_p_i_o_8c_1a54fa8831a9507d69e623def7625bcc2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="hardware_8h_1a27a122170c1b7feec6fa7247a91ac899" kindref="member">__ISR__</ref></type>
        <definition>WEAK void PORTE_IRQHandler</definition>
        <argsstring>(void)</argsstring>
        <name>PORTE_IRQHandler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="drivers/PDRV_GPIO.c" line="135" column="1" bodyfile="drivers/PDRV_GPIO.c" bodystart="135" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>GPIO driver. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Grupo 1 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************/</highlight></codeline>
<codeline lineno="7"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>INCLUDE<sp/>HEADER<sp/>FILES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_m_k64_f12_8h" kindref="compound">MK64F12.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_p_d_r_v___g_p_i_o_8h" kindref="compound">PDRV_GPIO.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hardware_8h" kindref="compound">hardware.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>CONSTANT<sp/>AND<sp/>MACRO<sp/>DEFINITIONS<sp/>USING<sp/>#DEFINE</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>12.2.12<sp/>System<sp/>Clock<sp/>Gating<sp/>Control<sp/>Register<sp/>5<sp/>(SIM_SCGC5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIM_SCGC5_PORT_MASK<sp/>0x3E00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIM_SCGC5_PORT(port,b)<sp/>(((uint32_t)(((uint32_t)(b))<sp/>&lt;&lt;<sp/>(9+port)))<sp/>&amp;<sp/>SIM_SCGC5_PORT_MASK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PORTX_IRQn(p)<sp/>(PORTA_IRQn+p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PINS_PER_PORT<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARRAY_SIZE<sp/>(FSL_FEATURE_SOC_PORT_COUNT*PINS_PER_PORT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>STATIC<sp/>VARIABLES<sp/>AND<sp/>CONST<sp/>VARIABLES<sp/>WITH<sp/>FILE<sp/>LEVEL<sp/>SCOPE</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_p_o_r_t___type" kindref="compound">PORT_Type</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PORT_PTRS[FSL_FEATURE_SOC_PORT_COUNT]<sp/>=<sp/><ref refid="group___p_o_r_t___register___masks_1ga54ff5179f8acaef2e1683cedfc0ef453" kindref="member">PORT_BASE_PTRS</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_g_p_i_o___type" kindref="compound">GPIO_Type</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GPIO_PTRS[FSL_FEATURE_SOC_PORT_COUNT]<sp/>=<sp/><ref refid="group___g_p_i_o___register___masks_1gad0f7206167a584b1e75a81a5c30fa1c2" kindref="member">GPIO_BASE_PTRS</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>IRQC_MODES[]<sp/>=<sp/>{0b0000,0b1000,0b1001,0b1010,0b1011,0b1100};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1a393f57a2cb0a6d68e52055655b75e6c5" kindref="member">pinIrqFun_t</ref><sp/>CALLBACKS[<ref refid="_p_d_r_v___g_p_i_o_8c_1a7ec751f49d6391028a94f1419374c2fa" kindref="member">ARRAY_SIZE</ref>];</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IRQHandler(int32_t<sp/>port);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*******************************************************************************</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLOBAL<sp/>FUNCTION<sp/>DEFINITIONS</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*******************************************************************************</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_p_d_r_v___g_p_i_o_8c_1ab34efe1e7a4661cb63c09374414169d6" kindref="member">gpioMode</ref><sp/>(<ref refid="_p_d_r_v___g_p_i_o_8h_1aede467d93ddeb5fdeff6023236aa4ad6" kindref="member">pin_t</ref><sp/>pin,<sp/>uint8_t<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pin<sp/>&gt;<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1a282f03f9d8560d495e180e7e1703ef0b" kindref="member">PORTNUM2PIN</ref>(<ref refid="_p_d_r_v___g_p_i_o_8h_1adc29c2ff13d900c2f185ee95427fb06ca84a0e8421125bc6ef85e43bab494f68c" kindref="member">PE</ref>,31)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>mode<sp/>&gt;<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1acc2f64df093104e4b029d86930fa4b8b" kindref="member">INPUT_PULLDOWN</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>port<sp/>=<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1ae544ad185baf9bec7774fd7a09268e9d" kindref="member">PIN2PORT</ref>(pin);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1)<sp/>Clock<sp/>enable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___s_i_m___register___masks_1ga3dd2f4c4bfb41778902b4b5350143d9e" kindref="member">SIM</ref>-&gt;SCGC5<sp/>|=<sp/><ref refid="_p_d_r_v___g_p_i_o_8c_1a46168c358807631601faa34d692fd993" kindref="member">SIM_SCGC5_PORT</ref>(port,1);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2)<sp/>PORT<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_p_o_r_t___type" kindref="compound">PORT_Type</ref>*<sp/>port_ptr<sp/>=<sp/>PORT_PTRS[port];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>port_ptr-&gt;<ref refid="group___v_r_e_f___peripheral___access___layer_1ga25bc9eea888d201d852deb4819850bb2" kindref="member">PCR</ref>[<ref refid="_p_d_r_v___g_p_i_o_8h_1ac10b3b1cdf332ee460d4ed0a8b85bb45" kindref="member">PIN2NUM</ref>(pin)]<sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>port_ptr-&gt;<ref refid="group___v_r_e_f___peripheral___access___layer_1ga25bc9eea888d201d852deb4819850bb2" kindref="member">PCR</ref>[<ref refid="_p_d_r_v___g_p_i_o_8h_1ac10b3b1cdf332ee460d4ed0a8b85bb45" kindref="member">PIN2NUM</ref>(pin)]<sp/>|=<sp/><ref refid="group___p_o_r_t___register___masks_1ga13b6c873e0e5385583b1f7907a9f796a" kindref="member">PORT_PCR_MUX</ref>(0b001);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>port_ptr-&gt;<ref refid="group___v_r_e_f___peripheral___access___layer_1ga25bc9eea888d201d852deb4819850bb2" kindref="member">PCR</ref>[<ref refid="_p_d_r_v___g_p_i_o_8h_1ac10b3b1cdf332ee460d4ed0a8b85bb45" kindref="member">PIN2NUM</ref>(pin)]<sp/>|=<sp/><ref refid="group___p_o_r_t___register___masks_1ga991775ce627dd1e581bdaf4508239240" kindref="member">PORT_PCR_DSE</ref>(0b1);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mode==<ref refid="_p_d_r_v___g_p_i_o_8h_1acc2f64df093104e4b029d86930fa4b8b" kindref="member">INPUT_PULLDOWN</ref>)||(mode==<ref refid="_p_d_r_v___g_p_i_o_8h_1a6295096662a20dd56186396e535fbe92" kindref="member">INPUT_PULLUP</ref>))<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_ptr-&gt;<ref refid="group___v_r_e_f___peripheral___access___layer_1ga25bc9eea888d201d852deb4819850bb2" kindref="member">PCR</ref>[<ref refid="_p_d_r_v___g_p_i_o_8h_1ac10b3b1cdf332ee460d4ed0a8b85bb45" kindref="member">PIN2NUM</ref>(pin)]<sp/>|=<sp/><ref refid="group___p_o_r_t___register___masks_1gaa149bd9cd83aa17c213a827f9482a913" kindref="member">PORT_PCR_PE</ref>(0b1);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_ptr-&gt;<ref refid="group___v_r_e_f___peripheral___access___layer_1ga25bc9eea888d201d852deb4819850bb2" kindref="member">PCR</ref>[<ref refid="_p_d_r_v___g_p_i_o_8h_1ac10b3b1cdf332ee460d4ed0a8b85bb45" kindref="member">PIN2NUM</ref>(pin)]<sp/>|=<sp/><ref refid="group___p_o_r_t___register___masks_1gabc7a02f49894ead35ce5d435bd05fb47" kindref="member">PORT_PCR_PS</ref>(<sp/>mode==<ref refid="_p_d_r_v___g_p_i_o_8h_1acc2f64df093104e4b029d86930fa4b8b" kindref="member">INPUT_PULLDOWN</ref><sp/>?<sp/>0b0<sp/>:<sp/>0b1<sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3)<sp/>GPIO<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_g_p_i_o___type" kindref="compound">GPIO_Type</ref>*<sp/>gpio_ptr<sp/>=<sp/>GPIO_PTRS[port];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_ptr-&gt;<ref refid="group___v_r_e_f___peripheral___access___layer_1ga441a96d3febd01d841b24561b4d036a3" kindref="member">PDDR</ref><sp/>|=<sp/>((mode<sp/>==<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref>)<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>&lt;&lt;<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1ac10b3b1cdf332ee460d4ed0a8b85bb45" kindref="member">PIN2NUM</ref>(pin);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_p_d_r_v___g_p_i_o_8c_1a7dfc26dc60c3056b0cbe99bfaedab27f" kindref="member">gpioIRQ</ref><sp/>(<ref refid="_p_d_r_v___g_p_i_o_8h_1aede467d93ddeb5fdeff6023236aa4ad6" kindref="member">pin_t</ref><sp/>pin,<sp/>uint8_t<sp/>irqMode,<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1a393f57a2cb0a6d68e52055655b75e6c5" kindref="member">pinIrqFun_t</ref><sp/>irqFun)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pin<sp/>&gt;<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1a282f03f9d8560d495e180e7e1703ef0b" kindref="member">PORTNUM2PIN</ref>(<ref refid="_p_d_r_v___g_p_i_o_8h_1adc29c2ff13d900c2f185ee95427fb06ca84a0e8421125bc6ef85e43bab494f68c" kindref="member">PE</ref>,31)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>irqMode<sp/>&gt;=<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1a61dadd085c1777f559549e05962b2c9ea4cabd2f47e5f82599e5a44614f7fbe5c" kindref="member">GPIO_IRQ_CANT_MODES</ref><sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>port<sp/>=<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1ae544ad185baf9bec7774fd7a09268e9d" kindref="member">PIN2PORT</ref>(pin);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_p_o_r_t___type" kindref="compound">PORT_Type</ref>*<sp/>port_ptr<sp/>=<sp/>PORT_PTRS[port];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pcr_clear_irqc<sp/>=<sp/>(port_ptr-&gt;<ref refid="group___v_r_e_f___peripheral___access___layer_1ga25bc9eea888d201d852deb4819850bb2" kindref="member">PCR</ref>[<ref refid="_p_d_r_v___g_p_i_o_8h_1ac10b3b1cdf332ee460d4ed0a8b85bb45" kindref="member">PIN2NUM</ref>(pin)]<sp/>&amp;<sp/>~<ref refid="group___p_o_r_t___register___masks_1gabaef70d886fda0a7da8e862308bf5909" kindref="member">PORT_PCR_IRQC_MASK</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>port_ptr-&gt;<ref refid="group___v_r_e_f___peripheral___access___layer_1ga25bc9eea888d201d852deb4819850bb2" kindref="member">PCR</ref>[<ref refid="_p_d_r_v___g_p_i_o_8h_1ac10b3b1cdf332ee460d4ed0a8b85bb45" kindref="member">PIN2NUM</ref>(pin)]<sp/>=<sp/>pcr_clear_irqc<sp/>|<sp/><ref refid="group___p_o_r_t___register___masks_1ga7e6b6f68db9e76cf6fa34774c9b9b8f9" kindref="member">PORT_PCR_IRQC</ref>(IRQC_MODES[irqMode])<sp/>|<sp/><ref refid="group___p_o_r_t___register___masks_1ga154d9308c2ab5b6a78ab04d9f3b08879" kindref="member">PORT_PCR_ISF_MASK</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(irqMode<sp/>==<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1a61dadd085c1777f559549e05962b2c9ea03d5a4eb216235e8364c1ab57b01c019" kindref="member">GPIO_IRQ_MODE_DISABLE</ref>)<sp/>{<sp/><ref refid="group___c_m_s_i_s___core___n_v_i_c_functions_1ga73b4e251f59cab4e9a5e234aac02ae57" kindref="member">NVIC_DisableIRQ</ref>(<ref refid="_p_d_r_v___g_p_i_o_8c_1a3def8ddb155ca19398c3d9939ba3bebe" kindref="member">PORTX_IRQn</ref>(port));<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><ref refid="group___c_m_s_i_s___core___n_v_i_c_functions_1ga57b3064413dbc7459d9646020fdd8bef" kindref="member">NVIC_EnableIRQ</ref>(<ref refid="_p_d_r_v___g_p_i_o_8c_1a3def8ddb155ca19398c3d9939ba3bebe" kindref="member">PORTX_IRQn</ref>(port));<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>CALLBACKS[<ref refid="_p_d_r_v___g_p_i_o_8c_1adb312c6a2d8064fb21620d1e141111d6" kindref="member">PINS_PER_PORT</ref>*port<sp/>+<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1ac10b3b1cdf332ee460d4ed0a8b85bb45" kindref="member">PIN2NUM</ref>(pin)]<sp/>=<sp/>irqFun;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_p_d_r_v___g_p_i_o_8c_1ad68eec4f70f9f1fa38ae48c138c0d82f" kindref="member">gpioWrite</ref><sp/>(<ref refid="_p_d_r_v___g_p_i_o_8h_1aede467d93ddeb5fdeff6023236aa4ad6" kindref="member">pin_t</ref><sp/>pin,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pin<sp/>&gt;<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1a282f03f9d8560d495e180e7e1703ef0b" kindref="member">PORTNUM2PIN</ref>(<ref refid="_p_d_r_v___g_p_i_o_8h_1adc29c2ff13d900c2f185ee95427fb06ca84a0e8421125bc6ef85e43bab494f68c" kindref="member">PE</ref>,31)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_g_p_i_o___type" kindref="compound">GPIO_Type</ref>*<sp/>gpio_ptr<sp/>=<sp/>GPIO_PTRS[<ref refid="_p_d_r_v___g_p_i_o_8h_1ae544ad185baf9bec7774fd7a09268e9d" kindref="member">PIN2PORT</ref>(pin)];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(value)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_ptr-&gt;<ref refid="group___v_r_e_f___peripheral___access___layer_1ga3aa2323e3b596f8c9f191acb2ad7f75d" kindref="member">PSOR</ref><sp/>=<sp/>(uint32_t)(<sp/>1<sp/>&lt;&lt;<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1ac10b3b1cdf332ee460d4ed0a8b85bb45" kindref="member">PIN2NUM</ref>(pin)<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpio_ptr-&gt;<ref refid="group___v_r_e_f___peripheral___access___layer_1gac53cb29f8a090565bec5e94b6b808572" kindref="member">PCOR</ref><sp/>=<sp/>(uint32_t)(1<sp/>&lt;&lt;<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1ac10b3b1cdf332ee460d4ed0a8b85bb45" kindref="member">PIN2NUM</ref>(pin)<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_p_d_r_v___g_p_i_o_8c_1a87cc22913db98be1ef1dadb20cda7831" kindref="member">gpioToggle</ref><sp/>(<ref refid="_p_d_r_v___g_p_i_o_8h_1aede467d93ddeb5fdeff6023236aa4ad6" kindref="member">pin_t</ref><sp/>pin){</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pin<sp/>&gt;<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1a282f03f9d8560d495e180e7e1703ef0b" kindref="member">PORTNUM2PIN</ref>(<ref refid="_p_d_r_v___g_p_i_o_8h_1adc29c2ff13d900c2f185ee95427fb06ca84a0e8421125bc6ef85e43bab494f68c" kindref="member">PE</ref>,31)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_g_p_i_o___type" kindref="compound">GPIO_Type</ref>*<sp/>gpio_ptr<sp/>=<sp/>GPIO_PTRS[<ref refid="_p_d_r_v___g_p_i_o_8h_1ae544ad185baf9bec7774fd7a09268e9d" kindref="member">PIN2PORT</ref>(pin)];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>gpio_ptr-&gt;<ref refid="group___v_r_e_f___peripheral___access___layer_1ga1c26bce9144a9606d3f8a60dc750b063" kindref="member">PTOR</ref><sp/>=<sp/>(uint32_t)(1<sp/>&lt;&lt;<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1ac10b3b1cdf332ee460d4ed0a8b85bb45" kindref="member">PIN2NUM</ref>(pin));</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_p_d_r_v___g_p_i_o_8c_1a59ce7b278cd2032a644766fd87e2e61a" kindref="member">gpioRead</ref><sp/>(<ref refid="_p_d_r_v___g_p_i_o_8h_1aede467d93ddeb5fdeff6023236aa4ad6" kindref="member">pin_t</ref><sp/>pin){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>pin<sp/>&gt;<sp/><ref refid="_p_d_r_v___g_p_i_o_8h_1a282f03f9d8560d495e180e7e1703ef0b" kindref="member">PORTNUM2PIN</ref>(<ref refid="_p_d_r_v___g_p_i_o_8h_1adc29c2ff13d900c2f185ee95427fb06ca84a0e8421125bc6ef85e43bab494f68c" kindref="member">PE</ref>,31)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//GPIO_Type*<sp/>gpio_ptr<sp/>=<sp/>GPIO_PTRS[PIN2PORT(pin)];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>pdir<sp/>=<sp/>GPIO_PTRS[<ref refid="_p_d_r_v___g_p_i_o_8h_1ae544ad185baf9bec7774fd7a09268e9d" kindref="member">PIN2PORT</ref>(pin)]-&gt;<ref refid="group___v_r_e_f___peripheral___access___layer_1ga1013b95ac09a1205ba0528ad32ad1edc" kindref="member">PDIR</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bit<sp/>=<sp/>pdir&gt;&gt;<ref refid="_p_d_r_v___g_p_i_o_8h_1ac10b3b1cdf332ee460d4ed0a8b85bb45" kindref="member">PIN2NUM</ref>(pin)<sp/>&amp;<sp/>0b1;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bit;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IRQHandler(int32_t<sp/>port)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_p_o_r_t___type" kindref="compound">PORT_Type</ref>*<sp/>port_ptr<sp/>=<sp/>PORT_PTRS[port];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ISFR<sp/>=<sp/>port_ptr-&gt;<ref refid="group___v_r_e_f___peripheral___access___layer_1ga810f6911c38333115775f924be784050" kindref="member">ISFR</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pin<sp/>=<sp/>0;<sp/>pin&lt;<ref refid="_p_d_r_v___g_p_i_o_8c_1adb312c6a2d8064fb21620d1e141111d6" kindref="member">PINS_PER_PORT</ref>;<sp/>pin++)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ISFR&gt;&gt;pin<sp/>&amp;<sp/>0b1)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_ptr-&gt;<ref refid="group___v_r_e_f___peripheral___access___layer_1ga810f6911c38333115775f924be784050" kindref="member">ISFR</ref><sp/>|=<sp/>1&lt;&lt;pin;<sp/></highlight><highlight class="comment">//w1c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*CALLBACKS[<ref refid="_p_d_r_v___g_p_i_o_8c_1adb312c6a2d8064fb21620d1e141111d6" kindref="member">PINS_PER_PORT</ref>*port<sp/>+<sp/>pin])();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="hardware_8h_1a27a122170c1b7feec6fa7247a91ac899" kindref="member">__ISR__</ref><sp/><ref refid="_p_d_r_v___g_p_i_o_8c_1a23bab1118c571fb986315470633d20d3" kindref="member">PORTA_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/>IRQHandler(<ref refid="_p_d_r_v___g_p_i_o_8h_1adc29c2ff13d900c2f185ee95427fb06cae3d8a811f3bf7196f361be4104db68db" kindref="member">PA</ref>);<sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><ref refid="hardware_8h_1a27a122170c1b7feec6fa7247a91ac899" kindref="member">__ISR__</ref><sp/><ref refid="_p_d_r_v___g_p_i_o_8c_1a235248bab056bf6e9490bd77f5ea4953" kindref="member">PORTB_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/>IRQHandler(<ref refid="_p_d_r_v___g_p_i_o_8h_1adc29c2ff13d900c2f185ee95427fb06ca8b7dd81ba2f0d15957795457d92ce139" kindref="member">PB</ref>);<sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="hardware_8h_1a27a122170c1b7feec6fa7247a91ac899" kindref="member">__ISR__</ref><sp/><ref refid="_p_d_r_v___g_p_i_o_8c_1ade3880e81da2b0c4348d766324b8e4d4" kindref="member">PORTC_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/>IRQHandler(<ref refid="_p_d_r_v___g_p_i_o_8h_1adc29c2ff13d900c2f185ee95427fb06caa2c62b62b658ac45e83749e9e9c1cb46" kindref="member">PC</ref>);<sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="hardware_8h_1a27a122170c1b7feec6fa7247a91ac899" kindref="member">__ISR__</ref><sp/><ref refid="_p_d_r_v___g_p_i_o_8c_1a8fd3ee50dc9009ad6273dd3afd6e68ad" kindref="member">PORTD_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/>IRQHandler(<ref refid="_p_d_r_v___g_p_i_o_8h_1adc29c2ff13d900c2f185ee95427fb06caefbc069e0ac4cd293f3ba527bec2befe" kindref="member">PD</ref>);<sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="hardware_8h_1a27a122170c1b7feec6fa7247a91ac899" kindref="member">__ISR__</ref><sp/><ref refid="_p_d_r_v___g_p_i_o_8c_1a54fa8831a9507d69e623def7625bcc2c" kindref="member">PORTE_IRQHandler</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/>IRQHandler(<ref refid="_p_d_r_v___g_p_i_o_8h_1adc29c2ff13d900c2f185ee95427fb06ca84a0e8421125bc6ef85e43bab494f68c" kindref="member">PE</ref>);<sp/>}</highlight></codeline>
    </programlisting>
    <location file="drivers/PDRV_GPIO.c"/>
  </compounddef>
</doxygen>
