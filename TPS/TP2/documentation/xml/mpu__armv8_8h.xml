<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="mpu__armv8_8h" kind="file" language="C++">
    <compoundname>mpu_armv8.h</compoundname>
    <innerclass refid="struct_a_r_m___m_p_u___region__t" prot="public">ARM_MPU_Region_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="mpu__armv8_8h_1a0b51a6c9e4d60a1d2f0d80ddd43e790c" prot="public" static="no">
        <name>ARM_MPU_ARMV8_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="32" column="9" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu__armv8_8h_1ab4bfac6284dc050dc6fa6aeb8e954c2c" prot="public" static="no">
        <name>ARM_MPU_ATTR_DEVICE</name>
        <initializer>( 0U )</initializer>
        <briefdescription>
<para>Attribute for device memory (outer only) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="35" column="9" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu__armv8_8h_1a03266f9660485693eb1baec6ba255ab2" prot="public" static="no">
        <name>ARM_MPU_ATTR_NON_CACHEABLE</name>
        <initializer>( 4U )</initializer>
        <briefdescription>
<para>Attribute for non-cacheable, normal memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="38" column="9" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu__armv8_8h_1ac2f1c567950e3785d75773362b525390" prot="public" static="no">
        <name>ARM_MPU_ATTR_MEMORY_</name>
        <param><defname>NT</defname></param>
        <param><defname>WB</defname></param>
        <param><defname>RA</defname></param>
        <param><defname>WA</defname></param>
        <initializer>(((NT &amp; 1U) &lt;&lt; 3U) | ((WB &amp; 1U) &lt;&lt; 2U) | ((RA &amp; 1U) &lt;&lt; 1U) | (WA &amp; 1U))</initializer>
        <briefdescription>
<para>Attribute for normal memory (outer and inner) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NT</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-Transient: Set to 1 for non-transient data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WB</parametername>
</parameternamelist>
<parameterdescription>
<para>Write-Back: Set to 1 to use write-back update policy. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RA</parametername>
</parameternamelist>
<parameterdescription>
<para>Read Allocation: Set to 1 to use cache allocation on read miss. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WA</parametername>
</parameternamelist>
<parameterdescription>
<para>Write Allocation: Set to 1 to use cache allocation on write miss. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="46" column="9" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu__armv8_8h_1abfa9ae279357044cf5b74e77af22a686" prot="public" static="no">
        <name>ARM_MPU_ATTR_DEVICE_nGnRnE</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>Device memory type non Gathering, non Re-ordering, non Early Write Acknowledgement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="50" column="9" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu__armv8_8h_1a6e08ae44fab85e03fea96ae6a5fcdfb0" prot="public" static="no">
        <name>ARM_MPU_ATTR_DEVICE_nGnRE</name>
        <initializer>(1U)</initializer>
        <briefdescription>
<para>Device memory type non Gathering, non Re-ordering, Early Write Acknowledgement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="53" column="9" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu__armv8_8h_1adcc9977aabb4dc7177d30cbbac1b53d1" prot="public" static="no">
        <name>ARM_MPU_ATTR_DEVICE_nGRE</name>
        <initializer>(2U)</initializer>
        <briefdescription>
<para>Device memory type non Gathering, Re-ordering, Early Write Acknowledgement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="56" column="9" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu__armv8_8h_1a496bcd6a2bbd038d8935049fec9d0fda" prot="public" static="no">
        <name>ARM_MPU_ATTR_DEVICE_GRE</name>
        <initializer>(3U)</initializer>
        <briefdescription>
<para>Device memory type Gathering, Re-ordering, Early Write Acknowledgement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="59" column="9" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu__armv8_8h_1a2c465cc9429b8233bcb9cd7cbef0e54c" prot="public" static="no">
        <name>ARM_MPU_ATTR</name>
        <param><defname>O</defname></param>
        <param><defname>I</defname></param>
        <initializer>(((O &amp; 0xFU) &lt;&lt; 4U) | (((O &amp; 0xFU) != 0U) ? (I &amp; 0xFU) : ((I &amp; 0x3U) &lt;&lt; 2U)))</initializer>
        <briefdescription>
<para>Memory Attribute. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>O</parametername>
</parameternamelist>
<parameterdescription>
<para>Outer memory attributes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>I</parametername>
</parameternamelist>
<parameterdescription>
<para>O == ARM_MPU_ATTR_DEVICE: Device memory attributes, else: Inner memory attributes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="65" column="9" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu__armv8_8h_1a3d0f688198289f72264f73cf72a742e8" prot="public" static="no">
        <name>ARM_MPU_SH_NON</name>
        <initializer>(0U)</initializer>
        <briefdescription>
<para>Normal memory non-shareable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="68" column="9" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu__armv8_8h_1ac4fddbdb9e1350bce6906de33c1fd500" prot="public" static="no">
        <name>ARM_MPU_SH_OUTER</name>
        <initializer>(2U)</initializer>
        <briefdescription>
<para>Normal memory outer shareable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="71" column="9" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu__armv8_8h_1a73c70127f24f34781ad463cbe51d8f6b" prot="public" static="no">
        <name>ARM_MPU_SH_INNER</name>
        <initializer>(3U)</initializer>
        <briefdescription>
<para>Normal memory inner shareable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="74" column="9" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu__armv8_8h_1a81b2aa3fb55cdd5feadff02da10d391b" prot="public" static="no">
        <name>ARM_MPU_AP_</name>
        <param><defname>RO</defname></param>
        <param><defname>NP</defname></param>
        <initializer>(((RO &amp; 1U) &lt;&lt; 1U) | (NP &amp; 1U))</initializer>
        <briefdescription>
<para>Memory access permissions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>RO</parametername>
</parameternamelist>
<parameterdescription>
<para>Read-Only: Set to 1 for read-only memory. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NP</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-Privileged: Set to 1 for non-privileged memory. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="80" column="9" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu__armv8_8h_1afe39c2f98058bcac7e7e0501e64e7a9d" prot="public" static="no">
        <name>ARM_MPU_RBAR</name>
        <param><defname>BASE</defname></param>
        <param><defname>SH</defname></param>
        <param><defname>RO</defname></param>
        <param><defname>NP</defname></param>
        <param><defname>XN</defname></param>
        <initializer>((BASE &amp; MPU_RBAR_BASE_Pos) | \
  ((SH &lt;&lt; MPU_RBAR_SH_Pos) &amp; MPU_RBAR_SH_Msk) | \
  ((<ref refid="mpu__armv8_8h_1a81b2aa3fb55cdd5feadff02da10d391b" kindref="member">ARM_MPU_AP_</ref>(RO, NP) &lt;&lt; MPU_RBAR_AP_Pos) &amp; MPU_RBAR_AP_Msk) | \
  ((XN &lt;&lt; MPU_RBAR_XN_Pos) &amp; MPU_RBAR_XN_Msk))</initializer>
        <briefdescription>
<para>Region Base Address Register value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>BASE</parametername>
</parameternamelist>
<parameterdescription>
<para>The base address bits [31:5] of a memory region. The value is zero extended. Effective address gets 32 byte aligned. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SH</parametername>
</parameternamelist>
<parameterdescription>
<para>Defines the Shareability domain for this memory region. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>RO</parametername>
</parameternamelist>
<parameterdescription>
<para>Read-Only: Set to 1 for a read-only memory region. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NP</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-Privileged: Set to 1 for a non-privileged memory region.  XN eXecute Never: Set to 1 for a non-executable memory region. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="89" column="9" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpu__armv8_8h_1aeaaa071276ba7956944e6c3dc05d677e" prot="public" static="no">
        <name>ARM_MPU_RLAR</name>
        <param><defname>LIMIT</defname></param>
        <param><defname>IDX</defname></param>
        <initializer>((LIMIT &amp; MPU_RLAR_LIMIT_Msk) | \
  ((IDX &lt;&lt; MPU_RLAR_AttrIndx_Pos) &amp; MPU_RLAR_AttrIndx_Msk) | \
  (MPU_RLAR_EN_Msk))</initializer>
        <briefdescription>
<para>Region Limit Address Register value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>LIMIT</parametername>
</parameternamelist>
<parameterdescription>
<para>The limit address bits [31:5] for this memory region. The value is one extended. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IDX</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute index to be associated with this memory region. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="99" column="9" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="mpu__armv8_8h_1a5a3f40314553baccdeea551f86d9a997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__iccarm_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref> void</type>
        <definition>__STATIC_INLINE void ARM_MPU_Enable</definition>
        <argsstring>(uint32_t MPU_Control)</argsstring>
        <name>ARM_MPU_Enable</name>
        <param>
          <type>uint32_t</type>
          <declname>MPU_Control</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable the MPU. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>MPU_Control</parametername>
</parameternamelist>
<parameterdescription>
<para>Default access permissions for unconfigured regions. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="115" column="1" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="115" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="mpu__armv8_8h_1a61814eba4652a0fdfb76bbe222086327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__iccarm_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref> void</type>
        <definition>__STATIC_INLINE void ARM_MPU_Disable</definition>
        <argsstring>(void)</argsstring>
        <name>ARM_MPU_Disable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Disable the MPU. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="127" column="1" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="127" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="mpu__armv8_8h_1a1799413f08a157d636a1491371c15ce2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__iccarm_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref> void</type>
        <definition>__STATIC_INLINE void ARM_MPU_SetMemAttrEx</definition>
        <argsstring>(MPU_Type *mpu, uint8_t idx, uint8_t attr)</argsstring>
        <name>ARM_MPU_SetMemAttrEx</name>
        <param>
          <type>MPU_Type *</type>
          <declname>mpu</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the memory attribute encoding to the given MPU. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mpu</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the MPU to be configured. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute index to be set [0-7] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute value to be set. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="169" column="1" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="169" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="mpu__armv8_8h_1ab5b3c0a53d19c09a5550f1d9071ae65c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__iccarm_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref> void</type>
        <definition>__STATIC_INLINE void ARM_MPU_SetMemAttr</definition>
        <argsstring>(uint8_t idx, uint8_t attr)</argsstring>
        <name>ARM_MPU_SetMemAttr</name>
        <param>
          <type>uint8_t</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the memory attribute encoding. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute index to be set [0-7] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>The attribute value to be set. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="186" column="1" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="186" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="mpu__armv8_8h_1a01fa1151c9ec0ba5de76f908c0999316" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__iccarm_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref> void</type>
        <definition>__STATIC_INLINE void ARM_MPU_ClrRegionEx</definition>
        <argsstring>(MPU_Type *mpu, uint32_t rnr)</argsstring>
        <name>ARM_MPU_ClrRegionEx</name>
        <param>
          <type>MPU_Type *</type>
          <declname>mpu</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>rnr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear and disable the given MPU region of the given MPU. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mpu</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to MPU to be used. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rnr</parametername>
</parameternamelist>
<parameterdescription>
<para>Region number to be cleared. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="206" column="1" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="206" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="mpu__armv8_8h_1a9dcb0afddf4ac351f33f3c7a5169c62c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__iccarm_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref> void</type>
        <definition>__STATIC_INLINE void ARM_MPU_ClrRegion</definition>
        <argsstring>(uint32_t rnr)</argsstring>
        <name>ARM_MPU_ClrRegion</name>
        <param>
          <type>uint32_t</type>
          <declname>rnr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear and disable the given MPU region. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnr</parametername>
</parameternamelist>
<parameterdescription>
<para>Region number to be cleared. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="215" column="1" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="mpu__armv8_8h_1a3d50ba8546252bea959e45c8fdf16993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__iccarm_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref> void</type>
        <definition>__STATIC_INLINE void ARM_MPU_SetRegionEx</definition>
        <argsstring>(MPU_Type *mpu, uint32_t rnr, uint32_t rbar, uint32_t rlar)</argsstring>
        <name>ARM_MPU_SetRegionEx</name>
        <param>
          <type>MPU_Type *</type>
          <declname>mpu</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>rnr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>rbar</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>rlar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure the given MPU region of the given MPU. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mpu</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to MPU to be used. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rnr</parametername>
</parameternamelist>
<parameterdescription>
<para>Region number to be configured. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rbar</parametername>
</parameternamelist>
<parameterdescription>
<para>Value for RBAR register. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rlar</parametername>
</parameternamelist>
<parameterdescription>
<para>Value for RLAR register. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="236" column="1" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="236" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="mpu__armv8_8h_1a6d7f220015c070c0e469948c1775ee3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__iccarm_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref> void</type>
        <definition>__STATIC_INLINE void ARM_MPU_SetRegion</definition>
        <argsstring>(uint32_t rnr, uint32_t rbar, uint32_t rlar)</argsstring>
        <name>ARM_MPU_SetRegion</name>
        <param>
          <type>uint32_t</type>
          <declname>rnr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>rbar</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>rlar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure the given MPU region. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnr</parametername>
</parameternamelist>
<parameterdescription>
<para>Region number to be configured. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rbar</parametername>
</parameternamelist>
<parameterdescription>
<para>Value for RBAR register. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rlar</parametername>
</parameternamelist>
<parameterdescription>
<para>Value for RLAR register. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="248" column="1" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="mpu__armv8_8h_1a71ca7368cfeccb262823726de9985aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__iccarm_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref> void</type>
        <definition>__STATIC_INLINE void orderedCpy</definition>
        <argsstring>(volatile uint32_t *dst, const uint32_t *__RESTRICT src, uint32_t len)</argsstring>
        <name>orderedCpy</name>
        <param>
          <type>volatile uint32_t *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const uint32_t *<ref refid="cmsis__iccarm_8h_1a378ac21329d33f561f90265eef89f564" kindref="member">__RESTRICT</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Memcopy with strictly ordered memory access, e.g. for register targets. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination data is copied to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Source data is copied from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of data words to be copied. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="270" column="1" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="270" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="mpu__armv8_8h_1ab6094419f2abd678f1f3b121cd115049" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__iccarm_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref> void</type>
        <definition>__STATIC_INLINE void ARM_MPU_LoadEx</definition>
        <argsstring>(MPU_Type *mpu, uint32_t rnr, ARM_MPU_Region_t const *table, uint32_t cnt)</argsstring>
        <name>ARM_MPU_LoadEx</name>
        <param>
          <type>MPU_Type *</type>
          <declname>mpu</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>rnr</declname>
        </param>
        <param>
          <type><ref refid="struct_a_r_m___m_p_u___region__t" kindref="compound">ARM_MPU_Region_t</ref> const *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load the given number of MPU regions from a table to the given MPU. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mpu</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the MPU registers to be used. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rnr</parametername>
</parameternamelist>
<parameterdescription>
<para>First region number to be configured. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the MPU configuration table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of regions to be configured. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="285" column="1" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="285" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="mpu__armv8_8h_1aca76614e3091c7324aa9d60e634621bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cmsis__iccarm_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref> void</type>
        <definition>__STATIC_INLINE void ARM_MPU_Load</definition>
        <argsstring>(uint32_t rnr, ARM_MPU_Region_t const *table, uint32_t cnt)</argsstring>
        <name>ARM_MPU_Load</name>
        <param>
          <type>uint32_t</type>
          <declname>rnr</declname>
        </param>
        <param>
          <type><ref refid="struct_a_r_m___m_p_u___region__t" kindref="compound">ARM_MPU_Region_t</ref> const *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load the given number of MPU regions from a table. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rnr</parametername>
</parameternamelist>
<parameterdescription>
<para>First region number to be configured. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the MPU configuration table. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cnt</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of regions to be configured. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="SDK/CMSIS/mpu_armv8.h" line="315" column="1" bodyfile="SDK/CMSIS/mpu_armv8.h" bodystart="315" bodyend="318"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>@file<sp/><sp/><sp/><sp/><sp/>mpu_armv8.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/><sp/>CMSIS<sp/>MPU<sp/>API<sp/>for<sp/>Armv8-M<sp/>MPU</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>@version<sp/><sp/>V5.0.4</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>@date<sp/><sp/><sp/><sp/><sp/>10.<sp/>January<sp/>2018</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017-2018<sp/>Arm<sp/>Limited.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>SPDX-License-Identifier:<sp/>Apache-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);<sp/>you<sp/>may</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,<sp/>WITHOUT</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/><sp/><sp/>defined<sp/>(<sp/>__ICCARM__<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>system_include<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>treat<sp/>file<sp/>as<sp/>system<sp/>include<sp/>file<sp/>for<sp/>MISRA<sp/>check<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined<sp/>(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#pragma<sp/>clang<sp/>system_header<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>treat<sp/>file<sp/>as<sp/>system<sp/>include<sp/>file<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ARM_MPU_ARMV8_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="mpu__armv8_8h_1a0b51a6c9e4d60a1d2f0d80ddd43e790c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARM_MPU_ARMV8_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="mpu__armv8_8h_1ab4bfac6284dc050dc6fa6aeb8e954c2c" refkind="member"><highlight class="preprocessor">#define<sp/>ARM_MPU_ATTR_DEVICE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>0U<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="mpu__armv8_8h_1a03266f9660485693eb1baec6ba255ab2" refkind="member"><highlight class="preprocessor">#define<sp/>ARM_MPU_ATTR_NON_CACHEABLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>4U<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="mpu__armv8_8h_1ac2f1c567950e3785d75773362b525390" refkind="member"><highlight class="preprocessor">#define<sp/>ARM_MPU_ATTR_MEMORY_(NT,<sp/>WB,<sp/>RA,<sp/>WA)<sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/>(((NT<sp/>&amp;<sp/>1U)<sp/>&lt;&lt;<sp/>3U)<sp/>|<sp/>((WB<sp/>&amp;<sp/>1U)<sp/>&lt;&lt;<sp/>2U)<sp/>|<sp/>((RA<sp/>&amp;<sp/>1U)<sp/>&lt;&lt;<sp/>1U)<sp/>|<sp/>(WA<sp/>&amp;<sp/>1U))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="mpu__armv8_8h_1abfa9ae279357044cf5b74e77af22a686" refkind="member"><highlight class="preprocessor">#define<sp/>ARM_MPU_ATTR_DEVICE_nGnRnE<sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="mpu__armv8_8h_1a6e08ae44fab85e03fea96ae6a5fcdfb0" refkind="member"><highlight class="preprocessor">#define<sp/>ARM_MPU_ATTR_DEVICE_nGnRE<sp/><sp/>(1U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="mpu__armv8_8h_1adcc9977aabb4dc7177d30cbbac1b53d1" refkind="member"><highlight class="preprocessor">#define<sp/>ARM_MPU_ATTR_DEVICE_nGRE<sp/><sp/><sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="mpu__armv8_8h_1a496bcd6a2bbd038d8935049fec9d0fda" refkind="member"><highlight class="preprocessor">#define<sp/>ARM_MPU_ATTR_DEVICE_GRE<sp/><sp/><sp/><sp/>(3U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="mpu__armv8_8h_1a2c465cc9429b8233bcb9cd7cbef0e54c" refkind="member"><highlight class="preprocessor">#define<sp/>ARM_MPU_ATTR(O,<sp/>I)<sp/>(((O<sp/>&amp;<sp/>0xFU)<sp/>&lt;&lt;<sp/>4U)<sp/>|<sp/>(((O<sp/>&amp;<sp/>0xFU)<sp/>!=<sp/>0U)<sp/>?<sp/>(I<sp/>&amp;<sp/>0xFU)<sp/>:<sp/>((I<sp/>&amp;<sp/>0x3U)<sp/>&lt;&lt;<sp/>2U)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="mpu__armv8_8h_1a3d0f688198289f72264f73cf72a742e8" refkind="member"><highlight class="preprocessor">#define<sp/>ARM_MPU_SH_NON<sp/><sp/><sp/>(0U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="mpu__armv8_8h_1ac4fddbdb9e1350bce6906de33c1fd500" refkind="member"><highlight class="preprocessor">#define<sp/>ARM_MPU_SH_OUTER<sp/>(2U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="mpu__armv8_8h_1a73c70127f24f34781ad463cbe51d8f6b" refkind="member"><highlight class="preprocessor">#define<sp/>ARM_MPU_SH_INNER<sp/>(3U)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="mpu__armv8_8h_1a81b2aa3fb55cdd5feadff02da10d391b" refkind="member"><highlight class="preprocessor">#define<sp/>ARM_MPU_AP_(RO,<sp/>NP)<sp/>(((RO<sp/>&amp;<sp/>1U)<sp/>&lt;&lt;<sp/>1U)<sp/>|<sp/>(NP<sp/>&amp;<sp/>1U))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="mpu__armv8_8h_1afe39c2f98058bcac7e7e0501e64e7a9d" refkind="member"><highlight class="preprocessor">#define<sp/>ARM_MPU_RBAR(BASE,<sp/>SH,<sp/>RO,<sp/>NP,<sp/>XN)<sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/>((BASE<sp/>&amp;<sp/>MPU_RBAR_BASE_Pos)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"><sp/><sp/>((SH<sp/>&lt;&lt;<sp/>MPU_RBAR_SH_Pos)<sp/>&amp;<sp/>MPU_RBAR_SH_Msk)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/>((ARM_MPU_AP_(RO,<sp/>NP)<sp/>&lt;&lt;<sp/>MPU_RBAR_AP_Pos)<sp/>&amp;<sp/>MPU_RBAR_AP_Msk)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"><sp/><sp/>((XN<sp/>&lt;&lt;<sp/>MPU_RBAR_XN_Pos)<sp/>&amp;<sp/>MPU_RBAR_XN_Msk))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="mpu__armv8_8h_1aeaaa071276ba7956944e6c3dc05d677e" refkind="member"><highlight class="preprocessor">#define<sp/>ARM_MPU_RLAR(LIMIT,<sp/>IDX)<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/>((LIMIT<sp/>&amp;<sp/>MPU_RLAR_LIMIT_Msk)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/>((IDX<sp/>&lt;&lt;<sp/>MPU_RLAR_AttrIndx_Pos)<sp/>&amp;<sp/>MPU_RLAR_AttrIndx_Msk)<sp/>|<sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/>(MPU_RLAR_EN_Msk))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>uint32_t<sp/>RBAR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109" refid="struct_a_r_m___m_p_u___region__t_1ae9f3dcae5bc76cea6379c01975cc335b" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="struct_a_r_m___m_p_u___region__t_1ae9f3dcae5bc76cea6379c01975cc335b" kindref="member">RLAR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}<sp/><ref refid="struct_a_r_m___m_p_u___region__t" kindref="compound">ARM_MPU_Region_t</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115" refid="mpu__armv8_8h_1a5a3f40314553baccdeea551f86d9a997" refkind="member"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__armv8_8h_1a5a3f40314553baccdeea551f86d9a997" kindref="member">ARM_MPU_Enable</ref>(uint32_t<sp/>MPU_Control)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="group___c_m_s_i_s___core___instruction_interface_1ga7fe277f5385d23b9c44b2cbda1577ce9" kindref="member">__DSB</ref>();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="group___c_m_s_i_s___core___instruction_interface_1gae26c2b3961e702aeabc24d4984ebd369" kindref="member">__ISB</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>MPU-&gt;CTRL<sp/>=<sp/>MPU_Control<sp/>|<sp/>MPU_CTRL_ENABLE_Msk;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SCB_SHCSR_MEMFAULTENA_Msk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="group___c_m_s_i_s__core__base_1gaaaf6477c2bde2f00f99e3c2fd1060b01" kindref="member">SCB</ref>-&gt;SHCSR<sp/>|=<sp/><ref refid="group___c_m_s_i_s___s_c_b_1gaf084424fa1f69bea36a1c44899d83d17" kindref="member">SCB_SHCSR_MEMFAULTENA_Msk</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="mpu__armv8_8h_1a61814eba4652a0fdfb76bbe222086327" refkind="member"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__armv8_8h_1a61814eba4652a0fdfb76bbe222086327" kindref="member">ARM_MPU_Disable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="group___c_m_s_i_s___core___instruction_interface_1ga7fe277f5385d23b9c44b2cbda1577ce9" kindref="member">__DSB</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="group___c_m_s_i_s___core___instruction_interface_1gae26c2b3961e702aeabc24d4984ebd369" kindref="member">__ISB</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SCB_SHCSR_MEMFAULTENA_Msk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="group___c_m_s_i_s__core__base_1gaaaf6477c2bde2f00f99e3c2fd1060b01" kindref="member">SCB</ref>-&gt;SHCSR<sp/>&amp;=<sp/>~<ref refid="group___c_m_s_i_s___s_c_b_1gaf084424fa1f69bea36a1c44899d83d17" kindref="member">SCB_SHCSR_MEMFAULTENA_Msk</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>MPU-&gt;CTRL<sp/><sp/>&amp;=<sp/>~MPU_CTRL_ENABLE_Msk;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MPU_NS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ARM_MPU_Enable_NS(uint32_t<sp/>MPU_Control)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><ref refid="group___c_m_s_i_s___core___instruction_interface_1ga7fe277f5385d23b9c44b2cbda1577ce9" kindref="member">__DSB</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><ref refid="group___c_m_s_i_s___core___instruction_interface_1gae26c2b3961e702aeabc24d4984ebd369" kindref="member">__ISB</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>MPU_NS-&gt;CTRL<sp/>=<sp/>MPU_Control<sp/>|<sp/>MPU_CTRL_ENABLE_Msk;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SCB_SHCSR_MEMFAULTENA_Msk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>SCB_NS-&gt;SHCSR<sp/>|=<sp/><ref refid="group___c_m_s_i_s___s_c_b_1gaf084424fa1f69bea36a1c44899d83d17" kindref="member">SCB_SHCSR_MEMFAULTENA_Msk</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ARM_MPU_Disable_NS(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="group___c_m_s_i_s___core___instruction_interface_1ga7fe277f5385d23b9c44b2cbda1577ce9" kindref="member">__DSB</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="group___c_m_s_i_s___core___instruction_interface_1gae26c2b3961e702aeabc24d4984ebd369" kindref="member">__ISB</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SCB_SHCSR_MEMFAULTENA_Msk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>SCB_NS-&gt;SHCSR<sp/>&amp;=<sp/>~<ref refid="group___c_m_s_i_s___s_c_b_1gaf084424fa1f69bea36a1c44899d83d17" kindref="member">SCB_SHCSR_MEMFAULTENA_Msk</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>MPU_NS-&gt;CTRL<sp/><sp/>&amp;=<sp/>~MPU_CTRL_ENABLE_Msk;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="mpu__armv8_8h_1a1799413f08a157d636a1491371c15ce2" refkind="member"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__armv8_8h_1a1799413f08a157d636a1491371c15ce2" kindref="member">ARM_MPU_SetMemAttrEx</ref>(MPU_Type*<sp/>mpu,<sp/>uint8_t<sp/>idx,<sp/>uint8_t<sp/>attr)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>reg<sp/>=<sp/>idx<sp/>/<sp/>4U;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>pos<sp/>=<sp/>((idx<sp/>%<sp/>4U)<sp/>*<sp/>8U);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>mask<sp/>=<sp/>0xFFU<sp/>&lt;&lt;<sp/>pos;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg<sp/>&gt;=<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mpu-&gt;MAIR)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mpu-&gt;MAIR[0])))<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>invalid<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>mpu-&gt;MAIR[reg]<sp/>=<sp/>((mpu-&gt;MAIR[reg]<sp/>&amp;<sp/>~mask)<sp/>|<sp/>((attr<sp/>&lt;&lt;<sp/>pos)<sp/>&amp;<sp/>mask));</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="mpu__armv8_8h_1ab5b3c0a53d19c09a5550f1d9071ae65c" refkind="member"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__armv8_8h_1ab5b3c0a53d19c09a5550f1d9071ae65c" kindref="member">ARM_MPU_SetMemAttr</ref>(uint8_t<sp/>idx,<sp/>uint8_t<sp/>attr)</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="mpu__armv8_8h_1a1799413f08a157d636a1491371c15ce2" kindref="member">ARM_MPU_SetMemAttrEx</ref>(MPU,<sp/>idx,<sp/>attr);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MPU_NS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ARM_MPU_SetMemAttr_NS(uint8_t<sp/>idx,<sp/>uint8_t<sp/>attr)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="mpu__armv8_8h_1a1799413f08a157d636a1491371c15ce2" kindref="member">ARM_MPU_SetMemAttrEx</ref>(MPU_NS,<sp/>idx,<sp/>attr);</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="mpu__armv8_8h_1a01fa1151c9ec0ba5de76f908c0999316" refkind="member"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__armv8_8h_1a01fa1151c9ec0ba5de76f908c0999316" kindref="member">ARM_MPU_ClrRegionEx</ref>(MPU_Type*<sp/>mpu,<sp/>uint32_t<sp/>rnr)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>mpu-&gt;RNR<sp/>=<sp/>rnr;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>mpu-&gt;RLAR<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="mpu__armv8_8h_1a9dcb0afddf4ac351f33f3c7a5169c62c" refkind="member"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__armv8_8h_1a9dcb0afddf4ac351f33f3c7a5169c62c" kindref="member">ARM_MPU_ClrRegion</ref>(uint32_t<sp/>rnr)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="mpu__armv8_8h_1a01fa1151c9ec0ba5de76f908c0999316" kindref="member">ARM_MPU_ClrRegionEx</ref>(MPU,<sp/>rnr);</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MPU_NS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ARM_MPU_ClrRegion_NS(uint32_t<sp/>rnr)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{<sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="mpu__armv8_8h_1a01fa1151c9ec0ba5de76f908c0999316" kindref="member">ARM_MPU_ClrRegionEx</ref>(MPU_NS,<sp/>rnr);</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="mpu__armv8_8h_1a3d50ba8546252bea959e45c8fdf16993" refkind="member"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__armv8_8h_1a3d50ba8546252bea959e45c8fdf16993" kindref="member">ARM_MPU_SetRegionEx</ref>(MPU_Type*<sp/>mpu,<sp/>uint32_t<sp/>rnr,<sp/>uint32_t<sp/>rbar,<sp/>uint32_t<sp/>rlar)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>mpu-&gt;RNR<sp/>=<sp/>rnr;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>mpu-&gt;RBAR<sp/>=<sp/>rbar;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>mpu-&gt;RLAR<sp/>=<sp/>rlar;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="mpu__armv8_8h_1a6d7f220015c070c0e469948c1775ee3d" refkind="member"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__armv8_8h_1a6d7f220015c070c0e469948c1775ee3d" kindref="member">ARM_MPU_SetRegion</ref>(uint32_t<sp/>rnr,<sp/>uint32_t<sp/>rbar,<sp/>uint32_t<sp/>rlar)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="mpu__armv8_8h_1a3d50ba8546252bea959e45c8fdf16993" kindref="member">ARM_MPU_SetRegionEx</ref>(MPU,<sp/>rnr,<sp/>rbar,<sp/>rlar);</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MPU_NS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ARM_MPU_SetRegion_NS(uint32_t<sp/>rnr,<sp/>uint32_t<sp/>rbar,<sp/>uint32_t<sp/>rlar)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><ref refid="mpu__armv8_8h_1a3d50ba8546252bea959e45c8fdf16993" kindref="member">ARM_MPU_SetRegionEx</ref>(MPU_NS,<sp/>rnr,<sp/>rbar,<sp/>rlar);<sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="mpu__armv8_8h_1a71ca7368cfeccb262823726de9985aa2" refkind="member"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__armv8_8h_1a71ca7368cfeccb262823726de9985aa2" kindref="member">orderedCpy</ref>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t*<sp/><ref refid="cmsis__armcc_8h_1a378ac21329d33f561f90265eef89f564" kindref="member">__RESTRICT</ref><sp/>src,<sp/>uint32_t<sp/>len)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0U;<sp/>i<sp/>&lt;<sp/>len;<sp/>++i)<sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>dst[i]<sp/>=<sp/>src[i];</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="mpu__armv8_8h_1ab6094419f2abd678f1f3b121cd115049" refkind="member"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__armv8_8h_1ab6094419f2abd678f1f3b121cd115049" kindref="member">ARM_MPU_LoadEx</ref>(MPU_Type*<sp/>mpu,<sp/>uint32_t<sp/>rnr,<sp/><ref refid="struct_a_r_m___m_p_u___region__t" kindref="compound">ARM_MPU_Region_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>table,<sp/>uint32_t<sp/>cnt)<sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>rowWordSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_a_r_m___m_p_u___region__t" kindref="compound">ARM_MPU_Region_t</ref>)/4U;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnt<sp/>==<sp/>1U)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>mpu-&gt;RNR<sp/>=<sp/>rnr;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpu__armv8_8h_1a71ca7368cfeccb262823726de9985aa2" kindref="member">orderedCpy</ref>(&amp;(mpu-&gt;RBAR),<sp/>&amp;(table-&gt;<ref refid="struct_a_r_m___m_p_u___region__t_1a0b30f076910cb037e031563046dd5e10" kindref="member">RBAR</ref>),<sp/>rowWordSize);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rnrBase<sp/><sp/><sp/>=<sp/>rnr<sp/>&amp;<sp/>~(MPU_TYPE_RALIASES-1U);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>rnrOffset<sp/>=<sp/>rnr<sp/>%<sp/>MPU_TYPE_RALIASES;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>mpu-&gt;RNR<sp/>=<sp/>rnrBase;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((rnrOffset<sp/>+<sp/>cnt)<sp/>&gt;<sp/>MPU_TYPE_RALIASES)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>c<sp/>=<sp/>MPU_TYPE_RALIASES<sp/>-<sp/>rnrOffset;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpu__armv8_8h_1a71ca7368cfeccb262823726de9985aa2" kindref="member">orderedCpy</ref>(&amp;(mpu-&gt;RBAR)+(rnrOffset*2U),<sp/>&amp;(table-&gt;<ref refid="struct_a_r_m___m_p_u___region__t_1a0b30f076910cb037e031563046dd5e10" kindref="member">RBAR</ref>),<sp/>c*rowWordSize);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table<sp/>+=<sp/>c;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cnt<sp/>-=<sp/>c;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rnrOffset<sp/>=<sp/>0U;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rnrBase<sp/>+=<sp/>MPU_TYPE_RALIASES;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mpu-&gt;RNR<sp/>=<sp/>rnrBase;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpu__armv8_8h_1a71ca7368cfeccb262823726de9985aa2" kindref="member">orderedCpy</ref>(&amp;(mpu-&gt;RBAR)+(rnrOffset*2U),<sp/>&amp;(table-&gt;<ref refid="struct_a_r_m___m_p_u___region__t_1a0b30f076910cb037e031563046dd5e10" kindref="member">RBAR</ref>),<sp/>cnt*rowWordSize);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="mpu__armv8_8h_1aca76614e3091c7324aa9d60e634621bf" refkind="member"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpu__armv8_8h_1aca76614e3091c7324aa9d60e634621bf" kindref="member">ARM_MPU_Load</ref>(uint32_t<sp/>rnr,<sp/><ref refid="struct_a_r_m___m_p_u___region__t" kindref="compound">ARM_MPU_Region_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>table,<sp/>uint32_t<sp/>cnt)<sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="mpu__armv8_8h_1ab6094419f2abd678f1f3b121cd115049" kindref="member">ARM_MPU_LoadEx</ref>(MPU,<sp/>rnr,<sp/>table,<sp/>cnt);</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MPU_NS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><ref refid="cmsis__armcc_8h_1aba87361bfad2ae52cfe2f40c1a1dbf9c" kindref="member">__STATIC_INLINE</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ARM_MPU_Load_NS(uint32_t<sp/>rnr,<sp/><ref refid="struct_a_r_m___m_p_u___region__t" kindref="compound">ARM_MPU_Region_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>table,<sp/>uint32_t<sp/>cnt)<sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><ref refid="mpu__armv8_8h_1ab6094419f2abd678f1f3b121cd115049" kindref="member">ARM_MPU_LoadEx</ref>(MPU_NS,<sp/>rnr,<sp/>table,<sp/>cnt);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="SDK/CMSIS/mpu_armv8.h"/>
  </compounddef>
</doxygen>
